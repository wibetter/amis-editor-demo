(self.webpackChunkamis_editor_demo=self.webpackChunkamis_editor_demo||[]).push([[3086],{14449:function(e,a,t){"use strict";t.d(a,{tD:function(){return n.tDm}});var i,n=t(86058),o="suda-i18n-locale",c=i=~(i=~(i=navigator.language||navigator.userLanguage).indexOf("en")?"en-US":i).indexOf("zh")||~i.indexOf("cn")?"zh-CN":i;(0,n.n$p)(localStorage.getItem(o)||c),(0,n.YCF)(localStorage.getItem(o)||c)},20430:function(e,a,t){"use strict";t.d(a,{$:function(){return la},A:function(){return z},B:function(){return Ya},C:function(){return Da},D:function(){return _a},E:function(){return wa},F:function(){return va},G:function(){return ye},H:function(){return Se},I:function(){return ha},J:function(){return A},K:function(){return at},L:function(){return Ta},M:function(){return ve},N:function(){return Oe},O:function(){return we},P:function(){return La},Q:function(){return da},R:function(){return ge},S:function(){return qe},T:function(){return Ha},U:function(){return de},V:function(){return Oa},W:function(){return na},X:function(){return ta},Y:function(){return Ce},Z:function(){return Ca},_:function(){return w},a:function(){return se},a0:function(){return ga},a1:function(){return ya},a2:function(){return ma},a3:function(){return xa},a4:function(){return pa},a5:function(){return ua},a6:function(){return ca},a7:function(){return ka},a8:function(){return Ua},a9:function(){return Na},aa:function(){return J},ab:function(){return Ie},ac:function(){return za},ad:function(){return Wa},ae:function(){return Ra},af:function(){return ja},ag:function(){return qa},ah:function(){return Ea},ai:function(){return V},aj:function(){return N},ak:function(){return R},al:function(){return H},am:function(){return $a},an:function(){return Qa},ao:function(){return F},ap:function(){return P},aq:function(){return U},ar:function(){return tt},as:function(){return j},at:function(){return Za},au:function(){return B},av:function(){return Je},aw:function(){return $},ax:function(){return W},c:function(){return fe},d:function(){return be},e:function(){return he},f:function(){return le},g:function(){return re},h:function(){return Qe},i:function(){return Ka},j:function(){return Ga},k:function(){return Ja},l:function(){return _},m:function(){return T},n:function(){return Ia},o:function(){return ea},p:function(){return aa},q:function(){return oe},r:function(){return Sa},s:function(){return Ma},t:function(){return ia},v:function(){return ra},w:function(){return Ba},x:function(){return je},y:function(){return Aa},z:function(){return Pa}});var i=t(44383),n=t.n(i),o=t(91998),c=t.n(o),d=t(7309),r=t.n(d),s=t(23805),f=t.n(s),b=t(56449),h=t.n(b),l=t(85015),p=t.n(l),u=t(2404),g=t.n(u),m=t(86058),y=t(90179),x=t.n(y),C=t(14449);function w(e,a,t,i){var n,o=arguments.length,c=o<3?a:null===i?i=Object.getOwnPropertyDescriptor(a,t):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)c=Reflect.decorate(e,a,t,i);else for(var d=e.length-1;d>=0;d--)(n=e[d])&&(c=(o<3?n(c):o>3?n(a,t,c):n(a,t))||c);return o>3&&c&&Object.defineProperty(a,t,c),c}"function"==typeof SuppressedError&&SuppressedError;const v={"河北":"hebei","山西":"shanxi","内蒙古":"neimenggu","辽宁":"liaoning","吉林":"jilin","黑龙江":"heilongjiang","江苏":"jiangsu","浙江":"zhejiang","安徽":"anhui","福建":"fujian","江西":"jiangxi","山东":"shandong","河南":"henan","湖北":"hubei","湖南":"hunan","广东":"guangdong","广西":"guangxi","海南":"hainan","四川":"sichuan","贵州":"guizhou","云南":"yunnan","西藏":"xizang","陕西":"shanxi1","甘肃":"gansu","青海":"qinghai","宁夏":"ningxia","新疆":"xinjiang","台湾":"taiwan"},S={...v,"澳门":"aomen","北京":"beijing","重庆":"chongqing","上海":"shanghai","天津":"tianjin","香港":"xianggang","石家庄":"hebei_shijiazhuang","唐山":"hebei_tangshan","秦皇岛":"hebei_qinhuangdao","邯郸":"hebei_handan","邢台":"hebei_xingtai","保定":"hebei_baoding","张家口":"hebei_zhangjiakou","承德":"hebei_chengde","沧州":"hebei_cangzhou","廊坊":"hebei_langfang","衡水":"hebei_hengshui","太原":"shanxi_taiyuan","大同":"shanxi_datong","阳泉":"shanxi_yangquan","长治":"shanxi_changzhi","晋城":"shanxi_jincheng","朔州":"shanxi_shuozhou","晋中":"shanxi_jinzhong","运城":"shanxi_yuncheng","忻州":"shanxi_xinzhou","临汾":"shanxi_linfen","吕梁":"shanxi_lvliang","呼和浩特":"neimenggu_huhehaote","包头":"neimenggu_baotou","乌海":"neimenggu_wuhai","赤峰":"neimenggu_chifeng","通辽":"neimenggu_tongliao","鄂尔多斯":"neimenggu_eerduosi","呼伦贝尔":"neimenggu_hulunbeier","巴彦淖尔":"neimenggu_bayannaoer","乌兰察布":"neimenggu_wulanchabu","兴安盟":"neimenggu_xinganmeng","锡林郭勒盟":"neimenggu_xilinguolemeng","阿拉善盟":"neimenggu_alashanmeng","沈阳":"liaoning_shenyang","大连":"liaoning_dalian","鞍山":"liaoning_anshan","抚顺":"liaoning_fushun","本溪":"liaoning_benxi","丹东":"liaoning_dandong","锦州":"liaoning_jinzhou","营口":"liaoning_yingkou","阜新":"liaoning_fuxin","辽阳":"liaoning_liaoyang","盘锦":"liaoning_panjin","铁岭":"liaoning_tieling","朝阳":"liaoning_chaoyang","葫芦岛":"liaoning_huludao","长春":"jilin_changchun","吉林":"jilin_jilin","四平":"jilin_siping","辽源":"jilin_liaoyuan","通化":"jilin_tonghua","白山":"jilin_baishan","松原":"jilin_songyuan","白城":"jilin_baicheng","延边朝鲜族自治州":"jilin_yanbianchaoxianzuzizhizhou","哈尔滨":"heilongjiang_haerbin","齐齐哈尔":"heilongjiang_qiqihaer","鸡西":"heilongjiang_jixi","鹤岗":"heilongjiang_hegang","双鸭山":"heilongjiang_shuangyashan","大庆":"heilongjiang_daqing","伊春":"heilongjiang_yichun","佳木斯":"heilongjiang_jiamusi","七台河":"heilongjiang_qitaihe","牡丹江":"heilongjiang_mudanjiang","黑河":"heilongjiang_heihe","绥化":"heilongjiang_suihua","大兴安岭地区":"heilongjiang_daxinganlingdiqu","南京":"jiangsu_nanjing","无锡":"jiangsu_wuxi","徐州":"jiangsu_xuzhou","常州":"jiangsu_changzhou","苏州":"jiangsu_suzhou","南通":"jiangsu_nantong","连云港":"jiangsu_lianyungang","淮安":"jiangsu_huaian","盐城":"jiangsu_yancheng","扬州":"jiangsu_yangzhou","镇江":"jiangsu_zhenjiang","泰州":"jiangsu_taizhou","宿迁":"jiangsu_suqian","杭州":"zhejiang_hangzhou","宁波":"zhejiang_ningbo","温州":"zhejiang_wenzhou","嘉兴":"zhejiang_jiaxing","湖州":"zhejiang_huzhou","绍兴":"zhejiang_shaoxing","金华":"zhejiang_jinhua","衢州":"zhejiang_quzhou","舟山":"zhejiang_zhoushan","台州":"zhejiang_taizhou","丽水":"zhejiang_lishui","合肥":"anhui_hefei","芜湖":"anhui_wuhu","蚌埠":"anhui_bengbu","淮南":"anhui_huainan","马鞍山":"anhui_maanshan","淮北":"anhui_huaibei","铜陵":"anhui_tongling","安庆":"anhui_anqing","黄山":"anhui_huangshan","滁州":"anhui_chuzhou","阜阳":"anhui_fuyang","宿州":"anhui_suzhou","六安":"anhui_liuan","亳州":"anhui_bozhou","池州":"anhui_chizhou","宣城":"anhui_xuancheng","福州":"fujian_fuzhou","厦门":"fujian_xiamen","莆田":"fujian_putian","三明":"fujian_sanming","泉州":"fujian_quanzhou","漳州":"fujian_zhangzhou","南平":"fujian_nanping","龙岩":"fujian_longyan","宁德":"fujian_ningde","南昌":"jiangxi_nanchang","景德镇":"jiangxi_jingdezhen","萍乡":"jiangxi_pingxiang","九江":"jiangxi_jiujiang","新余":"jiangxi_xinyu","鹰潭":"jiangxi_yingtan","赣州":"jiangxi_ganzhou","吉安":"jiangxi_jian","宜春":"jiangxi_yichun","抚州":"jiangxi_fuzhou","上饶":"jiangxi_shangrao","济南":"shandong_jinan","青岛":"shandong_qingdao","淄博":"shandong_zibo","枣庄":"shandong_zaozhuang","东营":"shandong_dongying","烟台":"shandong_yantai","潍坊":"shandong_weifang","济宁":"shandong_jining","泰安":"shandong_taian","威海":"shandong_weihai","日照":"shandong_rizhao","临沂":"shandong_linyi","德州":"shandong_dezhou","聊城":"shandong_liaocheng","滨州":"shandong_binzhou","菏泽":"shandong_heze","郑州":"henan_zhengzhou","开封":"henan_kaifeng","洛阳":"henan_luoyang","平顶山":"henan_pingdingshan","安阳":"henan_anyang","鹤壁":"henan_hebi","新乡":"henan_xinxiang","焦作":"henan_jiaozuo","濮阳":"henan_puyang","许昌":"henan_xuchang","漯河":"henan_luohe","三门峡":"henan_sanmenxia","南阳":"henan_nanyang","商丘":"henan_shangqiu","信阳":"henan_xinyang","周口":"henan_zhoukou","驻马店":"henan_zhumadian","济源":"henan_jiyuan","武汉":"hubei_wuhan","黄石":"hubei_huangshi","十堰":"hubei_shiyan","宜昌":"hubei_yichang","襄阳":"hubei_xiangyang","鄂州":"hubei_ezhou","荆门":"hubei_jingmen","孝感":"hubei_xiaogan","荆州":"hubei_jingzhou","黄冈":"hubei_huanggang","咸宁":"hubei_xianning","随州":"hubei_suizhou","恩施土家族苗族自治州":"hubei_enshitujiazumiaozuzizhizhou","仙桃":"hubei_xiantao","潜江":"hubei_qianjiang","天门":"hubei_tianmen","神农架林区":"hubei_shennongjialinqu","长沙":"hunan_changsha","株洲":"hunan_zhuzhou","湘潭":"hunan_xiangtan","衡阳":"hunan_hengyang","邵阳":"hunan_shaoyang","岳阳":"hunan_yueyang","常德":"hunan_changde","张家界":"hunan_zhangjiajie","益阳":"hunan_yiyang","郴州":"hunan_chenzhou","永州":"hunan_yongzhou","怀化":"hunan_huaihua","娄底":"hunan_loudi","湘西土家族苗族自治州":"hunan_xiangxitujiazumiaozuzizhizhou","广州":"guangdong_guangzhou","韶关":"guangdong_shaoguan","深圳":"guangdong_shenzhen","珠海":"guangdong_zhuhai","汕头":"guangdong_shantou","佛山":"guangdong_foshan","江门":"guangdong_jiangmen","湛江":"guangdong_zhanjiang","茂名":"guangdong_maoming","肇庆":"guangdong_zhaoqing","惠州":"guangdong_huizhou","梅州":"guangdong_meizhou","汕尾":"guangdong_shanwei","河源":"guangdong_heyuan","阳江":"guangdong_yangjiang","清远":"guangdong_qingyuan","东莞":"guangdong_dongguan","中山":"guangdong_zhongshan","潮州":"guangdong_chaozhou","揭阳":"guangdong_jieyang","云浮":"guangdong_yunfu","南宁":"guangxi_nanning","柳州":"guangxi_liuzhou","桂林":"guangxi_guilin","梧州":"guangxi_wuzhou","北海":"guangxi_beihai","防城港":"guangxi_fangchenggang","钦州":"guangxi_qinzhou","贵港":"guangxi_guigang","玉林":"guangxi_yulin","百色":"guangxi_baise","贺州":"guangxi_hezhou","河池":"guangxi_hechi","来宾":"guangxi_laibin","崇左":"guangxi_chongzuo","海口":"hainan_haikou","三亚":"hainan_sanya","三沙":"hainan_sansha","儋州":"hainan_danzhou","五指山":"hainan_wuzhishan","琼海":"hainan_qionghai","文昌":"hainan_wenchang","万宁":"hainan_wanning","东方":"hainan_dongfang","定安县":"hainan_dinganxian","屯昌县":"hainan_tunchangxian","澄迈县":"hainan_chengmaixian","临高县":"hainan_lingaoxian","白沙黎族自治县":"hainan_baishalizuzizhixian","昌江黎族自治县":"hainan_changjianglizuzizhixian","乐东黎族自治县":"hainan_ledonglizuzizhixian","陵水黎族自治县":"hainan_lingshuilizuzizhixian","保亭黎族苗族自治县":"hainan_baotinglizumiaozuzizhixian","琼中黎族苗族自治县":"hainan_qiongzhonglizumiaozuzizhixian","重庆":"chongqing","成都":"sichuan_chengdu","自贡":"sichuan_zigong","攀枝花":"sichuan_panzhihua","泸州":"sichuan_luzhou","德阳":"sichuan_deyang","绵阳":"sichuan_mianyang","广元":"sichuan_guangyuan","遂宁":"sichuan_suining","内江":"sichuan_neijiang","乐山":"sichuan_leshan","南充":"sichuan_nanchong","眉山":"sichuan_meishan","宜宾":"sichuan_yibin","广安":"sichuan_guangan","达州":"sichuan_dazhou","雅安":"sichuan_yaan","巴中":"sichuan_bazhong","资阳":"sichuan_ziyang","阿坝藏族羌族自治州":"sichuan_abazangzuqiangzuzizhizhou","甘孜藏族自治州":"sichuan_ganzizangzuzizhizhou","凉山彝族自治州":"sichuan_liangshanyizuzizhizhou","贵阳":"guizhou_guiyang","六盘水":"guizhou_liupanshui","遵义":"guizhou_zunyi","安顺":"guizhou_anshun","毕节":"guizhou_bijie","铜仁":"guizhou_tongren","黔西南布依族苗族自治州":"guizhou_qianxinanbuyizumiaozuzizhizhou","黔东南苗族侗族自治州":"guizhou_qiandongnanmiaozudongzuzizhizhou","黔南布依族苗族自治州":"guizhou_qiannanbuyizumiaozuzizhizhou","昆明":"yunnan_kunming","曲靖":"yunnan_qujing","玉溪":"yunnan_yuxi","保山":"yunnan_baoshan","昭通":"yunnan_zhaotong","丽江":"yunnan_lijiang","普洱":"yunnan_puer","临沧":"yunnan_lincang","楚雄彝族自治州":"yunnan_chuxiongyizuzizhizhou","红河哈尼族彝族自治州":"yunnan_honghehanizuyizuzizhizhou","文山壮族苗族自治州":"yunnan_wenshanzhuangzumiaozuzizhizhou","西双版纳傣族自治州":"yunnan_xishuangbannadaizuzizhizhou","大理白族自治州":"yunnan_dalibaizuzizhizhou","德宏傣族景颇族自治州":"yunnan_dehongdaizujingpozuzizhizhou","怒江傈僳族自治州":"yunnan_nujianglisuzuzizhizhou","迪庆藏族自治州":"yunnan_diqingcangzuzizhizhou","拉萨":"xizang_lasa","日喀则":"xizang_rikaze","昌都":"xizang_changdu","林芝":"xizang_linzhi","山南":"xizang_shannan","那曲":"xizang_naqudiqu","那曲地区":"xizang_naqudiqu","阿里地区":"xizang_alidiqu","西安":"shanxi1_xian","铜川":"shanxi1_tongchuan","宝鸡":"shanxi1_baoji","咸阳":"shanxi1_xianyang","渭南":"shanxi1_weinan","延安":"shanxi1_yanan","汉中":"shanxi1_hanzhong","榆林":"shanxi1_yulin","安康":"shanxi1_ankang","商洛":"shanxi1_shangluo","兰州":"gansu_lanzhou","嘉峪关":"gansu_jiayuguan","金昌":"gansu_jinchang","白银":"gansu_baiyin","天水":"gansu_tianshui","武威":"gansu_wuwei","张掖":"gansu_zhangye","平凉":"gansu_pingliang","酒泉":"gansu_jiuquan","庆阳":"gansu_qingyang","定西":"gansu_dingxi","陇南":"gansu_longnan","临夏回族自治州":"gansu_linxiahuizuzizhizhou","甘南藏族自治州":"gansu_gannanzangzuzizhizhou","西宁":"qinghai_xining","海东":"qinghai_haidong","海北藏族自治州":"qinghai_haibeizangzuzizhizhou","黄南藏族自治州":"qinghai_huangnanzangzuzizhizhou","海南藏族自治州":"qinghai_hainanzangzuzizhizhou","果洛藏族自治州":"qinghai_guoluozangzuzizhizhou","玉树藏族自治州":"qinghai_yushuzangzuzizhizhou","海西蒙古族藏族自治州":"qinghai_haiximengguzuzangzuzizhizhou","银川":"ningxia_yinchuan","石嘴山":"ningxia_shizuishan","吴忠":"ningxia_wuzhong","固原":"ningxia_guyuan","中卫":"ningxia_zhongwei","乌鲁木齐":"xinjiang_wulumuqi","克拉玛依":"xinjiang_kelamayi","吐鲁番":"xinjiang_tulufan","哈密":"xinjiang_hami","昌吉回族自治州":"xinjiang_changjihuizuzizhizhou","博尔塔拉蒙古自治州":"xinjiang_boertalamengguzizhizhou","巴音郭楞蒙古自治州":"xinjiang_bayinguolengmengguzizhizhou","阿克苏地区":"xinjiang_akesudiqu","克孜勒苏柯尔克孜自治州":"xinjiang_kezilesukeerkezizizhizhou","喀什地区":"xinjiang_kashidiqu","和田地区":"xinjiang_hetiandiqu","伊犁哈萨克自治州":"xinjiang_yilihasakezizhizhou","塔城地区":"xinjiang_tachengdiqu","阿勒泰地区":"xinjiang_aletaidiqu","石河子":"xinjiang_shihezi","阿拉尔":"xinjiang_alaer","图木舒克":"xinjiang_tumushuke","五家渠":"xinjiang_wujiaqu","北屯":"xinjiang_beitun","铁门关":"xinjiang_tiemenguan","双河":"xinjiang_shuanghe","可克达拉":"xinjiang_kekedala","昆玉":"xinjiang_kunyu","胡杨河":"xinjiang_huyanghe"},D=["hebei","shanxi","neimenggu","liaoning","jilin","heilongjiang","jiangsu","zhejiang","anhui","fujian","jiangxi","shandong","henan","hubei","hunan","guangdong","guangxi","hainan","sichuan","guizhou","yunnan","xizang","shanxi1","gansu","qinghai","ningxia","xinjiang","taiwan"];function T(e){return v[e]||D.indexOf(e)>-1}function _(e){let a=e;return a=T(e)?v[e]:S[e],!a&&e&&(e.endsWith("市")||e.endsWith("县")||e.endsWith("区"))&&(a=S[e.substring(0,e.length-1)]),a}function z(e){const a={};return e?(e.forEach((e=>{a[e.key]=e.val})),a):{}}function A(e){let a=!1;return null==e&&(a=!0),a}function L(e){let a=!1;return"is_empty"!==e&&"is_not_empty"!==e&&"IS NULL"!==e&&"IS NOT NULL"!==e||(a=!0),a}function k(e){return/^http[s]?:\/\/.*/.test(e)||/^api:\/\/.*/.test(e)}const M={},F=[{label:"计数",value:"COUNT"},{label:"去重计数",value:"COUNT_DISTINCT"}],P=[{label:"求和",value:"SUM"},{label:"均值",value:"AVG"},{label:"最大值",value:"MAX"},{label:"最小值",value:"MIN"}],B={text:"text",textarea:"text",int:"number",float:"number",date:"date",datetime:"datetime","date-range":"",enum:"select",boolean:"boolean",password:"text",ciphertext:"text",attachement:"",image:"file",address:"text",location:"text","serial-number":"text",user:"user",department:"dep",owner:"user","owner-department":"dep",mpath:"",json:"",money:"number",parent:""};function U(e){const a={},t=window.store?.page?.id||"";e.forEach((e=>{e.children.forEach((e=>{a[e.value]=e.form||e}))})),M[t]=a}function N(e){let a=[];const t=window.store?.page?.id||"";return e&&t&&M[t]&&(a=M[t][e]?.fields||[]),a}function R(e){let a=[];const t=window.store?.page?.id||"";return e&&t&&M[t]&&(a=M[t][e]?.relationFields||[]),a}function j(e){let[a,t,i]=e;return!i||a||t||(a=N(i),t=R(i)),a.concat((t||[]).filter((e=>"n"!==e.relationMode?.split(":")[1]&&!e.joinColumnAtTarget&&"relation"!==e.type))).filter((e=>!e.isForeignKey&&"deletedAt"!==e.name&&"deletedAt"!==e.key))}function W(e,a){let{model:t,__modelFields:i,__relationModelFields:n,dimensions:o,measures:c,measures2:d,doubleYAxis:s,whereConditionRaw:f,havingConditionRaw:b,limit:h,dataSet:l,dataSourceType:p,groupField:u,bubbleField:g}=e,m=i||[],y=n||[];if(!t&&!l)return;m||y||(m=N(t||l),y=R(t||l));const x=g||[],C=G?.groups,w=G?.dataBuckets,v=G?.expressions;o=o||[],c=s?(c||[]).concat(d||[]):c||[];const S=[],D=[];let T={};const _={statement:"SELECT",many:a},z={},A=o.concat(c).concat(x).map(((e,a)=>{const t=r()(m,(a=>a.name===e.field||a.key===e.field));if("modelField"===e.fieldType){const a=r()(y,(a=>a.name===e.field));if(!t&&!a)return{};T={as:e.as},t&&"dataModel"===p?T.column=t.name:a&&"dataModel"===p?(T.column=a.key,T.table=a.targetKey):t&&"dataSet"===p&&(T.column=t.key,T.table=t.table),e.statisticsFunction&&(T.func=e.statisticsFunction),e.statisticsFunction&&(i=e.statisticsFunction,!tt.some((e=>e.value===i)))||!T.column||z[T.column]||(z[T.column]=T.column,D.push({name:T.column}))}else if("expression"===e.fieldType){if(!v)return{};const a=r()(v,(a=>a.id===e.field));if(!a)return{};const{expressionStr:t}=a;T={exp:`${t}`,as:e.as}}else if("group"===e.fieldType){if(!C)return{};const a=r()(C,(a=>a.id===e.field));if(!a)return{};const{dimensionGroups:t}=a;T={case:[],else:a.else||"其他",as:e.as};let i={column:a.dimensionField};"dataSet"===p&&(i={column:a.dimensionField,table:a.model||a.table});const n=y?.find((e=>e.name===a.dimensionField));n&&(i={column:n.key,table:n.targetKey}),T.case=t?.map((e=>({when:{operator:"and",children:[{left:i,op:"in",right:e.groupValues.split(",")}]},then:e.groupName}))),T.as&&!z[T.as]&&(z[T.as]=T.as,D.push({name:T.as}))}else if("dataBucket"===e.fieldType){if(!w)return{};const a=r()(w,(a=>a.id===e.field));if(!a)return{};const{buckets:t}=a;T={case:[],as:e.as,else:a.else||"其他"},T.case=t.map((e=>({when:q(e.filterCondition,y),then:e.bucketName}))),T.as&&!z[T.as]&&(z[T.as]=T.as,D.push({name:T.as}))}var i;return e.orderBy&&S.push({name:T.as,sort:e.orderBy}),T})).filter((e=>e&&e.as)),L=c[0]||{},k=L.totalField;if("totalToPercent"===L.formatter&&k){const e=r()(m,(e=>e.name===k||e.key===k)),a=r()(y,(e=>e.name===k));if(e||a){const t={as:L.totalFieldAs};L.totalFieldFunc&&(t.func=L.totalFieldFunc),e&&"dataModel"===p?t.column=e.name:a&&"dataModel"===p?(t.column=a.key,t.table=a.targetKey):e&&"dataSet"===p&&(t.column=e.key,t.table=e.table),A.push(t)}}if(u){const e=r()(m,(e=>e.name===u||e.key===u));e&&"dataModel"===p?(A.push({column:u}),D.push({name:u})):e&&"dataSet"===p&&(A.push({column:e.key,as:u,table:e.table}),D.push({name:u}))}_.select=A;let M=[];if("dataModel"===p&&t){const[e,a]=t.split(":");_.from=`${e}.${a}`,M=H(0,y,a)}else"dataSet"===p&&(_.fromDataSet=l);return M?.length&&(_.join=M),D.length&&(_.groupBy=D),S.length&&(_.orderBy=S),f?.children?.length&&(_.where=q(f,y)),b?.children?.length&&(_.having=function(e,a){return{operator:e.conjunction,children:e.children.map((e=>{if(e.children?.length)return q(e,a);const t={left:{name:e.left?.field},op:Y[e.op]||e.op};return e.right&&(t.right="between"===e.op?[e.right[0]&&X(e.right[0],e.op),e.right[1]&&X(e.right[1],e.op)]:X(e.right,e.op)),t}))}}(b,A)),h&&(_.limit=h),_}function E(e,a){let t=e;if(e&&p()(e))try{const i=JSON.parse(e);i.where=I(i.where,a),i.having=I(i.having,a),t=JSON.stringify(i)}catch(a){return console.warn(`当前JSONQL字符串解析错误：${e}`),t}return t}function I(e,a){return e&&h()(e.children)&&(e.children=e.children.filter((e=>{if(e.children){const t=I({children:e.children},a);e.children=t?.children}else(0,m.BHS)(e.right)?A(m.wzx.formula(e.right,a))&&!L(e.op)&&(e.deleted=!0):A(e.right)&&!L(e.op)&&(e.deleted=!0);return!e.deleted}))),e}function O(e,a){return e&&h()(e.children)&&(e.children=e.children.filter((e=>{if(e.children){const t=I({children:e.children},a);e.children=t?.children}else(0,m.BHS)(e.right)?(e.right=m.wzx.formula(e.right,a),A(e.right)&&!L(e.op)&&(e.deleted=!0)):A(e.right)&&!L(e.op)&&(e.deleted=!0);return!e.deleted}))),e}const $=["model","dataSet","dataSourceType","dimensions","measures","measures2","doubleYAxis","whereConditionRaw","havingConditionRaw","limit","bubbleField","groupField"];function q(e,a,t){const i={operator:e.conjunction,children:[]};return e.children&&e.children.length>0&&e.children.forEach((e=>{if(e.children?.length){const t=q(e,a);return void i.children.push(t)}const t={left:{column:e.left?.field},op:Y[e.op]||e.op};e.right&&(t.right="between"===e.op?[e.right[0]&&X(e.right[0],e.op),e.right[1]&&X(e.right[1],e.op)]:X(e.right,e.op));const n=a?.find((a=>a.name===e.left?.field));if(n&&(t.left={column:n.key,table:n.targetKey}),0===e.left?.field.indexOf("dataset.")){const[a,i,n]=e.left?.field.split(".");t.left={column:n,table:i}}i.children.push(t)})),i}function H(e,a,t){const i=[],n=[];return a?.length&&a.filter((e=>e.parentKey===t&&"1:n"!==e.relationMode&&"n:n"!==e.relationMode&&!e.joinColumnAtTarget&&"relation"!==e.type&&e.isPrimaryKey)).forEach((e=>{const a=e.targetKey;-1===i.indexOf(a)&&(i.push(a),n.push({table:a,joinType:"LEFT JOIN",on:{operator:"and",children:[{left:{column:e.parentForeignKey||`${a}Id`},op:"=",right:{column:e.key,table:a}}]}}))})),n}const Y={is_not_empty:"IS NOT NULL",is_empty:"IS NULL",equal:"=",not_equal:"<>",less:"<",less_or_equal:"<=",greater:">",greater_or_equal:">=",not_between:"NOT BETWEEN",between:"BETWEEN",like:"LIKE",not_like:"NOT LIKE",starts_with:"LIKE",ends_with:"LIKE",select_equals:"=",select_not_equals:"<>",select_any_in:"IN",select_not_any_in:"NOT IN",user_equal:"",user_not_equal:"",user_belong_deps:"",user_not_belong_deps:"",user_belong_roles:"",user_not_belong_roles:"",dep_equal:"",dep_not_equa:"",dep_belong:"",dep_not_belong:""};function X(e,a){return e?("like"!==a&&"not_like"!==a||(e=`%${e}%`),"starts_with"===a&&(e=`${e}%`),"ends_with"===a&&(e=`%${e}`),e):""}const G={expressions:[],groups:[],dataBuckets:[]};function V(e,a){G[e]=a}const K={color:{brand:"--colors-brand-5",text:"--colors-neutral-text-2",subText:"--colors-neutral-text-4",descText:"--colors-neutral-text-5",fill:"--colors-neutral-fill-10",line:"--colors-neutral-line-6",dividerLine:"--colors-neutral-line-8",background:"--colors-neutral-text-11"},border:{color:"--colors-neutral-line-4"},shadows:{value:"--shadows-shadow-normal"}},J={color:{brand:"#2468f2",text:"#151B26",subText:"#5C5F66",descText:"#84878C",fill:"#F7F8FA",line:"#E8E9EB",dividerLine:"#E8E9EB",background:"#FFFFFF"},border:{color:"#E8E9EB"},shadows:{value:"0px 1px 2px 0px rgba(0, 0, 0, 0.05)"},report:{negativeDataColor:"#389e0d",positiveDataColor:"#f5222d"}},Q=["color","width","fontStyle","fontWeight","fontFamily","font-family","fontSize","lineHeight","shadowColor","top-left-border-radius","top-right-border-radius","bottom-left-border-radius","bottom-right-border-radius","InRangeMinColor","InRangeMaxColor","borderColor"],Z=["lineShadowColor","dataTitleColor","dataDetailColor","progressColor","axisLineColor","splitLineColor","axisTickColor","axisLabelColor","pointerColor","columnBorderColor","columnShadowColor","tooltipColor","tooltipBackgroundColor","tooltipBorderColor","fontColor","markPointBackground","markLineAvarageColor","markLineBaseColor","labelColor","legendColor","visualMapInRangeMin","visualMapInRangeMax","mapBorderColor","mapAreaColor","titleColor","titleBackgroundColor","backgroundColor","borderColor","shadowColor","negativeLabelColor","positiveDataColor","negativeDataColor"],ee=["titleTextStyle","legendTextStyle","labelTextStyle","tooltipTextStyle","subTitleStyle","yAxisLabelStyle","yAxis2LabelStyle","xAxisLabelStyle","xAxisLineStyle","dataTitleStyle","dataDetailStyle","axisLabelStyle","axisTickStyle","xAxisNameStyle","chartItemStyle","columnBorderRadius","axisLineStyle","splitLineStyle","chartStyle","bubbleStyle","visualMap"],ae=["yAxisNameConfig","calendar"],te=["nameTextStyle","itemStyle","splitLine"];function ie(e,a){const t=a||document.documentElement,i=e?.replace("var","").replace("(","").replace(")","");try{return getComputedStyle(t).getPropertyValue(i)}catch(e){return""}}function ne(e){return!(!e||!p()(e))&&/^var\(.+\)$/.test(e)}function oe(e,a){const t={};for(const i of Z)ne(e[i])&&(t[i]=ie(e[i],a));for(const i of ee)if(e[i]){t[i]||(t[i]={...e[i]||{}});for(const n of Q)e[i][n]&&(ne(e[i][n])?t[i][n]=ie(e[i][n],a):t[i][n]=e[i][n])}for(const i of ae)if(e[i]){t[i]||(t[i]=x()(e[i],te));for(const n of te)if(e[i][n]){t[i][n]||(t[i][n]={...e[i][n]||{}});for(const o of Q)e[i][n][o]&&(ne(e[i][n][o])?t[i][n][o]=ie(e[i][n][o],a):t[i][n][o]=e[i][n][o])}}return{...e,...t}}function ce(e,a){if(!e||!a)return"";const t=e.split(".")||[],i=K[t[0]][t[1]],n=J[t[0]][t[1]];return ie(i,a)||n}function de(e){if(!e)return"";const a=e.split(".")||[],t=K[a[0]][a[1]],i=J[a[0]][a[1]];return t||i}function re(e){return e?window.DefaultReportConfig[e]:window.DefaultReportConfig}function se(e){if("jssdk"===window.DefaultReportConfig.reportMode&&e){const a=function(e){return e.split(":")[0]}(e);return window.DefaultReportConfig.jsonqlApi?.replaceAll("${dsKey}",a)}const a=window.store||{};if("saas"===window.DefaultReportConfig.reportMode&&a.page){const e=window.DefaultReportConfig.webServerRootPath||"",t=a.company?.key||"xxCompany",i=a.app||{};return`${e}/api/company/${t}/app/${`${i.key}${"latest"!==i.env?`-${i.env}`:""}`||"xxApp"}/page/${a.page?.id||"xxPage"}/jsonql`}return window.DefaultReportConfig.jsonqlApi}function fe(){const e=window.store||{};if("saas"===window.DefaultReportConfig.reportMode&&e.app){const a=window.DefaultReportConfig.webServerRootPath||"",t=e.company?.key||"xxCompany",i=e.app||{};return`${a}/api/company/${t}/app/${`${i.key}${"latest"!==i.env?`-${i.env}`:""}`||"xxApp"}/source/optionsAll?withRelationFields=true&withSystemFields=true`}return window.DefaultReportConfig.sourceOptionsAll}function be(){const e=window.store||{};if("saas"===window.DefaultReportConfig.reportMode&&e.app){const a=window.DefaultReportConfig.webServerRootPath||"",t=e.company?.key||"xxCompany",i=e.app||{};return`${a}/api/company/${t}/app/${`${i.key}${"latest"!==i.env?`-${i.env}`:""}`||"xxApp"}/dataset/selectOptions`}return window.DefaultReportConfig.datasetOptionsAll}function he(e){let a=window.DefaultReportConfig[e];const t=window.store||{};if("saas"===window.DefaultReportConfig.reportMode&&t.page){const i=window.DefaultReportConfig.webServerRootPath||"",n=t.company?.key||"xxCompany",o=t.app||{};a=`${i}/api/company/${n}/app/${`${o.key}${"latest"!==o.env?`-${o.env}`:""}`||"xxApp"}/page/${t.page?.id||"xxPage"}/reportFields/${e}?model=\${model}&dataSet=\${dataSet}`}return a}function le(e){let a=he(e);return a+="&dataId=${id}",a}window.DefaultReportConfig={reportMode:"static",useDataModelSource:!1,useDataSetSource:!1,useReportDesignConfig:!0,sourceOptionsAll:"/design/source/optionsAll?withRelationFields=true&withSystemFields=true",jsonqlApi:"/resource/source/${dsKey}/jsonql",jsonqlQuery:"/api/jsonql/${dslKey}/query",datasetOptionsAll:"/api/company/xxCompany/app/xxApp/dataset/selectOptions",expressions:"/resource/reportFields/expressions?model=${model}&dataSet=${dataSet}",groups:"/resource/reportFields/groups?model=${model}&dataSet=${dataSet}",dataBuckets:"/resource/reportFields/dataBuckets?model=${model}&dataSet=${dataSet}",DEFAULT_COLOR:["#5470c6","#91cc75","#fac858","#ee6666","#73c0de","#3ba272","#fc8452","#9a60b4","#ea7ccc"]};const pe=["gradientStatus","gradientMode","gradientAlpha"],ue=["tooltipShow","tooltipContent","tooltipFontSize","tooltipColor","tooltipBackgroundColor","tooltipBorderWidth","tooltipBorderColor","tooltipPadding"],ge=["centerHorizontal","centerVertical","innerRadius","radius"],me=["pieChartType","pieChartRoseType"],ye=["gridTop","gridLeft","gridRight","gridBottom"],xe=["xAxisShow","xAxisInverse","xAxisLineShow","xAxisLineShow","xAxisLabelShowOverlap","xAxisLabelRotate","xAxisFontSize","xAxisName","xAxisNameRotate","columnChartType","xyFlip","xAxisNameGap","xAxisNameLocation","xAxisMin","xAxisMax","xAxisSplitLineShow","xAxisSplitAreaShow"],Ce=["columnChartType","xyFlip","yAxisShow","yAxisMinAsDataMinAndMaxAsDataMax","yAxisSplitLineShow","yAxisSplitAreaShow","doubleYAxis","doubleYAxisAlign","yAxisLabelFontSize","yAxisMin","yAxisMax","yAxisLabelRotate","yAxisPreUnit","yAxisAfterUnit","yAxisName","yAxisFormatter","formatterToFixed","formatterClearZero","yAxisLabelStyle","yAxisNameConfig"],we=["doubleYAxis","doubleYAxisAlign","yAxisLabelFontSize2","yAxisMin2","yAxisMax2","yAxisLabelRotate2","yAxisPreUnit2","yAxisAfterUnit2","yAxisName2","yAxisFormatter2","yAxis2LabelStyle","yAxis2NameConfig"],ve=["markPointMax","markPointMin","markPointBackground","markPointSymbol","markPointSymbolSize","markPointSymboloffsetX","markPointSymboloffsetY","markPointSymbolRotate"],Se=["markLineAvarage","markLineAvarageColor","markLineSymbolLeft","markLineSymbolRight","markLineBase","markLineBaseValue","markLineBaseColor"],De=["labelShow","labelFontSize","labelColor","labelLineHeight","labelOverflow","labelPosition","labelFontWeight","labelContent","negativeLabelPosition"],Te=["symbolSize","symbol"],_e=["fontSize","fontColor","fontWeight","alignClass"],ze=["dataTitleShow","dataTitleOffsetX","dataTitleOffsetY","dataTitleColor","dataTitleFontSize","dataTitleFontWeight"],Ae=["dataDetailShow","dataDetailOffsetX","dataDetailOffsetY","dataDetailColor","dataDetailFontSize","dataDetailFontWeight"],Le=["progressShow","progressWidth","progressColor"],ke=["progressWidth","axisLineShow","axisLineColor"],Me=["splitLineShow","splitLineLength","splitLineDistance","splitLineColor","splitLineWidth"],Fe=["axisTickShow","axisTickSplitNumber","axisTickLength","axisTickDistance","axisTickColor","axisTickWidth"],Pe=["axisLabelShow","axisLabelDistance","axisLabelRotate","axisLabelColor","axisLabelFontSize","axisLabelFontWeight"],Be=["pointerShow","pointerColor"],Ue=["legendShow","legendType","legendColor","legendFontSize","legendAlign","legendOrient","legendPosition","legendWidth","legendHeight","legendTop","legendRight","legendBottom","legendLeft","legendDataShow","legendDataFormat"],Ne=["backgroundColor","borderRadius","borderWidth","borderStyle","borderColor","shadowWidth","shadowOffset","shadowColor"],Re=["titleShow","titleText","titleAlignment","titleBackgroundColor","titleLink"],je=["animationDurationUpdate","animationThreshold","animationDuration"],We=["funnelOrient"],Ee=["columnBarWidth","columnBarMaxWidth","columnBarMinWidth","columnBarGap","columnBarMinHeight","positiveDataColor","negativeDataColor"],Ie=["columnBorderWidth","columnBorderColor","columnBorderType","columnShadowBlur","columnShadowColor","columnShadowOffsetX","columnShadowOffsetY"],Oe=["lineWidth","lineCap","lineSymbol","lineJoin","lineShadowBlur","lineShadowColor","lineShadowOffsetX","lineShadowOffsetY","lineOpacity"],$e=["stackedLineChart","columnLineMix","doubleYAxis","doubleYAxisAlign"],qe=["padding","paddingTop","paddingRight","paddingBottom","paddingLeft"],He=["shape","sizeRangeBegin","sizeRangeEnd","rotationRangeBegin","rotationRangeEnd","gridSize"],Ye=["mapZoom","mapRoam","mapBorderColor","mapBorderWidth","mapAreaColor"],Xe=["visualMapShow","visualMapMin","visualMapMax","visualMapItemWidth","visualMapItemHeight","visualMapHoverLink","visualMapOrient","visualMapInverse","visualMapCalculable","visualMapRealtime","visualMapTextMax","visualMapTextMin","visualMapInRangeMin","visualMapInRangeMax"],Ge=["nodeWidth","nodeGap","nodeAlign","orient"],Ve=[...ee,"measures","style","yAxisNameConfig","bubbleField","groupField","waveletStyle","visualMap","calendar"],Ke={SUM:"求和",AVG:"均值",MAX:"最大值",MIN:"最小值",COUNT:"计数",COUNT_DISTINCT:"去重计数"};function Je(e){const a=Ke[e];return a?`[${a}]`:""}async function Qe(e){const{data:a,env:t,dsl:i,dataSourceType:o,whereConditionRaw:c,havingConditionRaw:d,contextData:r,dataApi:s,staticJson:f,inPreviewPanel:b}=e;if("context"===o)return{data:Oa((r&&r[0]?r[0]:{}).data,a)};if("api"===o&&s){let e=[];if((0,m.Amo)(s,a)){let i={};try{i=await t.fetcher(s,a)}catch(S){console.warn(`[${s.url}]接口请求异常：`,S)}i.data&&(i.data.data||i.data.items)?e=i.data.data||i.data.items:!i.data&&!i.items||i.data.errcode||i.data.stack||(e=i.data||i.items)}return{data:e}}if("staticJson"===o)return{data:f};const h=Ze(c,[]),l=Ze(d,[]),u=n()(a,h.concat(l));if("dataModel"!==o&&"dataSet"!==o)return{data:[]};const g=i&&~i?.indexOf("jsonql://");let y,x=i&&~i?.indexOf("preview://"),C=(S=i)?`/api/jsonql/${S}/query`:window.DefaultReportConfig.jsonqlQuery,w="",v={};var S;if(g){const{model:a}=e;C=se(a),v=function(e,a){let t={};if(e&&p()(e))try{t=JSON.parse(e)}catch(a){return console.warn(`当前JSONQL字符串解析错误：${e}`),{}}else e&&(t=e);return t.where&&a&&(t.where=O(t.where,a)),t.having&&a&&(t.having=O(t.having,a)),t}(i.split("jsonql://")[1],u)}else if(x){const[e,a,t]=i.split("|");C=a,w=E(t,u)}else if(b){const{previewUrl:a}=e;C=a,w=E(i.split("jsonql://")[1],u),x=!0}return y=g?await t.fetcher(C,v,{method:"post"}):x?await t.fetcher(C,{jsonqlstr:w,queryParams:u},{method:"post"}):await t.fetcher(C,{queryParams:u},{method:"post"}),y}function Ze(e,a){if(!e)return[];if(e.children?.length)e.children.forEach((e=>{Ze(e,a)}));else if(e.right)if("between"===e.op){const t=(0,m.S9N)(e.right[0]),i=(0,m.S9N)(e.right[1]);for(const e of t.concat(i))a.push(e)}else{const t=e.right&&"string"==typeof e.right?(0,m.S9N)(e.right):[];for(const e of t)a.push(e)}return a}async function ea(e,a){const t=a||{},{data:i,dataApi:n,dimensions:o,measures:c,measures2:d,staticJson:r}=t,{data:s,whereConditionRaw:f,havingConditionRaw:b,dataSourceType:h,contextData:l,dataApi:p,dimensions:u,measures:y,measures2:x,staticJson:C}=e;if("context"===h)return{data:Oa((l&&l[0]?l[0]:{}).data,s)};if("api"===h&&(!g()(p,n)||(0,m.B92)(n,p,i,s)||function(e,a,t,i){if(void 0===e&&void 0!==a||void 0!==e&&void 0===a)return!0;const n=et(e,t),o=et(a,i);return!g()(n,o)}(n?.data,p?.data,i,s)||!g()(u,o)||!g()(y,c)||!g()(x,d)))return await Qe(e);if(!("staticJson"!==h||g()(C,r)&&g()(u,o)&&g()(y,c)&&g()(x,d)))return await Qe(e);if(t.dsl!==e.dsl)return await Qe(e);const w=Ze(f,[]),v=Ze(b,[]);for(const a of w.concat(v))if((s||{})[a]!==(i||{})[a])return await Qe(e);return!1}function aa(e,a){const{colorTheme:t,color:i,colorBy:o,areaStyle:c,axisTickStyle:d,xAxisNameStyle:r}=a||{},{colorTheme:s,color:f,areaStyle:b,axisTickStyle:h,xAxisNameStyle:l,colorBy:p}=e,u={};for(const t of Ve)if(!g()(e[t],a[t]))return u[t]=e[t],u;for(const t of pe)if(a[t]!==e[t])return!0;if("chart-map"===e.type||"chart-scatter-map"===e.type){if(a.mapChartType!==e.mapChartType)return u.mapChartType=e.mapChartType,u;if(a.mapName!==e.mapName)return u.mapName=e.mapName,u.mapURL=e.mapURL,u;for(const t of Ye)if(a[t]!==e[t])return!0;for(const t of Xe)if(a[t]!==e[t])return!0}if("chart-sankey"===e.type)for(const t of Ge)if(a[t]!==e[t])return!0;if(s!==t||p!==o||!g()(f,i))return!0;for(const t of Re)if(a[t]!==e[t])return!0;for(const t of Ue)if(a[t]!==e[t])return!0;for(const t of De)if(a[t]!==e[t])return!0;for(const t of je)if(a[t]!==e[t])return!0;for(const t of ye)if(a[t]!==e[t])return u.grid={[t]:e[t]},u;if("chart-pie"===e.type)for(const t of me)if(a[t]!==e[t])return"rose"===e.pieChartType?u.roseType=e.pieChartRoseType:u.roseType="",u;if(a.dataType!==e.dataType)return u.dataType=e.dataType,u;if(a.showTotolData!==e.showTotolData)return u.showTotolData=e.showTotolData,u;if(u.__notEChartsDiff={},"chart-percent"===e.type){for(const t of Le)if(a[t]!==e[t])return!0;for(const t of ke)if(a[t]!==e[t])return!0;for(const t of Me)if(a[t]!==e[t])return!0;for(const t of Fe)if(a[t]!==e[t])return!0;for(const t of Pe)if(a[t]!==e[t])return!0;for(const t of Be)if(a[t]!==e[t])return!0;for(const t of ze)if(a[t]!==e[t])return!0;for(const t of Ae)if(a[t]!==e[t])return!0;if(a.progressStartAngle!==e.progressStartAngle)return!0;if(a.progressEndAngle!==e.progressEndAngle)return!0}if("chart-pie"===e.type||"chart-radar"===e.type||"chart-percent"===e.type){if(a.areaShow!==e.areaShow)return!0;if(!g()(b,c))return!0;for(const t of ge)if(a[t]!==e[t])return!0}if("chart-line"===e.type){for(const t of $e)if(a[t]!==e[t])return u.__notEChartsDiff[t]=e[t],u;for(const t of Oe)if(a[t]!==e[t])return!0;const t=["lineType","lineStepPosition","markLine","markPoint","cateAxis","lineChartLineDiff","columnBarMinHeight","columnItemStyle"];for(const i of t)if(a[i]!==e[i])return!0}for(const t of ue)if(a[t]!==e[t])return!0;for(const t of Ne)if(a[t]!==e[t])return!0;if("target-number"===e.type)for(const t of _e)if(a[t]!==e[t])return!0;if("chart-scatter"===e.type||"chart-bubble"===e.type)for(const t of Te)if(a[t]!==e[t])return!0;if("chart-column"===e.type||"chart-waterfall"===e.type||"chart-line"===e.type||"chart-scatter"===e.type||"chart-bubble"===e.type){if(a.columnChartType!==e.columnChartType)return u.__notEChartsDiff.columnChartType=e.columnChartType,u;for(const t of xe)if(a[t]!==e[t])return!0;for(const t of Ce)if(a[t]!==e[t])return u.__notEChartsDiff.valueAxis=Pa(n()(e,Ce)),u;for(const t of we)if(a[t]!==e[t])return u.__notEChartsDiff.valueAxis2=Pa(n()(e,we)),u;for(const t of ve)if(a[t]!==e[t])return!0;for(const t of Se)if(a[t]!==e[t])return!0;if(!g()(h,d))return u.axisTickStyle=h,u;if(!g()(l,r))return u.xAxisNameStyle=l,u}if("chart-funnel"===e.type)for(const t of We)if(a[t]!==e[t])return!0;if("chart-column"===e.type||"chart-waterfall"===e.type||"chart-line"===e.type&&e.columnLineMix){for(const t of Ee)if(a[t]!==e[t])return!0;for(const t of Ie)if(a[t]!==e[t])return!0}if("chart-word-cloud"===e.type)for(const t of He)if(a[t]!==e[t])return!0;return Object.keys(u.__notEChartsDiff).length||delete u.__notEChartsDiff,!!Object.keys(u).length&&u}const ta={default:e=>e,centToYuan:e=>isNaN(e)||0===e||"-"===e?e:e/100,precision(e,a){const{formatterToFixed:t,formatterClearZero:i}=a||{};return isNaN(e)||"-"===e?e:(0,m.EgU)(e,t>0?t:0)},pureNumber:e=>`${e}`,thousandSeparatorNumber(e,a){const{formatterToFixed:t,formatterClearZero:i}=a||{};return isNaN(e)||0===e||"-"===e||e.toString().indexOf(",")>-1?e:(0,m.EgU)(e,t>0?t:0)},numberAddPercentTag:e=>isNaN(e)||0===e||"-"===e?e:`${e}%`,numberToPercent(e,a){if(0===e||"-"===e)return e;const{formatterToFixed:t,formatterClearZero:i}=a||{};let n=Number(e);return isNaN(n)?0:(void 0!==t?n=(100*n).toFixed(t>0?t:0):n*=100,i&&(n=parseFloat(n)),`${n}%`)},numberToMillionBillion(e,a){if(isNaN(e)||0===e||"-"===e)return e;const{formatterToFixed:t}=a||{},i=t>0?t:2;return e>=1e8||e<=-1e8?`${c()(e/1e8,i)}亿`:e>=1e4||e<=-1e4?`${c()(e/1e4,i)}万`:e},secondToHMS(e){if(isNaN(e)||0===e||"-"===e)return e;let a=e,t=0,i=0;return a>60&&(t=Math.trunc(a/60),a%=60),t>60&&(i=Math.trunc(t/60),t%=60),`${i} 时 ${t}分 ${a} 秒`},secondToDHMS(e){if(isNaN(e)||0===e||"-"===e)return e;let a=e,t=0,i=0,n=0;return a>60&&(t=Math.trunc(a/60),a%=60),t>60&&(i=Math.trunc(t/60),t%=60),i>24&&(n=Math.trunc(i/24),i%=24),`${n}天 ${i} 时 ${t}分 ${a} 秒`},byteToMGB(e){if(isNaN(e)||0===e||"-"===e)return e;const a=e,t=1024;return a<t?`${a}B`:a<t**2?`${(a/t).toFixed(2)}KB`:a<t**3?`${(a/t**2).toFixed(2)}MB`:a<t**4?`${(a/t**3).toFixed(2)}G`:`${(a/t**4).toFixed(2)}T`},byteToMbps(e){if(isNaN(e)||0===e||"-"===e)return e;const a=8*e,t=1024;return a<t?`${a}bps`:a<t**2?`${(a/t).toFixed(2)}Kbps`:a<t**3?`${(a/t**2).toFixed(2)}Mbps`:a<t**4?`${(a/t**3).toFixed(2)}Gbps`:`${(a/t**4).toFixed(2)}Tbps`}};function ia(e,a){const{titleShow:t,titleText:i,titleAlignment:n,titleColor:o,titleBackgroundColor:c,titleFontSize:d,titleLink:r,titleTextStyle:s}=e,{color:f,fontSize:b,fontStyle:h,fontWeight:l,fontFamily:p,lineHeight:u}=s||{},g=p||(s||{})["font-family"];return{show:t??!0,text:i,left:n||"left",textStyle:{...s,color:f||o||ce("color.text",a),fontSize:b||d||12,fontStyle:h,fontWeight:l,fontFamily:g,lineHeight:u},backgroundColor:c||"none",link:r}}function na(e,a,t,i){const n=e[a||"chartStyle"],{color:o,fontSize:c,fontStyle:d,fontWeight:r,fontFamily:s,lineHeight:f,backgroundColor:b}=n||{},h=s||(n||{})["font-family"],{color:l,fontSize:p}=t||{};return{...n,color:o||l||ce("color.subText",i),fontSize:c||p||16,fontStyle:d,fontWeight:r,fontFamily:h,lineHeight:f,backgroundColor:b||"none"}}function oa(e,a,t){const i=e[a||"xAxisLineStyle"],{color:n,width:o}=i||{};return{color:n||ce("border.color",t),width:o}}function ca(e,a,t){const i=e[a||"lineStyle"],{color:n,width:o}=i||{};return{color:n||ce("color.line",t),width:o}}function da(e){const{centerHorizontal:a,centerVertical:t,radius:i,innerRadius:n}=e,o={};return o.center=[a||"50%",t||"50%"],o.radius=i||"70%",n&&(o.radius=[n,o.radius]),o}function ra(e,a){const{gridLeft:t,gridTop:i,gridBottom:n,gridRight:o}=e,{notNeedDefaultVal:c,defaultGridLeft:d,defaultGridTop:r,defaultGridBottom:s,defaultGridRight:f}=a||{},b={left:fa(t,d??"7%"),right:fa(o,f??"7%"),top:fa(i,r??"60"),bottom:fa(n,s??"60"),containLabel:!0};return c&&!t&&0!==t&&delete b.left,c&&!o&&0!==o&&delete b.right,c&&!i&&0!==i&&delete b.top,c&&!n&&0!==n&&delete b.bottom,b}function sa(e,a,t){const i=e[a||"chartStyle"]||{},{nameGap:n,nameRotate:o,nameLocation:c}=i||{},d=i.nameTextStyle||{};return{...i,nameGap:n??15,nameRotate:o??0,nameLocation:c??"end",nameTextStyle:{...d,color:d.color||ce("color.text",t),fontSize:d.fontSize||12,fontWeight:d.fontWeight||"normal"}}}function fa(e,a){return 0===e||"0"===e?e:e||a}const ba={SUM:e=>{let a=0;for(let t=0,i=e.length;t<i;t++)a+=e[t];return a},AVG:e=>c()(ba.SUM(e)/e.length,2),MAX:e=>Math.max(...e),MIN:e=>Math.min(...e)};function ha(e,a,t){const{type:i,legendType:n,legendShow:o,legendColor:c,legendFontSize:d,legendAlign:r,legendOrient:s,legendPosition:f,legendWidth:b,legendHeight:h,legendTop:l,legendRight:p,legendBottom:u,legendLeft:g,legendTextStyle:m,legendDataShow:y,legendDataFormat:x,groupField:C}=e,{color:w,fontSize:v,fontStyle:S,fontWeight:D,fontFamily:T,lineHeight:_}=m||{},z=T||(m||{})["font-family"],A=e.dimensions||[],L=e.measures||[];let k=!1;"chart-column"!==i&&"chart-line"!==i&&"chart-radar"!==i&&"chart-scatter"!==i&&"chart-bubble"!==i||(k=!0);const M={left:"auto",right:"auto",top:"auto",bottom:"auto"};return"left"===f?(M.left=g||"left",M.top="center"):"right"===f?(M.right=p||"right",M.top="center"):"bottom"===f?(M.bottom=u||"bottom",M.left="center"):"leftTop"===f?(M.left=g||"left",M.top=l||"top"):"rightTop"===f?(M.right=p||"right",M.top=l||"top"):"leftBottom"===f?(M.left=g||"left",M.bottom=u||"bottom"):"rightBottom"===f?(M.right=p||"right",M.bottom=u||"bottom"):(M.top=l||"top",M.left="center"),{type:n??"plain",show:o??!0,textStyle:{color:w||c||ce("color.text",t),fontSize:v||d||12,fontStyle:S,fontWeight:D,fontFamily:z,lineHeight:_},align:r||"auto",orient:s||"horizontal",width:"horizontal"===s?b:"auto",height:"vertical"===s?h:"auto",formatter:e=>{let t=e;if("chart-scatter"===i||"chart-bubble"===i){const a=A[0]||{},i=a.label||a.as,n=L[0]||{},o=n.label||n.as;t=L&&1===L.length&&C?`${e}(${i}/${o})`:`${i}/${e}`}const n=(a||[]).find((a=>a.name===e));return n&&y?k?`${t} ${ba[x||"AVG"](n.data||n.value)}`:`${t} ${n.value||n.data}`:t},...M}}function la(e,a){const{progressShow:t,progressWidth:i,progressColor:n}=e;return{show:t??!0,width:i||20,itemStyle:{color:n||ce("color.brand",a)}}}function pa(e,a){const{dataTitleShow:t,dataTitleOffsetX:i,dataTitleOffsetY:n,dataTitleColor:o,dataTitleFontSize:c,dataTitleFontWeight:d}=e;return{show:t??!0,offsetCenter:[i||0,n||0],...{color:o,fontSize:c,fontWeight:d,...na(e,"dataTitleStyle",{fontSize:12,color:o||ce("color.text",a)},a)||{}}}}function ua(e,a,t){const{dataDetailShow:i,dataDetailOffsetX:n,dataDetailOffsetY:o,dataDetailColor:c,dataDetailFontSize:d,dataDetailFontWeight:r}=e,s={show:i??!0,offsetCenter:[n||0,o||0],...{color:c||ce("color.text",t),fontSize:d,fontWeight:r,...na(e,"dataDetailStyle",{fontSize:28},t)||{}}};if(a?.formatter){const e="totalToPercent"===a.formatter?"precision":"default",t=ta[a.formatter]||ta[e];s.formatter=e=>t(e,a)}return s}function ga(e,a){const{axisLineShow:t,axisLineColor:i,progressWidth:n}=e;return{show:t??!0,lineStyle:{color:[[1,i||ce("color.fill",a)]],width:n}}}function ma(e,a){const{axisTickShow:t,axisTickSplitNumber:i,axisTickLength:n,axisTickDistance:o,axisTickColor:c,axisTickWidth:d}=e;return{show:t??!1,splitNumber:i||5,length:n||5,distance:o,lineStyle:{color:c||ce("color.line",a),width:d}}}function ya(e,a){const{splitLineShow:t,splitLineLength:i,splitLineDistance:n,splitLineColor:o,splitLineWidth:c}=e;return{show:t??!1,length:i||10,distance:n||10,lineStyle:{color:o||ce("color.line",a),width:c||3}}}function xa(e,a){const{axisLabelShow:t,axisLabelDistance:i,axisLabelRotate:n,axisLabelColor:o,axisLabelFontSize:c,axisLabelFontWeight:d}=e;return{show:t??!1,distance:i,rotate:n,...{fontWeight:d,...na(e,"axisLabelStyle",{color:o||ce("color.descText",a),fontSize:c||12},a)||{}}}}function Ca(e){const{pointerShow:a,pointerColor:t}=e;return{show:a??!0,itemStyle:{color:t}}}function wa(e,a){const{markPointSymbol:t,markPointMax:i,markPointMin:n,markPointBackground:o,markPointSymbolSize:c,markPointSymbolRotate:d,markPointSymboloffsetX:r,markPointSymboloffsetY:s}=e,f={symbol:t,symbolSize:c,symbolOffset:[r,s],data:[],symbolRotate:d,itemStyle:{color:o,background:o}};return i&&f.data.push({type:"max",name:"Max"}),n&&f.data.push({type:"min",name:"Min"}),f}function va(e,a,t){const{markLineAvarage:i,markLineAvarageColor:n,markLineSymbolLeft:o,markLineSymbolRight:c,markLineBase:d,markLineBaseValue:r,markLineBaseColor:s}=e,f={symbol:[o||"none",c||"none"],data:[]};return i&&f.data.push({type:"average",name:"Avg",lineStyle:{color:n}}),d&&a&&f.data.push({xAxis:r??100,lineStyle:{color:s||ce("color.line",t)}}),d&&!a&&f.data.push({yAxis:r??100,lineStyle:{color:s||ce("color.line",t)}}),f}function Sa(e,a,t){const i=(e.measures||[]).concat(e.measures2||[]),n=e.dimensions||[],{type:o,tooltipShow:c,tooltipFontSize:d,tooltipColor:r,tooltipBackgroundColor:s,tooltipBorderWidth:f,tooltipBorderColor:b,tooltipPadding:l,tooltipContent:p,tooltipTextStyle:u,dataType:g,bubbleField:m,groupField:y}=e,{color:x,fontSize:C,fontStyle:w,fontWeight:v,fontFamily:S,lineHeight:D}=u||{},T=S||(u||{})["font-family"];let _=m||"气泡值";h()(m)&&(_=(m[0]||{}).label||(m[0]||{}).as||"气泡值");const z={trigger:"chart-column"===o||"chart-line"===o?"axis":"item",show:c??!0,confine:!0,backgroundColor:s||ce("color.fill",t),borderWidth:f||0,borderColor:b||ce("color.line",t),padding:l||5,textStyle:{color:x||r||ce("color.text",t),fontSize:C?parseInt(C):d||12,fontStyle:w||"normal",fontWeight:v||"normal",fontFamily:T||"sans-serif",height:50}},A=p??"b,c";return z.formatter=A?t=>{let c="",d=(h()(t)?t:[t]).map(((d,r)=>{let s=d.seriesIndex??0;2===g&&(s=d.dataIndex),("chart-waterfall"===o||"chart-scatter-map"===o||y&&i&&1===i.length)&&(s=0);let f=d.value??"-";isNaN(f)&&!h()(f)&&(f="-");let b=n[s]||{};const l=i[s]||{},p=l?.formatter||"default";if("scatter"===t.seriesType&&(b=n[0]||{}),h()(f))if("chart-scatter-map"===o)f=ta[p](f[2],l);else if("chart-calendar"===o)f=ta[p](f[1],l);else if("chart-scatter"===o&&h()(f))f=`${f[0]},${ta[p](f[1],l)}`;else if("chart-bubble"===o&&h()(f))f=`${f[0]},${ta[p](f[1],l)},${f[2]}`;else if(a&&h()(a)){const e=f.map(((e,t)=>`${a[t].name}: ${ta[p](e,l)}`)).join("<br/>");f=`${-1!==A.indexOf("b")?"<br/>":""}${e}`}else f=f.map((e=>ta[p](e,l))).join(",");else"chart-column"===o&&"twoWayComparison"===e?.columnChartType&&0===s&&(f=-f),"chart-waterfall"===o&&2===d.componentIndex&&(f=-f),f=ta[p](f,l);c=d.name;let u="";return-1!==A.indexOf("b")&&("scatter"===t.seriesType?(u+=`${b.label||b.as},${l.label||l.as}`,"chart-bubble"===o&&(u+=`,${_}`)):"heatmap"===t.seriesType?u+=`${d.value[0]} ${l.label||l.as}`:u+=`${"axis"===z.trigger?d.seriesName:d.name}`,A.length>1&&(u+=": ")),-1!==A.indexOf("c")&&(u+=f),-1!==A.indexOf("d")&&(u+=` ${d.percent}%`),u})).join("<br/>");return"chart-line"!==o&&"chart-column"!==o||-1===A.indexOf("x")||(d=`${c}<br/>${d}`),d}:e=>"",z}function Da(e,a,t){const{type:i,labelShow:n,labelFontSize:o,labelColor:c,labelFontWeight:d,labelContent:r,labelOverflow:s,labelLineHeight:f,labelPosition:b,labelTextStyle:l,dataType:p,bubbleField:u,groupField:g}=e,m=(e.measures||[]).concat(e.measures2||[]),y=e.dimensions||[],{color:x,fontSize:C,fontStyle:w,fontWeight:v,fontFamily:S,lineHeight:D}=l||{},T=S||(l||{})["font-family"];let _=u||"气泡值";h()(u)&&(_=(u[0]||{}).label||(u[0]||{}).as||"气泡值");const z={trigger:"chart-column"===i||"chart-line"===i?"axis":"item",show:n??!0,position:b||"outside",fontSize:C||o||12,color:x||c||ce("color.text",t),fontWeight:v||d||"normal",fontFamily:T||"sans-serif",fontStyle:w||"normal",width:120,overflow:s||"truncate"};b||"chart-map"!==i&&"chart-scatter-map"!==i||delete z.position;const A=r??"b,c";return z.formatter=A?e=>{let t=e.value??"-",n=e.seriesIndex??0;2===p&&(n=e.dataIndex),("chart-waterfall"===i||"chart-scatter-map"===i||("chart-scatter"===i||"chart-bubble"===i)&&g&&m&&1===m.length)&&(n=0),a?.negative&&("chart-column"===i&&0===e.seriesIndex||"chart-waterfall"===i&&2===e.seriesIndex)&&(t=-t);let o=y[n]||{};const c=m[n]||{};if("scatter"===e.seriesType){o=y[0]||{};const a=e.value||[];t=[ta[o.formatter||"default"](a[0],o),ta[c.formatter||"default"](a[1],c)],"chart-bubble"===i&&t.push(a[2])}else"chart-scatter-map"===i&&h()(t)?t=ta[c.formatter||"default"](t[2],c):"chart-calendar"===i&&h()(t)?t=ta[c.formatter||"default"](t[1],c):isNaN(t)&&!h()(t)?t="-":a?.type?t=ta[a.type||"default"](t,a):c?.formatter&&(t=ta[c.formatter||"default"](t,c));let d="";return-1!==A.indexOf("b")&&("scatter"===e.seriesType?(d+=`${o.label||o.as},${c.label||c.as}`,"chart-bubble"===i&&(d+=`,${_}`)):"heatmap"===e.seriesType?d+=`${c.label||c.as}`:d+=`${"axis"===z.trigger?e.seriesName:e.name}`,A.length>1&&(d+=": ")),-1!==A.indexOf("c")&&(d+=t),-1!==A.indexOf("d")&&(d+=` ${e.percent}%`),d}:e=>"",z}function Ta(e){const{lineWidth:a,lineCap:t,lineJoin:i,lineShadowBlur:n,lineShadowColor:o,lineShadowOffsetX:c,lineShadowOffsetY:d,lineOpacity:r}=e;return{lineStyle:{width:a||2,cap:t||"butt",join:i||"bevel",shadowBlur:n,shadowColor:o,shadowOffsetX:c,shadowOffsetY:d,opacity:r}}}function _a(e,a){const{columnBorderWidth:t,columnBorderColor:i,columnBorderType:n,columnShadowBlur:o,columnShadowColor:c,columnShadowOffsetX:d,columnShadowOffsetY:r}=e,s=e.columnBorderRadius||0;let b=s;return f()(s)&&(b=[parseInt(s["top-left-border-radius"])||0,parseInt(s["top-right-border-radius"])||0,parseInt(s["bottom-left-border-radius"])||0,parseInt(s["bottom-right-border-radius"])||0]),{borderColor:i,borderWidth:t,borderType:n,borderRadius:b,shadowBlur:o,shadowColor:c||ce("color.line",a),shadowOffsetX:d,shadowOffsetY:r}}function za(e){const{bubbleShadowShow:a,shadowBlur:t,shadowColor:i,shadowOffsetX:n,shadowOffsetY:o}=e||{};return a?{shadowBlur:t??10,shadowColor:i||"#ccc",shadowOffsetX:n??3,shadowOffsetY:o??-3}:{shadowBlur:0,shadowColor:void 0,shadowOffsetX:0,shadowOffsetY:0}}function Aa(e,a,t){const{columnChartType:i,xAxisShow:n,xAxisInverse:o,xAxisLabelShow:c,xAxisLabelShowOverlap:d,xAxisLabelRotate:r,xAxisFontSize:s,xAxisName:f,xAxisNameRotate:b,xAxisLineShow:h,axisTickStyle:l,xAxisNameGap:p,xAxisNameLocation:u,xAxisNameStyle:g,xAxisMin:m,xAxisMax:y,xAxisSplitLineShow:x,xAxisSplitAreaShow:C}=e,w=l||{},v={type:a?"value":"category",min:m||"dataMin",max:y||"dataMax",show:n??!0,inverse:o,splitLine:{show:x??!1},splitArea:{show:C??!1},axisLabel:{show:c??!0,rotate:r,interval:d?0:"auto",...{fontSize:s,...na(e,"xAxisLabelStyle",{},t)||{}}},axisLine:{show:h??!0,lineStyle:oa(e,"xAxisLineStyle",t)},axisTick:{show:w.show??!0,length:w.length??5,lineStyle:{color:w.color??ce("color.line",t),width:w.width??1}},name:f,nameRotate:b,nameGap:p,nameLocation:u??"end",nameTextStyle:{...g,color:g?.color||ce("color.text",t)}};return"twoWayComparison"===i&&"value"===v.type&&(v.axisLabel.formatter=function(e){return e<0?-e:e}),v.data=[],v}function La(e){const{chartItemStyle:a}=e,{borderRadius:t}=a||{};return{borderRadius:t}}function ka(e){const{areaShow:a,areaStyle:t}=e||{},{shadowBlur:i,shadowColor:n,shadowOffsetX:o,shadowOffsetY:c,opacity:d}=t||{};return a?{shadowBlur:i,shadowColor:n,shadowOffsetX:o,shadowOffsetY:c,opacity:d??.5}:null}function Ma(e){const{color:a,colorTheme:t,gradientStatus:i,gradientMode:n,gradientAlpha:o}=e,c=window.store?.app?.theme||{},d=c.themeList||[],r=c.defaultThemeId,s=window.store?.app?.curTheme||r,f=d.find((e=>e.value===s||e.url===s))?.config?.dataColor?.body||[],b={};let h="";f.forEach((e=>{e&&("默认"===e.label&&(h=e.token),b[e.token]=(e.colors||[]).map((e=>e?.value)))}));let l=b[t||h]||a;l&&0!==l.length||(l=re("DEFAULT_COLOR"));let p=l;return i&&(p=[],l.forEach((e=>{p.push(function(e,a,t){const i=e,n=function(e,a){if(4===e.length){let a="#";for(let t=1;t<4;t+=1)a+=e.slice(t,t+1).concat(e.slice(t,t+1));e=a}const t=a||.5;t>1&&console.info("提示：透明度设置大于1会导致图表渐变失效（如刻意设置请忽略）。");const i=[];for(let a=1;a<7;a+=2)i.push(parseInt(`0x${e.slice(a,a+2)}`));return`rgba(${i[0]}, ${i[1]}, ${i[2]}, ${t})`}(e,t);let o={x:0,y:0,x2:0,y2:1};return"bottom2top"===a?o={x:0,y:1,x2:0,y2:0}:"left2right"===a?o={x:0,y:0,x2:1,y2:0}:"right2left"===a&&(o={x:1,y:0,x2:0,y2:0}),{type:"linear",...o,colorStops:[{offset:0,color:i},{offset:1,color:n}]}}(e,n,o))}))),p}function Fa(e,a,t){const{columnChartType:i,doubleYAxis:n,yAxisShow:o,yAxisMinAsDataMinAndMaxAsDataMax:c,yAxisMin:d,yAxisMax:r,yAxisSplitLineShow:s,yAxisSplitAreaShow:f,yAxisLabelFontSize:b,yAxisLabelRotate:h,yAxisPreUnit:l,yAxisAfterUnit:p,yAxisName:u,yAxisFormatter:g,doubleYAxisAlign:m}=e,{position:y,measuresValueMax:x,measuresValueMin:C,measures2ValueMax:w,measures2ValueMin:v}=a||{},S={type:"value",show:o??!0,min:c?"dataMin":d,max:c?"dataMax":r,splitLine:{show:!(y&&n&&m)&&s},splitArea:{show:!(y&&n&&m)&&f},axisLabel:{...{fontSize:b,...na(e,"yAxisLabelStyle",{},t)||{}},rotate:h,formatter:(a,t)=>g?`${l||""}${ta[g](a,e)}${p||""}`:`${l||""}${a}${p||""}`},name:u,...sa(e,"yAxisNameConfig",t)};return y&&(S.position=y),"twoWayComparison"===i&&(S.axisLabel.formatter=function(a){const t=a<0?-a:a;return g?`${l||""}${ta[g](t,e)}${p||""}`:`${l||""}${t}${p||""}`}),"category"===S.type&&(S.data=[]),S}function Pa(e,a,t){return e instanceof Array?e.map(((e,i)=>Fa(e,i>0?{position:"right",...a}:{...a},t))):Fa(e,{...a},t)}function Ba(e){const{animationDurationUpdate:a,animationThreshold:t,animationDuration:i}=e;return{animationDurationUpdate:a,animationThreshold:t,animationDuration:i}}function Ua(e){const{shape:a,sizeRangeBegin:t,sizeRangeEnd:i,rotationRangeBegin:n,rotationRangeEnd:o,gridSize:c}=e;return{shape:a,sizeRange:[t??12,i??50],rotationRange:[n??-90,o??90],gridSize:c??8}}function Na(e){const{visualMapShow:a,visualMapMin:t,visualMapMax:i,visualMapItemWidth:n,visualMapItemHeight:o,visualMapHoverLink:c,visualMapOrient:d,visualMapInverse:r,visualMapCalculable:s,visualMapRealtime:f,visualMapTextMax:b,visualMapTextMin:h,visualMapInRangeMin:l,visualMapInRangeMax:p}=e;return{show:a??!0,min:t??1,max:i??800,itemWidth:n??10,itemHeight:o??60,hoverLink:c??!0,orient:d??"horizontal",inverse:r??!1,calculable:s??!1,realtime:f??!0,text:[b??"高",h??"低"],inRange:{color:[l??"#eaefff",p??"#4979fe"]}}}function Ra(e){const{show:a,type:t,min:i,max:n,splitNumber:o,itemWidth:c,itemHeight:d,hoverLink:r,orient:s,inverse:f,calculable:b,realtime:h,textMax:l,textMin:p,InRangeMinColor:u,InRangeMaxColor:g}=e||{};let m={show:a??!0,type:t??"piecewise",min:i??1,max:n??30,itemWidth:c??15,hoverLink:r??!0,orient:s??"horizontal",inverse:f??!1,inRange:{color:[u??"#9ae9a8",g??"#1f6f3a"]}};return"continuous"===m.type?m={...m,itemHeight:d??60,calculable:b??!1,realtime:h??!0,text:[l||"高",p||"低"]}:"piecewise"===m.type&&(m={...m,itemHeight:d??10,splitNumber:o??5}),m}function ja(e){const{rangeStart:a,rangeEnd:t,orient:i,yearLabel:n,itemStyle:o,splitLine:c}=e||{},d=o||{},r=c||{};return{range:[a||"2023-01",t||"2024-02"],orient:i??"horizontal",cellSize:"auto",yearLabel:{show:(n||{}).show??!1},itemStyle:{color:d.color??"#eee",borderColor:d.borderColor??"#fff",borderWidth:d.borderWidth??2},splitLine:{show:r.show??!0,lineStyle:{color:r.color??"#fff",width:r.width??2}}}}function Wa(e){const{showEffectOn:a,brushType:t,number:i,period:n,scale:o}=e||{};return{showEffectOn:a??"render",rippleEffect:{brushType:t??"stroke",number:i??3,period:n??3,scale:o??2.5}}}function Ea(e){const{nodeWidth:a,nodeGap:t,nodeAlign:i,orient:n}=e||{};return{nodeWidth:a??20,nodeGap:t??8,nodeAlign:i??"justify",orient:n??"horizontal"}}function Ia(e){if(e&&f()(e)){let a=e.label||e.value;return A(a)&&(a=e[Object.keys(e)[0]]),a}return e}function Oa(e,a){return(0,m.joH)(e)||(0,m.BHS)(e)?(0,m.GvO)(e,a,"| raw"):e}function $a(e,a){if(e&&f()(e)){let t=e.value||e.id||e.label||e.name||a&&e[a];return A(t)&&(t=e[Object.keys(e)[0]]),t}return e}function qa(e){if(e){const a=(0,m.OG$)(e,"YYYY-MM-DD");if(a)return a.format("YYYY-MM-DD")}return e}function Ha(e,a){let t="";return e?.statisticsFunction&&(t=Je(e.statisticsFunction)),`${e?.customLabel||e?.label||e?.field||a}${t}`}function Ya(e){return e?e.customLabel||e.title||e.label||e.as:""}const Xa=["type","data","id","env","dsl"];function Ga(e,a){if(!a)return e;const t={...e};return f()(a)&&Object.keys(a).forEach((e=>{Xa.indexOf(e)>-1?console.warn(`报表 ${e} 暂不允许变量赋值覆盖。`):t[e]=a[e]})),t}const Va=["titleTextStyle","legendTextStyle","labelTextStyle","tooltipTextStyle","subTitleStyle","yAxisLabelStyle","yAxis2LabelStyle","xAxisLabelStyle","xAxisLineStyle","axisLabelStyle","dataTitleStyle","dataDetailStyle","chartItemStyle"];function Ka(e,a){if(!e)return e;if(f()(e)){const t={...e};return Object.keys(t).forEach((e=>{const i=t[e];if(Xa.indexOf(e)<0)if(f()(i)&&Va.indexOf(e)>-1)t[e]=Ka(i,a);else if(p()(i)&&(0,m.BHS)(i)){let n=m.wzx.formula(i,a);"mapName"===e&&(n=_(n)||n),void 0===n?delete t[e]:t[e]=n}else"mapName"===e&&(t[e]=_(i)||i)})),t}return e}function Ja(e,a){const t={};return e?(f()(e)&&Object.keys(e).forEach((i=>{const n=e[i];if(Xa.indexOf(i)<0)if(f()(n)&&Va.indexOf(i)>-1)t[i]=Ka(n,a);else if(p()(n)&&(0,m.BHS)(n)){let e=m.wzx.formula(n,a);"mapName"===i&&(e=_(e)||e),e&&(t[i]=e)}else"mapName"===i&&(t[i]=_(n)||n)})),t):t}function Qa(e,a){if(!e)return!1;if("string"==typeof e&&e.length){let t=e;return(0,m.BHS)(e)&&(t=(0,m.GvO)(e,a,"| raw")),k(t)}if(f()(e)&&e.url){let t=e.url;return(0,m.BHS)(t)?(t=(0,m.GvO)(t,a,"| raw"),k(t)):k(t)}return!1}function Za(e){let a=!1;return"users"!==e&&"ciphertext"!==e&&"json"!==e||(a=!0),a}function et(e,a){const t={};return e?(Object.keys(e).forEach((i=>{(0,m.BHS)(e[i])?t[i]=m.wzx.formula(e[i],a):t[i]=e[i]})),t):t}function at(e,a){const t=a%2==1?"bar":"line";return e.serieChartType?e.serieChartType:t}const tt=[{label:"年",value:"YEAR"},{label:"年-季度",value:"YEAR_QUARTER"},{label:"年-月",value:"YEAR_MONTH"},{label:"年-周（跨年）",value:"YEAR_WEEK"},{label:"年-月-日",value:"YEAR_MONTH_DAY"},{label:"季度",value:"QUARTER"},{label:"月",value:"MONTH"},{label:"周",value:"WEEK"},{label:"星期",value:"DAY_OF_WEEK"},{label:"日",value:"DAY"}];(0,C.tD)("zh-CN",{e202de9cb654d2162ed84f9ab481244f:"市",feed804b208ead0de629d7ac6e4375d9:"县","59b2a8f7733684739b8688a231b29203":"区","83e490932b188269097a82939b2eb8ae":"求和","08b7b284821ae7703576a77e86a9fd6e":"均值",e8fa0672c78c68dc80092aff95f76789:"最大值","18ce3b4b6fc41fb41b685268d0df2522":"最小值","029eebde778ad99fe2c78054c053c2e6":"计数",ca05a45a085a260019f74bd8969fb3aa:"去重计数","4b3fdb6ff92620ca22b1c8ea43101cd0":"[{{@1}}]接口请求异常：","0a08b9b29c307012259c9fe9f70ca444":"{{@1}}亿",e997cd2ecad440e3edb113af8bda4348:"{{@1}}万","010fe4515099dea840bffb131bfbe534":"{{@1}} 时 {{@2}}分 {{@3}} 秒",eacd5475fbf5594d6ba5262cdbfef15f:"{{@1}}天 {{@2}} 时 {{@3}}分 {{@4}} 秒","7afba2fe376032e54721f9f99872c13c":"气泡值","440ed0c358400343a51c2c2016589b80":"提示：透明度设置大于1会导致图表渐变失效（如刻意设置请忽略）。","088f7c37c0107c3568a257ba5589f41b":"默认",bf1a9ddb379756fa421abce7ec490791:"高",d95ebc056c47f63d9d8c7bb897d9b17a:"低",a0e64bf32fbf0befbf3dde951491eb8a:"报表 {{@1}} 暂不允许变量赋值覆盖。","2464e2ee44653ebf8645dc56441fb936":"当前JSONQL字符串解析错误：{{@1}}","91858878042b3fa89cfc968ce2671d08":"气泡图",c2f9437656c3d0c2929a83b071acdd5f:"气泡图报表组件，可以用来展现数据分布情况",e3ad981601e2b33add15a6bc879e3fbe:"X/Y轴翻转","7313821427754f2e54457b03120afdb4":"启动渐变色",c32abfb437f183cb2fbdb8b30e33b70e:"属性","4ca72347ca795f4b3f1629ba46b29eef":"数据设置","8872f9c74202237811666dda6a2101bb":"获取API接口数据中",a763278ab599e58635c366d397298829:"X轴 / 值轴1","6c06cea48883a45eecdf736ee0199072":"Y轴 / 值轴2",cf9d5f5b0a5b09619dc6fa96eeff1edf:"气泡 / 值轴3","9d0f75c1e8cdaab9f0891dde77e708b6":"用于设置气泡大小的数值，数值越大，气泡越大。如果未设置（值轴3）则气泡大小默认为10。","5b4fe767998f32659d2c146148be4c70":"状态","90955854a9a6d4d692200af9c94ca7e8":"外观","1b6ad312fe99fba6096a9d7b78aac788":"气泡图特性配置","445930b1acc6acbbccdf760cf0b4d176":"气泡大小缩放","3f2605b69947e5a66147b252e42c0e05":"用于设置气泡大小按比例缩放，设置成 3 则放大 3 倍展示，如果设置成 0.5 则相当于缩小 2 倍展示。","2e3f089b567d7e4b000e00aebef74191":"显示气泡阴影",b2e0ebc34e2fb68bb36218a4c34d1c45:"阴影模糊大小","4ad94bf03454c3206d8ce99033467c2d":"设置气泡阴影模糊大小","3f41800d62f3f93938620c95ef4226d2":"气泡阴影颜色","6719306ebc295ac8e7d3041c28a3ef68":"水平偏移","8e176b9f2dc7c6b90023b6c8032f8286":"气泡阴影水平方向偏移距离",d5ce403d6b024973aea8600c4365b31c:"垂直偏移","88dff14a3a470b956510dcd0e3e0e896":"气泡阴影垂直方向偏移距离",f0c94d3c0b9d6f6efe60aa8ebae9368c:"日历图","0a0b202d1e75fd3ed96c21a47b8cfd2e":"日历图组件，用于展示「日期」和「数据」的关系效果图。比如展示用户某个时间段内的提交数据（类似Github个人开源贡献图）。","01b0d02c2f605a4ff265a1fd62217318":"X轴 / 日期",d56bfd2e08a94fb8e60bc666a833ee3b:"Y轴 / 值轴","8ae0f01b1f46cd12dfb0b3f58b63d798":"水平柱状图报表组件","9b5e78b0007ee291e41f8ac9da02436d":"水平柱状图",d18765f80aae588772214ba58d940a56:"柱状图","7bae58ff3c827bc4fcfbf024019fb7a9":"柱状图报表组件",a9ccb808b3904b10a91cd58bfbbe1f66:"柱状图类型切换","160fe22671b38233c07ad6ca3bb66a81":"双向对比柱状图",cf418201b8833d35d558575715ab9242:"堆积柱状图",bce2642c91f1f8971ebcc18cd099ce5c:"柱状图类型","8e30251bead82ee66353a8f367fe1e12":"图表类型",b9dfabfddd24e47190f288ceef57a61b:"X轴 / 维度","95535338338a9a1918412285bc8fc7cb":"柱状图特性配置",ececc9f00ed3cc804541ad8243c530fc:"堆叠柱状图报表组件","8b9baeecb29ea263118df08eb796762f":"堆叠柱状图",d513d1399b8d5d936c2cd94760a1ae0a:"双向对比柱状图报表组件","14b4c4ab63827542ad0cfa937ddf02f9":"双向对比柱图",f91bf74fad3ca31acb331d658f1f3dc3:"漏斗图",b3b58e19411c0e60a643f820009b068f:"漏斗图报表组件，可用于展示数据转化情况","45df96ff523ee085caeb187caf7de610":"对比方式",b51c5abbef58b2fbc3d9deee1d7c12db:"同值轴对比",a95b10f76ed4caaea11a665487e1efc4:"不同值轴对比",e44a638ab9bfe7e8ba0339209deca83d:"扇区名称 / 维度","3b33bcc4349937f20400843813d846bf":"扇区大小 / 值轴","2f96a8f3dcf830398ed610cf22d41a41":"漏斗图特性配置",bf933bf2ca7091c3952f1f1e99d111fd:"漏斗图朝向","23f516e0894efe170173b8adeb17f9d3":"纵向","5347ccc0e616498ffeca553112fea235":"横向","7e036589700a0cb5fa3ee19bc0749508":"仪表盘",c9927d1a0adb658de32a1d0bcca3dc6f:"仪表盘报表组件","07232c825725c35377b350c6ac6d2c70":"折线图",e235a6d95c59a85409eced6cbc46781a:"折线图报表组件","441d3403c9fca8764aeea8b39b041af1":"折线图类型切换","92cd841000dea52557e6afff136a4c7a":"堆叠面积图","2ada1d86c52a1d2e8d33847f699b21d1":"折线图类型","08b6e168a72f71264746512acc1d1a89":"X轴翻转",d7bccb57684f78a3e8363b029382f813:"开启线柱混搭","7cd63400c23c439b8b33d9004beb392e":"开启双Y轴",bf9052d9eb86424a7f4503b4064e8c27:"第二Y轴/值轴","5b9b0e3cec43ce6c5e5d02822d987567":"折线图特性配置","2fc6394c937d163d0456e9c76d0a9f52":"线条类型","6efc389cd74943a9fad97175e5986716":"默认折线","69aae1abf3dbbe152b9cfbb044f48fc4":"平滑线条",cb1dba9bd8a96221f2ca0b1b56efdfdd:"阶梯线条",c0bd946068ee8fd9b68f484a4f9d6454:"阶梯拐点",d773d698e44f27164ab6266d2f0e8fa0:"当前点拐弯","3d12cfa417a3ec2681958eea7365655d":"两点中间拐弯","9681a46d2e2be7db51d42e2e13c2be82":"下个点拐弯","50e284dcadff881fc48870db5bc28ba8":"线条样式配置",e6406a3b437ff10b5523f6b6d68dd0bc:"线条粗细","00039e527cc9e58d7ff408a731d7d849":"数据点","5dbf67efbc108b0060d126fc485626c4":"空心圆",b542249e3a5c3547a3ed35f00163dcf3:"线条阴影颜色",fd5da329ceca059445a47f75f7cc2784:"阴影水平偏移",ca821ac7a5eaad21a5a8896367f4d8ee:"线条阴影水平方向偏移距离","17f984c6c16ad2edc3137036e3b47a90":"阴影垂直偏移","00d1d2e3601e31e96ec6c2b9154b189c":"线条阴影垂直方向偏移距离",a7a74832564b718f9bca1f18114358a8:"线条透明度","4d05bad958878216b77e24a6259aa67f":"线条透明度，支持从 0 到 1 的数字，比如可设置为 0.65，如果设置为 0 时则不绘制线条。","64ac05f1a7030a5499ab0b649df11e1b":"堆叠面积图报表组件","175b384a2a93aa0532cbc28a61b28a92":"地图","7d87d952a96262f26fded63e8d72727c":"地图组件（色彩地图），用于展示区域相关数据，其中区域颜色的深浅表示对应区域相关数据的大小","274daa13cba92ba5b829c10a23c87f4a":"地图类型切换","12ad0173b9b3fd3d201fa3be4ac18715":"地图类型","0c3b8bb2e883eb91a11b78ccf266ea31":"中国地图","9a7e511e82051672b371d06bdb59beef":"世界地图",ad0d75c309a62df918a81ef3e265a1ca:"省市级地图","6d72ab2b6682ff74f484d50a2fd26d88":"X轴 / 地区",c777350dcf2253d686b785301d93d87a:"用于绑定地区名称字段，如：北京、上海等数值的地区名称字段。","56d6f4283c5eccc7f5f4c19e174a587a":"环形进度图",a71e77b18151ac5a483fc8800f3f615b:"环形进度图组件","8875effe1dcb4719a9af89f1493482bc":"展示标题",a11671403f55cd12e6990a44f0cad46d:"支持模板语法: hello, \\${xxx}",d98c7c02de481f370eabffa38b8cdc14:"取值字段","4b00d2fd62704b6fc894b14fd25639fb":"进度图/仪表盘特性配置",c81d4c5ef6ffc1b6fe2aaa386f3e19da:"展示数据标题",dd69cb5cd8f4684b52d0d6f7424ba86d:"文本字体样式","1c8cca86513bdef34adbfb6a006bdea5":"展示数据详情",e68b932b2090d531f1e8e877f41604ce:"展示进度条",d040fcb0d5bf788e0055abe78a3fa3fe:"进度条粗细",b3b6adc6334373c34c4be01db9ddcd31:"起始角度",db3e81d65541a7d18d3057811fee7fd9:"结束角度","4265d77c97a886e83c89259993efedce":"进度条颜色",aade24853feb2e453d6284e4f4a9af8e:"展示背景条","75d260efde4b446760e9cbdbaaa0aee8":"背景条颜色",aaeecc29a4096972ab9ce0a85d87b826:"展示分隔线",f9e9cb4895dabdb6443294436d1aa8d2:"分隔线长度",b7901de2d97396159e63436bf3230c26:"与轴线间距","890ad460b8af1f251110547358c1271a":"可设置分隔线与轴线间距",c843224b4b07fe6a76aaeca37dd7c18b:"分隔线颜色","2c7069b739771d232965f3e965cc3269":"分隔线粗细",bfb401467d48eaa092e16ad5a14f70b9:"展示刻度线",caaefdca745778937e2e9339897b47ff:"分割刻度数","4f5df9dc1061ae9c796d113b6a30d1af":"刻度线长度","486b1ef9b822b6961d8d81f39f7877e6":"刻度线与轴线间距","24244f2d6bf8aaa1d54b80f4112e7413":"刻度线颜色",c1d309aee7ff8b280243edb937be1d5d:"刻度线粗细","897cdf52a3a0fe0cf260f746de56fce2":"展示刻度标签",efa729a4c33049f6ca6cd60f54183f6d:"与刻度线距离","99ee02d906271cb444990b52577d73db":"标签与刻度线距离","60305f01d6d68d3e41082fb08d472666":"旋转角度","090711d84015b32d5b3ba547419e7db1":"标签字体样式","4c5a283be9a588f4715868a8f83241ac":"展示指针","0bab97dbd9183ada9df58439cd707182":"指针颜色","177ca54c92bd3b015e268361782ab853":"饼图","6ca30e94995ffe96c6eb3ee7fce3f441":"饼图报表组件","82428a952e14642f3259c1fb39a09cc6":"饼图类型切换",dd1e86744ed604daf0e87a1fabb7e071:"饼状图","9c00e88da7f93c9912117feab4323321":"南丁格尔玫瑰图",e40412fb56fb00cbca792b1208e988f7:"环形图",ad99c1415b2054ac9959945a942fe2ea:"饼状图类型",a1c05baab3fe35efdde8e41cfe43c304:"数据展示模式",d83f6824d9daafbd14cbb8a87334bda2:"圆心角展示百分比","342685a08d28022dea268f7d678bcb47":"圆心角相同","6f9a06f7346c68843d0dc6c273c2c2da":"饼图特性配置",de2a9636987dd16c65cbd22ca18598ea:"圆角边框","1cfd17b62d1d54836ba8f65a53d88f57":"环形报表组件",e833d1d6e8d53c8fe84c8a2a00a02210:"南丁格尔玫瑰图报表组件","6631e3430df851b1c08136ddb6916e0a":"省市级地图组件，可用于展示指定省市级区域相关数据","045515308852d562d71fc55e3163007b":"雷达图","7194e3ac2903eb8ab9cd5287ae194647":"雷达图报表组件","510010551560164616258cf4720e70d6":"报表",a831e3beb47fadfa7e7df6ea1f7f731f:"外圈 / 维度","9b4e1b4e0436704e6002ee49cd0e24f5":"指标 / 值轴",db1d81c15acef2cd9ff0903aaeda9b8e:"雷达图特性配置",be00b1a08b827dfc0a4eedf253836842:"展示轴线","41e96bee1d9a96c246408ae904e58a33":"轴线颜色",a2c2faa7b19b241cbb49876729ae699f:"轴线粗细",d99bc7b82627324649bdefd99e1e0fe2:"显示填充","44957cd766b589c456cf6984c1d9b399":"填充阴影颜色",af33776de33a391c3fe93ec851e79bce:"填充阴影水平方向偏移距离",ad283fabaaa5cb23294e8fd153172289:"填充阴影垂直方向偏移距离",cc10ef396140d6ebb938ce109d146971:"填充透明度","94b7344d697415a5213f7e9a7a8cf8ce":"填充透明度，支持从 0 到 1 的数字，默认 0.7，如果设置为 0 时则不显示填充。",d20e5641cdce74366a3d5edb4018ee8c:"气泡地图",efb8ad26e5cb66909f920cb88feb68ef:"气泡地图组件，用于展示区域相关数据，其中气泡大小表示当前区域相关数据的大小","680234f7bc7c0f404054de370b75f703":"散点图","957264a06352aa7e3b00ee5ea52653f1":"散点图报表组件，可以用来展现数据分布情况","5c1bd4761ea31d971bdce6f065a628b3":"散点图特性配置","9bd7e017b57e98a0f000a388108f7de7":"标记大小","01ea51a8f94adbbcaede77494ad2450e":"标记图形","0411a03265fdecc7c9fd122185570bb9":"圆形","15b38d4bbad9c113952120f5e54e4711":"正方形","731b08ad9e678f02eb6e3caaccfda071":"圆角正方形","938672262e8e566b6fcd66f505de1858":"三角形","7c8e0638911a88207223e16b84c1743e":"菱形","4809961c1c95ed3226fa8fea589c85d5":"大头针",f4a98c66f02bf297cc9e27edeed54f0d:"箭头","862c84b08dd38e25eab1684002739195":"阶梯瀑布图","206f8d9759b715c181295f32b4beb814":"瀑布图采用绝对值与相对值结合的方式，直观地反映出数据在不同时期或受不同因素影响下的增减变化","171ab12f4623e9164fcfad086fa1fc4e":"阶梯瀑布图特性配置","7cdc86d9f4db11ec9d3f87492035eb2c":"正数柱体颜色",d4eba82e5160800639e0583ae3d92109:"负数柱体颜色",a49994939b5bd3b48c03ce446245e868:"展示总量数据","6c68fb0e6ec471b1de348d66656f6237":"词云","4df34994e35fdce114dfcef9b0057a12":"词云报表组件，用于展示当前热点关键字等相关信息","901445112c8487bba95a0cb27496ed23":"词云形状变更","50c8d38fe76340808922133f05ef7a3e":"五边形",e662ad79599d2f1788b42d88afb58c96:"星形",cf90dad23a269bc9cac20cc3776acd6a:"钻石","210cf0dbe2ed70b8b205e2c722c4db11":"词云形状","3830c3410d6e750cbb029b8bd1ab2233":"词云类型","8bc77db9bd8703a8ca4f26be2b902ff4":"维度（名称）",a57822079640d561044af32708415564:"值轴","1a06479a9efea2b3941022ee804077bd":"世界地图组件，用于展示国际区域相关数据","723cb669d48c0fc7142cabb365ab856d":"数值指标",f3ad92287b88e974ee2e0a881b0b1db5:"用于展示报表数值指标",a48579016e5d60d34e279dcbf5636412:"数值样式设置","67e842aae1a20bd83918a8172e63f664":"数值标题样式设置","7dcffc681ba4341612977cf48e7c6754":"排列方式配置","12353707d7fffca47e763fb57a004214":"排列方式",bd60a437951ac28cb135f83d5baf6e4a:"用于设置数值和标题的排列方式",e5302dc27d168695cf6ecebd5dae48bd:"上图下文","13fb83e9ed5a5ab6dffa2430c0042727":"上文下图",db3806112b93979efb888be7c90e7c17:"左图右文","24adf029cc2e66ff94839fffc9d2471a":"左文右图","621dabc1d28f5b3fb6958ec43a9f9a97":"图表数据",f14da419c7b87f5fed2ce3b4ce61e721:"当前点击的图形元素所属的组件名称，其值如 series、markLine、markPoint、timeLine 等",cd42984b7878d5c32e6e72c3510ffe68:"系列类型。值可能为：line、bar、pie 等。当 componentType 为 series 时有意义。","2a78b75c7131f0944cf2537235d408b4":"系列在传入的 option.series 中的 index。当 componentType 为 series 时有意义。","7e732f457c8655e0909c05a598564401":"系列名称。当 componentType 为 series 时有意义。","2c5990637b2ddedf968afd1e77f6bcad":"数据名，类目名","07baaec1faea9ecfa2569f448e3b28eb":"数据在传入的 data 数组中的 index","25fd03f60b8cffaae92cebf60e78b4a9":"传入的原始数据项",ea7e44cd2afd9f35ba1dc62faf1f91e0:"sankey、graph 等图表同时含有 nodeData 和 edgeData 两种 data，dataType 的值会是 node 或者 edge，表示当前点击在 node 还是 edge 上。其他大部分图表中只有一种 data，dataType 无意义。",f353676a7a6d33441ee4c854a124b0dd:"当前图表数据值","52623bfd6974336648ad0b831c0bc2aa":"当前数据图形的颜色。当 componentType 为 series 时有意义。","49dc1cad8d77e970e0052b44b6892329":"初始化","3d6543aa1286514fd374ccf816ec6ec6":"组件实例被创建并插入 DOM 中时触发","86a675e21d525bd29ac08973875268fa":"数据","2cb14edcea2bf21e62901e5249a4b24f":"当前数据域，可以通过.字段名读取对应的值","0d1a2a9da963b185ec9a9733a6f71f92":"鼠标点击","36af746dc3b48363715d9fb479445044":"鼠标点击时触发","2fd570b707fb49442c5f479d57748336":"鼠标悬停","645ba9f02abb0e6b107d18db4318d4a6":"鼠标悬停时触发","7a48263bde8ae8e0c9424873a85d4b21":"切换图例选中状态",c4b4782f3cd786d45f7c50f49d42afb8:"切换图例选中状态时触发","17184342e552aa3de6758a035ca66607":"切换的图例名称",acd9886ed6b907d6cd0c0e9acfc95564:"所有图例的选中状态表",ad30c48d6cf3f8944a2cc83aa1ab7eb3:"重新加载",bf55e2f447bc6fc33ddb66120cad5033:"触发组件数据刷新并重新渲染","1b32d4ab583e41f03419084ed30d7296":"变量赋值",f0da0c9ee2ebe5485fe7fa292796ecce:"变更报表组件数据域，用于触发数据刷新",ea46a0f4040b90545322d1407e9af771:"报表数据域",ab84f18a48d760c7a4feaffa2a7b10eb:"数据字段",e1fd7ea89268c1d2f14610c335f0ddaa:"字段数值",f7cd681943d791b83761a064f20873d1:"自定义属性变更",a9141decf95af2d178d492d6ab0556a5:"直接变更报表属性字段数值，并重新渲染报表","826c4a6a0ddf7e0c65e87ca2afe8cd22":"报表属性","78e1ad0353e9f69cd50922e8539911ce":"报表属性字段","47664be102901b1a648ec35f13e7b6ad":"新的属性值","37e20008fe01687ba553d65f0944e49c":"图例数据","4edd4a2bb84280cd6d7896270027a10e":"图例指标","8dfa308fc6faa05684977724ce68138c":"图例1","65196c2f45dee91d1b9f004d91c8b456":"图例2",c1bc0d14ed87b3c6a5e0ac1751757fe2:"红米","021a2d89186467a50d8e267719f5098f":"小米","22a9d49b1614338b52e828ec7c5eaa33":"美图",da5ce6ab1df651296eb5261708f28b50:"魅族",b362d5cf654bf0cb3a29701fdcd18c16:"红手指红","60110a003d05374563d9d8f77dd17187":"金立","2062d9b4246ddb121024c815f25e6ce2":"诺基亚","9bf9f9255d02c5d9423b0bf4f95b7bf5":"锤子",bc4f8cfa37bf5dacbebe839952c747ee:"大疆",a15d510eb1661374b0a04e2bb5bd8408:"摩托罗拉","0e5bb0484446fd0a6f30fd8aa22748ae":"联想",f07781ecaf6a0dc84f6aa1a4669ca2c8:"玩家国度","1f1950b6e464fa418938823594d483b1":"华为","5d06e37e0f8767bf4d662ba234809d18":"订单转化率","054613cc5ec5f451a0e3a34dcd5463db":"男性用户数",fb7e4bf4613c691c8a32ae986cde648e:"女性用户数","78d031495d189476ca89a113d269d93f":"访问量","50a72dc788b73886a762ea3304ef279b":"访问人数","6f308cab9ebfa33c6ea7ab35533c85a1":"订单量",b967fc421d6f906269194950ef73aeb9:"增长率","1416b87bca7329d6e3f82ea9a0f0b6e7":"进攻","6d63787ca94b2f0dd3ecfdffaba4878d":"体能",bfacd2283df121946fe1cef15eeae567:"技巧","17d825c0140e93bfe6e6f305bb66c27a":"速度",b1bea545be7ae74898dd453cefacf212:"历史战绩",bf4820465af6ddb0b44a9fb4b22610d2:"防守","803a267f7d55f8ce940452453f52eb15":"指标","0f3f4fdba6ad87c30d8850e6d7fe8e95":"C罗","078fc6eed4728d2757292600a0513e17":"C罗_AVG","93fd2a257173e980576b2d6ec2733e97":"梅西",f802893952e623f97d58ee6d4bc4d884:"梅西_AVG",e723105bd267b544b7b78362e48b9480:"北京",c7622d493ecc2b8d0988e272bd103a88:"天津","5b995f9fd8af1b13cea3eb34a60063fa":"上海","2cbe8c268fc79cc0e849ed60a30bb3d4":"重庆","4fc96d5d62e6b2ae0a3d9cec4956fd8d":"河北","6be9789e3a39363014f775d5ec7c1a1b":"河南",a7fab7289aa1c4a382f72c481a941f6b:"云南","2ca764d10db59291d0d806b869b1162f":"辽宁",e7a51bec0811f3a70208be1afeeffde4:"黑龙江",c7d95bf60f5e5a1f0e82c11e81336c06:"湖南","2d6f3eab36efd19c7d605114f3c0efdd":"安徽","690e1e3958192bd839a152ad03f15517":"山东","676f525e95f6d545fd2e4a411fe45501":"新疆",e8c2c177261f3633a6d063a7a52c1a2b:"江苏",e53a72ba4593e13bdf748c211ded03e5:"浙江",ebb1e9d695bad2ec1cac56df9a635176:"江西","2da8a7e0527c238df60113c5d6cd0980":"湖北","6124fcd0758719aa1ee4152638dd0b28":"广西",d9360c5d84f37674988a22e99f2b86f3:"甘肃","79addaf165f734d3b63eb85d0ab1c37b":"山西","57f4e1947ce0c829511dd47f89d6e93f":"内蒙古","62e0ffbb5ff3f77c284c7975b69af37f":"陕西","2316bf19c2276d75ffdb7b4c037f1c67":"吉林","6373278592fb42900f6fb0409c685432":"福建","7f76399585488bc5fe32455abccfad24":"贵州",f01ea4756d42440b211a4a112a11f4d9:"广东","710c7ba1b089532af20755aca251dfd9":"青海","818c183fdec5c5c43811d56045ea489a":"西藏","6732a330c1983691de5b887f73624a02":"四川","8aace5f7036db993e4049d252d539543":"宁夏",f9aed7d3b0442d9e174be9f102fe7980:"海南","84bc107587e5db68fdc77f81c48a9ba0":"台湾",d92c57ae1cc748009a63d7d4b372d8f8:"香港",a609d46fed7e51f2b8575206845dcab1:"澳门","9960b49249353361ea1fe8d2c0a9154a":"中国",d262e07193373c39d122885230f154a3:"美国","49fdff81ee63b322b1855f8b2625f7b9":"俄罗斯","603d002725987ceaf398ac29e516c4d2":"印度","617ccfd1c0ee66effc5c50e2ea1f2537":"英国","151d015961a4c5d5d9bd108333c7e5ab":"法国","1b5ba1468deaf7a5704be635806f7de4":"澳大利亚","4f05ce5ae977b59ebc90d76467ca55e5":"加拿大",a546bb836578e4ff74bfd9f043af4b94:"日本","99a71e9c075e06d03d2c87dc0a4df0e6":"韩国","51a75b2c9cd507bf9370b5f65a449c06":"朝鲜",c4f1eedd5d49ac068b20cf8a9da0a5aa:"埃及",c0f06d6a8b7ef79367055cc12e3ae1ed:"瑞典",ccb248687779061424f911aa2ed360f1:"南非","44d145e7a34617903c6870b3b3b90dc8":"印度尼西亚",bf2e6fb8429fe55d66a188224ed6e3e4:"越南",e30e9ec24f6fa8a8037e2a2a3ea73fca:"波兰","31951935dcdf2921b139d813661e92d6":"乌克兰","6ad4a8a512cbaafc58b7b8c0c6992950":"白俄罗斯","791c072e8221c5c49947ddd0a69023bd":"伊朗","336b44e635e4a16800c75a08e69347bb":"海淀区","27edfb48c66b3d55f139966cb12a6c55":"朝阳区","3c24ccb9b81af44df5984b59f1da90da":"西城区",fbc334b4d4c0af4fed16888273e41c4e:"东城区",e679b86aa81c7d1ea482efc684e1daa3:"丰台区","8090f705cd13c343ae2e74a20cf0faf9":"石景山区","50e55259b30b7e294de034b81c3640cd":"门头沟区",f831bab9d762d303a27232c8f2b78a8f:"房山区","1dc8a3a28cc0315b6fe390240cece37a":"通州区","6af8ad8896f30bbf032b7e48ba2e90cd":"顺义区","9bf92ddd54a558aadf385accdd8962f3":"昌平区",dbbd8f7505fc2db1c2866a08249c45e3:"大兴区","7b11dfa6c8f63adffa7565191146bc2a":"怀柔区","288b4937ea7fe662443baf7112e8037f":"销量","16d37c1a062855f19398c87f9647f115":"地区","6df6fe4c42a387833507668e4027c979":"每日新增会员数",cf22a432058fc87d913a88f6942e694d:"日期","0a59b01d39f369435dbe9167aab196ad":"身高体重分布数据","3d38eb14420694cb443a87807c1dddc1":"小明",b00333af44ff20f19080590d49b21a0e:"小学","459132ffd0ffcd40d61a7a415663fad7":"小亮","5a4e7c2b2963834c120bd19b79b9a7fd":"小红","4196d5ab584f4f2c035a3213fc6d4228":"小华","8d1c0caf38bbdfe0d142f8b429f41f4a":"小张","08cbd6336f17cc09fe782ae2a95be30a":"小刘","4e738f61bb310ee9a5948aa2be95a88a":"小王","42dc631a620e45f612579090a258c09b":"小李","7ab58fbb020728835360b8b15fa4c15b":"小陈","97415f876da711c624fed75e78e2c816":"小刀","5681c2354433bafcebaeae8062373724":"赵明","255a0d77dd0ab2c5371a32d567463771":"初中","9da84c38d4d24eface77e1806a832bcf":"章亮",f764e21807462dba1b743a0301dab8b5:"陈红",c63ddf40bbc94a8c289f1c2992e1f896:"华佗",fa767075aad98d33b77fe243aabdf3af:"张菲",a00d6fc25151a9430aac983692406b09:"刘邦",d40ed2c3347abcecf054c733bf78e52e:"王飞",ff5bd0e05b4fa534411bdee4a9d7515f:"李鸣","715ccf91f7f9393d6603446da97c6fad":"沉香",ccf245551cf569b9e83e9065f19217bf:"刀哥","1925d0cd32171be07327c10df86d70b1":"张三","67fe6c81e710d29c98c253eecd4bf784":"李四","6c732be31e98ce95cfcdf21600723187":"王二","0aece5adb2321061e5c6503d4acb96aa":"王五",ea9deb042b6957327d5f68f01735ab5c:"身高",ed2f4e1047c46a559c9fa44d1a104e8c:"体重","21592c08e85be4aa8957b87dcefc0b90":"github数据","004d9619abe29091ab7b304cb1f4a859":"提交数","97a85a7e019144848f140eb6d1ec10e3":"定时刷新间隔",efde673b57d715d81323607a49aa807c:"设置后将自动定时刷新，最小1000, 单位 ms","2809ef518e1357bfad18eaf7017c1fc9":"颜色",e2898a2221fccd569dd754d5a8635377:"请选择颜色","31b91481d987b8a535b684a2cd5eda35":"上下文数据",d7a3d1165b3b07f26290cd5b85b1ad23:"绑定上下文数据","24fe70486064321222066f0f912ceb6a":"上下文变量","10600cffcc77d5b89e6b68ef0ad2866b":"变量类型","5226a41f14b953bb71511db71dcfa64f":"支持公式表达式: ${xxx + xxx}",edc053557737c52769cd259227e59043:"自定义数值",d7c9afacab11520d4cdb62028ccb9136:"选项标题","43bf7f392fb5a4e004d8e0e2e0fbe2da":"变量名称","1dac34a87a800c24126e1f304c1170eb":"[非必填]可用于备注上下文变量名称",b5d91d081e8008ca5dcbc37987cabec0:"实线","271178f681b82063bb49a37883ff3dc9":"点状",dc35525fc1db90ce01fe8b4be18fb675:"双线",f28f608fa6cb1452462b54ab566bac07:"虚线","04f81c97fc03009e9627139981dbd643":"圆形（实心）","970f8a81be815d7bb0c6a6bc2ba29364":"矩形",fb6cab03d11234f88ddaf95d124306cd:"圆角矩形",d5d08700a570ad2722f8e0cbbfadba82:"标记",e66b4df83c54f2458ec04e04cb5be566:"无","3693bc5713847bbd077b6e46c2a05343":"顶部",a4125f38b12db1e421f90a41685a6489:"左侧","157a9bcb74c3a3055727876ed3ed0f83":"右侧","8bbc96678fe42a36e19b6df521c8a16a":"底部","7b17c54e7a2520812f34af32acb8abb1":"与连接点重合","3b16a5169f70828c4dfe4dbe05a8d2d5":"内部","62fbab18bf1c519ec42cb4f93cf2b9d3":"内部左侧","588a751ef6b68e444b9f77bfb16c81e0":"内部右侧",aab7527a7684dc698370a81032d201aa:"内部顶部","3018d6ddf71d508759b2fd63fe8cac3a":"内部底部","6a770544eba3ba9b675aef52bd2201d9":"内部左上","787ae2a46ba4b4bd24ae6ff7906ad3af":"内部左下","81baca89771cc775fef59573afbb6b87":"内部右上","128faf3126f50d2741d6914220a2a0b3":"内部右下","89a86b6d4e5aff7466cf6d0a1489d031":"外部",ddbcf28fc42e3937837fdc26cc321aad:"中心","5cd8dea33911736929cd3b0dc3a8fefd":"上方","45bb88f3eda9cd8249e09c42de9861ca":"下方","091d64497d283de6948b0403ffa05835":"右侧上部","0622165d0cac695e21149ac57e78b237":"右侧下部","805c54ee5ee6cc689816a5a401a52aa0":"主题设置","4ed292a7d45d7844c88572cbb825e253":"自定义","8188ad6d6a2a0b7e22fda5299faf275d":"图表配色","9000dcf996818acc7ff7d56e68ebbbac":"取色策略","609effbb0d890c63d95747c557963a8c":"设置图表配色策略，可取值为 series 或 data。series表示按照系列分配颜色，同一系列中的所有数据用相同的颜色。data表示按照数据项分配颜色，每个数据项使用不同的颜色。","37015716a788857ec46b1684727e9aaf":"按系列分配","5b839b7dcc28e6d7e39e7bd3884c01c4":"按数据项分配","9d39a122b55703e8db2bd1694859a3eb":"自定义配色",f673650b982afde91d30476086122110:"从上到下渐变","59d04ac9e0b3bd37163d7853b062242a":"从下到上渐变",d6715c47c74f101763785d8d9fb37871:"从左到右渐变","3f11af7c79be600cab4fbb1bb754c72e":"从右到左渐变","01aa840d67368550c34949f25190e04b":"渐变模式",ecb8015feba32b4d445952d04f4bdb91:"渐变透明度",ddd8a3387c751b7deb40b4c14260bf07:"柱体间距/宽度设置",b0abeab982b9316e33c9249e194ebd7f:"柱体固定宽度","46bc89cc5c2be0b791bb6c43e3d2b6a0":"柱体最大宽度","5c29d32b57d94b5baeec6ab56c005318":"柱体最小宽度",db851d839e99857077f6561e6eacad6c:"柱间距离","8650f56e04829261448ae785e32c6ced":"不同系列的柱间距离，为百分比（如 '30%'，表示柱子宽度的 30%）。","677b418f8e43a99c501ed84126c2a0a1":"柱体最小高度","3f51ac13c03fd8462d4ed0b28636f5d1":"柱条样式设置","469dc834434ff501d0ad6d496330d68e":"柱条描边粗细",a4ca736c7e1192524090f5d813afe497:"柱条描边颜色","064687e11ecdac406a49234db6fdf015":"柱条描边样式","39e0e6b8d8816725e6675b8a0b54c0a3":"柱条圆角","96387332a4ae3a30cd873f1ddec9d55c":"设置柱条阴影模糊大小","8cf4ad7b5a18b486e7b2e176cfe7b8d5":"柱条阴影颜色","5ec1afc0cda21ee8cc20ead149306fc4":"柱条阴影水平方向偏移距离","6ccb263ae9619e27f030eb291b05ce45":"柱条阴影垂直方向偏移距离","027458396bf8727df9df599f3098e09e":"提示设置(tooltip)","43b17f858e546f9b1eb94bcab1057c17":"显示提示","4b5561062b303422186338e0b33f086d":"提示内容","40b9495ab86bbc382cd166802b0bbf98":"名称",c64ae2c583961cd60c73e91170bdc5e6:"数值","1dacdcaef7e8cdba287b4bf5844a5bf3":"百分比","48ceb53d1dd1e3985262ebcb29bd27e3":"轴线名称",b9aa608628e039b32860dd137a864d67:"提示文本样式","85a27b097428d444323a61315d611a98":"背景色","7f5a2de205e4578a39be2b5c13adc42f":"边框粗细","01a0b0d0dfbc84048d73523b2255e007":"边框颜色","2716ed79e4e81ce1b880305bdb348c38":"内边距",fa414cfc2ffc329abdc91dbcf51fbfd3:"中心点及半径设置(center)","33ce598edc604518b79b79b87ee4c7ad":"横向位置",ce243e0d9ff30c5aa5cf259db1bb8fb8:"中心点横向位置，默认水平居中展示。可设置百分比或者数值，比如: 120px、35%。默认 50%。",e33d2e81670f4676c786d587f539a059:"垂直位置",ba3815e173d2e28f95d458b22fd4828f:"中心点垂直位置，默认垂直居中展示。可设置百分比或者数值，比如: 120px、35%。默认 50%。","0672dd3c8c132d5c99bd9f3226927cda":"图区内半径",ed0b1d2e5e0b6d2abf80460faa73fe18:"可以是相对于图表容器高宽中较小的一项的一半的百分比，也可以是绝对的数值。比如: 120px、35%。","5336b4e79c742c64082eb6cac4d32b01":"图区半径","8a0123b26ac1313b8ceb1ba8484ba6f6":"可以是相对于图表容器高宽中较小的一项的一半的百分比，也可以是绝对的数值。比如: 120px、35%。默认 70%","600e709a01fc324b577ca8a773ac975a":"图区位置设置(grid)","735763a4b2b3378e3d8e96e79185dad1":"图区上边距","003a8a5efb163a136d6ea10d86c4e66e":"图表内容离容器上侧的距离，默认 60px","13290e2b52fcb4eb1151051a825864bc":"图区右边距",c8d6b4bb18e545e7dc8ae941390b513d:"图表内容离容器右侧的距离，默认 7%","4ffcc02a98a288ee4df31ac6c5e4ca42":"图区下边距","10e142be3f9f8a07c9b88b26f79d0ed2":"图表内容离容器下侧的距离，默认 60px","5b4433b92b903a46ed5ad7f7715b912e":"图区左边距","010de40de6df3f0776a669b6c69266d5":"图表内容离容器左侧的距离，默认 7%","2908799bf2319f93a5074fb3c683bf16":"图表字体设置",fa264f228fa58730c902d9f695314805:"标题文本样式",d4f843756a29ed3f1024be115a89d628:"图表样式设置","9d753eda4f97376cebc8b0f95b522140":"区域缩放设置",f05ef02287c8da8caf95251ff1117438:"X轴设置",d554e73d4f753418ad99ad1657e305a6:"展示X轴","287599ae1426eff90b74a6d6cd95a8c3":"X轴字体样式","9e85186901c5450fb21410a73f764364":"设置X轴的最小展示数值，如果没有设置则默认自适应（使用当前图表数据中最小的数值作为起点值）。",b302b3515652a5a15ed074aa40e19c16:"设置X轴的最大展示数值，如果没有设置则默认自适应（使用当前图表数据中最大的数值作为终点值）。","74e7e538b214a40765e4fe1006bd41ec":"显示X轴网格线",aa9a37c85279861716326f9f52c5846a:"显示X轴区域分割","00de7ad497aa0e9ed2c59d287849b213":"展示X轴标签",cfb1ce15de20ae7582fb364638824aea:"标签全部展示","01f30511e820df760f2ba7c954efe8f1":"标签倾斜度","4a2fd58a46e7e48535d4a45219a10efa":"展示X轴轴线","2217b19fe2f7660a4edb6fc301da8500":"X轴名称","095118bafda5cea2bccf2649d5b14902":"标签文本样式",d53814d4fb28914fafeb9777806733e0:"倾斜度",eb0c73820d9781b9fe0695572ec539b7:"用于设置X轴名称的倾斜度","031a3206a0c2626af3c268ee3adc7a1d":"显示位置","03bd08837f0b61364f41bad38793e6a4":"X轴左侧",c5fc11b9a7c1c6647abcf035fd173a49:"X轴中间","702502b5665d2932abb904d1f20c495b":"X轴右侧",bd42c46595530ec4df50038e8c32a513:"与轴线距离","8d7fa7250b4cd8a709e9bdd634545965":"坐标轴名称与轴线之间的距离。",ad6e310e2e2fb099bb313ccd327ac5ce:"Y轴设置","43ae878560f567b9a675536db71c37e6":"展示Y轴","6a009f26a3d98b085b7e9fff06056a6b":"Y轴数值不从0开始(自动适配)",c3de6da03190fe0ba3f558e5560a02d3:"开启后，优先根据当前报表数据情况进行自动适配，Y轴最小值和最大值配置项将失效。",d4b54425bfd51e38d47547082d74c6e5:"显示Y轴网格线","4f1a9db249fcc1b839ca9053e61591b3":"显示Y轴区域分割","2c79db503b7409f818765f3e1ebfdf09":"双Y轴刻度对齐","5b3695545f82fa0d4b4bf7a6e0d7b598":"<div>Y轴详细设置</div>","784c4512c862a7158755d3df54b55b1f":"Y轴字体样式","5a758770e46cf0ca7d50e321e84df89a":"数据前置单位","74e52d004753539a4f08a98c0e6ea111":"数据单位",e999599567d6807631664b03d913e1e6:"Y轴数值格式","6edcc8cc40470e6152373f6aff3e2f5b":"Y轴名称","84593f0f82b15c6e0a54510ee64a7d52":"用于设置Y轴名称的倾斜度",be5202a9dae1eaa100262210b33ce2de:"Y轴头部","5b06f1aef0b1f09af4f83b4a8ed30143":"Y轴中间","3ea0d5785200c85565afb66617cdd7bb":"Y轴尾部",bb00d85f55930459db4e93b64f1f59ff:"<div>第二Y轴详细设置</div>","7399a8c9fa60cfee8bff982705b74086":"标记和标线设置",fa70cd50687ede9419a81cf03c29a195:"标记最大值","90be3c41250e9036cf6c371163791f65":"标记最小值",cfd3246c86b129fd4fa6d9988ba262f8:"标记背景颜色","67f22edc74dcea10e2408088f081cff2":"设置标记水平方向偏移位置",abed894ac7d4cc3691d31290616fc6e2:"设置标记垂直方向偏移位置",a48d39c4f25c58da83dfebfceadf2715:"标记旋转","8396292f6ca4a5715dfad9a099e29e10":"展示均值标线",f09f233bd91353b758e28208056a0cb7:"均值标线颜色",a4cde99c0bc671c73481507b1ba7e058:"开启基准标线",b4748e0c4fd8e59ebc5d434787495d14:"基准值","04070bfa6eceb6fd0726d63b9fbca46c":"基准标线颜色","1696c251d6a9be7a2581476f1dffe56f":"标线左侧标记","79a5d649da7ac91e424877dd6708b252":"标线右侧标记","8c90c769bea75047893f65e276f7336f":"标签设置（label）","8c00c93f007d37b683f431989bbd90a1":"显示标签","3caae02b2b038952abcf5e1678c01399":"标签位置",ef2f866e8e3fb89d24fab2d78a712246:"负数标签位置","4054024fe9a2b89431702c5133acfc19":"超出展示模式",d81e93adb0e549fa79ac737ce953a6b7:"超出省略","2c2a689c655ecac6dd468514532a778f":"换行","9150878dd9a498a526adce5289ada9cc":"换行(单词内换行)","2c5025debd4e9e73fa9cf58842606815":"标签内容","49b99dc30509e878f454db732e423d81":"图例设置（legend）","26902b968e1dcbae5c57baa2be468c75":"显示图例",d69e18ff6b27a22101d00f711fb94706:"图例文本样式","94a086278a7a209cf0b2009244f5045a":"图例对齐方式","2eb7450afbcc9bffe0d8a46ae3dfae50":"图例标记和文本的对齐。默认自动，根据组件的位置和 orient 决定，当组件的 left 值为 'right' 以及纵向布局（orient 为 'vertical'）的时候为右对齐，即为 'right'（左文右图）。","6481c4d10bcc1f40fb67b6556770442e":"自动",c9d7262306ccf85aca69f95dba065af3:"图例排列方向",bbe3d7cdc9a8100d41e545c17488c933:"水平方向","25f0153c233557046e1632cc4719e98b":"垂直方向","47331b4a500d2e3b4d28152581ccdc24":"图例展示模式",c165ac90f49fbdbb603d33be5bc8e25f:"当图例数量较多时可选择滚动翻页展示。","90134586a5fbcb59cf3b63e05ef08aa0":"普通图例","859cf36f428e0dbe276ddad6753b808c":"滚动翻页","0f17b89d64e84f2c064254988f84a700":"图例位置",c7759ee44e4bc03a82b599315daba251:"左上",bf91bd02004049ff235b3ef9cb77891a:"右上",c3e5d04eb628890fb2be80d32b1be85f:"左下","7e0bb5bab448cac2075c4aa0d161bb75":"右下",f6ee0981cc3c02b7e3a3ab0535a09796:"显示图例数据","093d20e1281b05aa740dce6ef47d7d87":"开启后，图例中会显示对应的图表数值",ae21bfed0c22dddf5e681c68ce462c71:"图例数据类型","6b7faec9be2b2c83004e6c9125eb97b6":"图例上边距",caf2c8ff993ff98fd11c3ff94d417ba4:"图例组件离容器上侧的距离，可以是像 20 这样的具体像素值，也可以是像 20% 这样相对于容器高宽的百分比。",d8b04f1f2401d61117a58aff772f450f:"图例右边距",d5fd7db585563cb65d3735c0db842bdd:"图例组件离容器右侧的距离，可以是像 20 这样的具体像素值，也可以是像 20% 这样相对于容器高宽的百分比。","13abc2da0ac38c75bc9eabea2d3ca473":"图例下边距","97f3b7065a4e18c962f720223632f330":"图例组件离容器底部的距离，可以是像 20 这样的具体像素值，也可以是像 20% 这样相对于容器高宽的百分比。",d3632d79d3436a16533ebe8e0e76de4c:"图例左边距","097a3b19477122971271e0c38ca5ac20":"图例组件离容器左侧的距离，可以是像 20 这样的具体像素值，也可以是像 20% 这样相对于容器高宽的百分比。","85c6fa595e53a5ebe7f9ab81a1ec2b30":"图例区域宽度","339ea8a0d7433e8e6fc246c5dd48f215":"设置图例区域展示宽度（非单个图例宽度），需确保设置的数值大于单个图例的宽度。默认自适应。","8ff491835a056b8350f706f9af55e7cb":"图例区域高度","45a75a7e83484b02fbe1721390142646":"设置图例区域展示高度（非单个图例高度），需确保设置的数值大于单个图例的高度。默认自适应。","2f3737f7b4580f1eca85ab75cccd673e":"图表动画设置","17c08c2ee09a3cd600ea5f149e431ff6":"变更/动画时长","96049c9ffbd59a40a0715dcb18cff429":"数据变更时的动画时长(毫秒)","53727e9fab95ea3921ac7e5b390539f3":"初始/动画时长",bbfcad2f6814f0f529aaef9e88d6fd27:"初始动画的时长(毫秒)","48e855b12edfcdbf83900dd33065d8cb":"动画阈值","500e50f34b470436cbdc6da19a328cbf":"当单个系列显示的图形数量大于这个阈值时会关闭动画。","5716d7c91aaa337ffcc4b91fa538761d":"词云特性配置","8255d49c67da2baa3ab9b6097a34a848":"最小字体",d35453e5765b248ce0944152577b6c53:"用于设置词云字体的最小值，默认 12","3fafd2d2f59b87b5ca6dc86cac81f8c6":"最大字体","5f5fd4a17d63c36e66085bd8bc0bcdad":"用于设置词云字体的最大值，默认 50",a37f7cf4feb128b7aabd783f0b29682d:"最小旋转度",e70f34a04dc73927bad1b84d58230330:"用于设置词云的最小旋转度，默认 -90","713feb6f79a6decd88758f6c2bd682ce":"最大旋转度","5812d64c6b3116659c92c5bdde9af501":"用于设置词云的最大旋转度，默认 90",cbb6f8a75bb07beab827db4393ee50cf:"词云间隙","785075a93c1a8916e4326e12aa987c59":"用于设置词云之间的空隙大小，设置的越小则词云展示的越密集，默认 8","3c840904636ad96262a32941bbff3cdf":"宽高设置","13fe3d83509f0ba6c99c529348cc8479":"宽度","5ea8070c947f7131305b1cfefc5e3ea3":"默认宽度为父容器宽度，值单位默认为 px，也支持百分比等单位 ，如：100%",ef01552f43a6d0303c5191dd3a870406:"高度","56b0145829f58a57e4f100993a879d0a":"默认高度为300px，值单位默认为 px，也支持百分比等单位 ，如：100%",b0ee4cc86e520e763ecaa9726f1c6654:"视图控件属性配置",f2b5a41db89d006d06a781657a829172:"区间最小值","1145c70ff30dcd1aecbcd760338e98cb":"用于设置地图控件的最小展示数值，默认 1","9044c84d2dfb7ed7441c9bc3fad8d9e3":"区间最大值","0d4d13584f9a2449751012879a0932bd":"用于设置地图控件的最大展示数值，默认 800","501a7f2f4b46948b0f25638659804cfa":"区间最小颜色","118c06c5937e7e184b96715a27f04183":"用于设置地图上最小数值的展示颜色",eb3c4e4fe87bc94c693ad46e0d8684db:"区间最大颜色","318b25398ad1cf6f1f9d8f0e19f19d0a":"用于设置地图上最大数值的展示颜色","523c9324b0128f88e7a5f78c4e51567d":"显示地图控件","2434b8240be6976cadfeb587eb52e9eb":"控件展示方向","4c28d648abbd23c33fac24d52e3f7bde":"水平展示","2efde12c90fad802ab8020929613a26d":"垂直展示",ca4d1f6c25cfcd5fb5760228b10b4e38:"控件宽度",e735268b223cb23ea81cb401d8135951:"用于设置地图控件的宽度，默认 10","8cceb5bb5c847f8feeefc3d95e571ace":"控件长度","0f6596f827a65838aae793ecb35cde6e":"用于设置地图控件的长度，默认 60","2277faad1e11c4c54cad4579c9a21d2d":"hover联动","37d4e24610a9fb58b14726b9bb0f1d0e":"开启后，hover地图控件时地图区域会跟随响应。",eb9a211a64ab1daee8f85046b394cd9c:"反转显示",a19a7f84b2f1665ff25778770cdb457b:"可拖拽控件",b2630e6ea1fcef6bcababe5f4d294795:"可用于开启可拖拽控件。",ed92226c8703d4385197929873e154a7:"拖拽联动",c618be330af72ecaf249fef5a1a0d52c:"拖拽控件操作时是否实时渲染地图组件","279544c17541d9cffc36dbb831d960f4":"区间尾部标题",ac90e7a66d0aaff1a8203d709336cadd:"区间头部标题",a1eea93435bf5603ab0305993098601e:"用于设置视图控件的最小展示数值，默认 1",c9696177cbe1635d869205bb1ca47f40:"用于设置视图控件的最大展示数值","9695b92881ecd2f8a9e7e1768376c462":"区间最浅颜色","9a5ab7ef72ac9935ecc0a3a2d1805f40":"用于设置区间最小数值的展示颜色",ee03c8e06427bc6981f8d6b814153be0:"区间最深颜色","4a6711f622ff4eb9488b0835b91a531b":"用于设置区间最大数值的展示颜色",feb8d1a75e3d3de4dab13c10d2b08f85:"显示视图控件",a58c231b52fad60ed6bc5dccd3d86661:"控件展示模式",f5dba50df6bc91f64ecca5e02c3fa5c4:"分段展示","94a0b7492c3aeb4591ff9160a70135cb":"连续展示","18b31a9ce8ae7fb80a244d5fbc6c7e58":"分段个数",ab61f57aed2edc806fddf024927a89a0:"用于设置视图控件切分成几段进行展示，默认分成 5 段展示。","80a4a9ff00a201d29497a7c3090567e4":"用于设置视图控件的宽度，默认 15。","65581093f9aeb1bfd4612c7165abde76":"控件高度","620d8c8e93092afdcce030482e4394e8":"用于设置视图控件的高度，默认 10","570e2e3aeb5d8ef5082fce28f4a7cb15":"用于设置视图控件的长度，默认 60",bc64779cfafef68448ea2ef4d692290d:"开启后，hover视图控件时组件区域会跟随响应。","6436cb285f5f1e430cd1b56c3b5995be":"拖拽控件操作时是否实时渲染报表组件",f65f2d0979b5a3848a58646d34d9a3ea:"地图特性配置",d2b0a81a70aac7092442b2ad5d4f60de:"缩放比例",e9fcb9edd680bf2005af50ef0f6fa6e9:"用于设置地图缩放比例，默认 1（不缩放）。","32cbaeff1cbbaabf46095b368de9bb8e":"开启拖拽","58b442d0ba53b6c704399b7664e8cb0c":"开启后，按住地图可拖拽","3a62679813ba3ccc2b4c021dead63e9e":"区域边界颜色","764e19f996e459f2463da7b3efce9150":"区域边界宽度","5b023d2e3d28f808340907a3c2a2b756":"用于设置地图区域边界线的粗细，默认边界宽度为 1。","5bd7403766cb86a0d4908651b496365e":"区域高亮颜色","723c801fa9d221ba366fa551f9bca1fc":"地图区域颜色","0a5b9b07a754f10c22dba7a63656551d":"气泡特性配置",a8126e3a6aee3884cc23a038b66b712b:"气泡颜色","80ad3b1575529313a6ee9da293821261":"气泡透明度","82295cd5838c21f207f776ed4f75115e":"气泡最小半径","9f57aabb920f489d6029ac6892b85179":"用于设置气泡的最小半径值。",fe7bb7a46348a8f7f871ab7c4b07cbd4:"气泡最大半径","2a1fd47323da951f8306eb35a6aa1859":"用于设置气泡的最大半径值。","0d422aa77c705fe6d5f5ee9f17ba6118":"显示气泡波纹",b42d6dd92a39009d7da62cee67b72ffb:"用于设置何时展示气泡波纹特效。",c24dea31d3eb39b1e206bf5d09a8b15c:"固定展示",fd3394fca21939924eb1f27b2c6a6cdc:"高亮时展示","9aae778c9e053c2218a5d686e13bf4a9":"气泡波纹模式",daf0c0ebdc702bb147735cf9c6b1ff51:"声波模式","89b19fe4de677623f2d90799fd898435":"水波模式","994d8847023036dec9d43e7c29130ae7":"波纹数量","46565f53e91b6cadce6518bfe99e2cf6":"波纹动画时间","12482ff2a679d219b05ad7770a896ecb":"用于设置气泡波纹动画时间，单位为秒。","2070b7c30f0ffa1add257504c3334210":"波纹缩放比例","98b1606ac0635ad803cad0ef565956f6":"用于设置气泡动画中波纹的最大缩放比例。",f273e61dfb428aa64ed5c076ad81916c:"日历特性配置","2cf659bb0023e6f214eccbf0210d9bbb":"日历时间范围",e5c517cd08ee234bd2147caecbf5a70f:"日历展示方向",e229c2da386efe51dd81db2ae81e6d22:"显示日期标签","98c5a1867603c6c4d6a54433b92508d2":"是否在日历旁边显示日期标签。","6aa4e5171c8fec395cdc608fd2d683c9":"日历单元背景色","6eb2dbe793ac91efa07b78c9c9c56492":"用于设置日历单元的默认背景色","644cf90cbfb1943b541fd916163b5473":"日历描边颜色","9f3f73c52c215a598425b942fa900a0d":"用于设置日历单元的描边颜色。","49cf4e7ff8e251d5455fb5f15628efa3":"日历描边粗细","5c464a39627b345a18d541573a644660":"用于设置日历单元的描边粗细。","130fc105422bac4f235c0574a636f91c":"展示分割线",b378aeaebc9af86d9ee0c0081a0c6040:"分割线颜色","641f7a10bd8d7fb0c12375c0e1b05ebc":"分割线粗细",d55cc531d243876249d8640349e2488a:"通用样式","2554a080873b01c708f47a7de9b21229":"定位设置","10cee16f2d7394ae26a2afd1e5f6b24b":"内外边距设置","89987c3a2c1926d847caa17c486020dd":"标题设置","3ace91cc3c709c6f39f2b76cbdf5b9c9":"显示标题",bb88812eadb64c9138bf86da639798f4:"标题文字","8d0abab52be9447e511865b04951fa0b":"标题对齐方式","1c8bdc37de484af25ae32f55d9c587a7":"左",f6f151febf1334c3a437ac6c0d0b65e2:"中","150341b40ec94921e5da48598ee78db7":"右","59a491d7bfd14c8b2baa356c7f6c36e7":"标题背景颜色",a88c0c653fba7d358a60576bbf70809e:"标题链接",d178e174b1006df9b300b234b8de458a:"图表自定义背景和边框","54fbaf6e1280bd9e0a240489fde97032":"图表背景颜色","59db6bb7f5ea431e136a5b205b7f7c7a":"图表圆角","5554ff7f24395c28080e1510efebd101":"图表边框宽度",ce3beffa2bcbb247ba82d5858a0811e4:"图表边框样式","368bd6d16576e8ca8db9be2d0a5296a6":"图表边框颜色",adc1d4db36c16687d811b25ad5d54e78:"图表阴影宽度","84cedc16bea2d90b021064e036e916db":"图表阴影偏移",e83e58c7b7ecceb9ba16e6b0b6d3f48e:"图表阴影颜色","0d2a9bc20946f5086de4e0f6287cad8e":"当前可用字段",ed6baea39d3de9d929b54ad4c85f32a6:"<h3>主表</h3>","6462bfcf5dc9c4f3b6b9c70aa8e5ea9e":"字段名称","62a903f6c898dadc8ee62f9c1d34ebca":"字段类型",b1afb82c384a473603113b9ae106a345:"表名","69635b4fcb027fc286840032af5990ca":"数据类型","071eeb3e55f2ae336f7474fb6c89aad8":"字符串","2d531b4b2814edd26f00adc1b9cfc8b9":"整数",eeb81dca205b89fbb2d327b168a07a73:"小数","1f90bfa372abfbef513a5b8121162814":"日期时间","26c9ecb82ca3a17ec8db98c156ca4ba7":"注意：数据集需要以 数据模型.字段名称 的形式取字段, 如 model_student.id * 10","4e6ded0d51412095ec9785305d513184":"SQL表达式",af7f607a288a8617025a99ce91488a05:"可对多个字段进行加减乘除、以及一些 SQL 函数计算（如：CONCAT、DATEDIFF、ADDDATE 等）等操作后形成一个新的计算字段。","87e847c1c1f184cbeec6d8082ca2487f":"选择表达式","5f95a033e94f9cf547d8229d1b20d7f9":"基于字段排序",c369ea262433a097b7a6dcf1359628ee:"升序","5cf098240452cbe14e221764301481a1":"降序","630c5a3d106bfa5a14041e4612c829bd":"选择字段",aef04941dcc47f1cb958bd11f63c94ad:"选择维度字段",eb4879011932695766e234f9f45982f3:"维度值分组",ea64a05aec90feef781ee3c11de7cebf:"自定义分组名称","23501adf4441eaadb3479253176da504":"其他","1fcda4634111b04ab2400e59b3912502":"「其他」配置项的变更只是当前分组选项中的数据更新，如需更新到报表组件，请重新选择当前分组。",a7535bc3e39c2b6537196a256a266442:"选择分组",bc065edb81e38471e3b8e5898af4061d:"排序","3d6b49086cf80d4bcff6067617c39b12":"数据桶",ae6fc63341bb59e9b877c11e0a47703e:"自定义数据桶名称","6238c4deec20253f5bbc031979b94a73":"数据桶条件",da6438d912aa635346eaf4526f5ec396:"「其他」配置项的变更只是数当前据桶选项中的数据更新，如需更新到报表组件，请重新选择当前数据桶。","9b14f02ab6bb8232425d820e59683a98":"选择数据桶","4d166daa49b22100c7646dc6829f3646":"[表达式]{{@1}}","35e8065165e032e7381c8b44439a8c96":"[数据桶]{{@1}}","1e39dc80aadf5852fdd9899d4736a82c":"[分组]{{@1}}",b3bd6500d91d6d8457ee6fcf142392b4:"事件","9e00dfde194dfe98bd3f8d8ea55ed60c":"年","0990d2d0e8591bbaf4f516c902429c8b":"年-季度",c3a322c57fb9c75f6a2f0859555b6085:"年-月","1eaf12e70629af44011065267fa6423d":"年-周（跨年）","47b24ed164d67d5b432d1a6f99d105ab":"年-月-日","51d6eb36a76d4a2c4f25e03567d3ad7d":"季度","86b50eb0b3c7bee00ef3d0e3fa681ad5":"月","05554cb359239155eb451258369133b2":"周","056be004e82f2b07fcd509d423d643f7":"星期","8a2a9e26f7c2b2efe806195bd2f220e2":"日","364e4fa9e393372fe559793a85a3e8a4":"精度控制","5d70dce4350f4f395c2a569398bd3a6a":"金额分转元","5df77fa1706c014c52d8d1ed5eaea108":"增加千位分隔符号",b912ddb69156967f522318071fc663ce:"纯数字无千位分隔符号","3e1d420f2ecd0bd33cf79fcef7e4f818":"末尾添加百分号（*%）",e62ced9f792170f2b4f0ece7305217f7:"百分比（*%）","795b2e60f029f22935fdfdf0ede7ea51":"数字转万/亿","4f4358baac34866f111677228f08ec4c":"秒转时分秒",d923dacb28fb060e65c13ce6b7584fb8:"秒转天时分秒","4a92c45a17486a363649c3e5f934becf":"字节转MB / GB",db129a9306d2f3d7acdee601ea18b8b5:"字节转Mbps (带宽)","0b2a9e253ee991e976d9c70bf037386e":"数值格式化","49608a5f78bca6a250944735f19f3198":"保留小数位数",a6c47db1cc2f9af71f8b331f88d91d4e:"可设置0-100之间的精度",a6f308b53cb4dca1afdbb1e44c3018bc:"小数点后0",c9548263126a69917fe4e621191f4958:"开启后，不展示小数点右侧最后面的0","28e1c29ef8d7984f9ed65f743ffc6a30":"实体数据源","8efbc65020f3c868985e6b62a7510ac9":"数据集","3f065ab2724ee1dd26bcfc2e260667d0":"未知类型","2343149a6d9689aaf596b31a0be9f389":"数字","0cb12cf31a1fbd628118da615ed19426":"布尔值","431f5c3f1ba5fac864f3320721483ee5":"文本",b714b5303b67dcb601a0664654a69bbc:"数组","36a1327a76a9e130426a971ad031dd4f":"对象",ea5d8a306af77ae1e2806afc8034317a:"筛选条件",fdc38280653107fdf3baf154204ae076:"聚合筛选条件","9c4bd372bb2fe735d6db13eca5c5dbd3":"API拉取","88bdaeb8bc046a656ea6e700fd1bf2c1":"静态JSON","9a6590b3702421593f2dfe87da46fa01":"上下文","4958567c8c4098b45061179942bf0027":"数据获取方式","94f14e9a1df1cfb400ba7408327b86a6":"数据接口","852f4deb79e793a3761e9e72090c75b3":"可通过接口获取图表所需业务数据",e0cd7479c8317042ebf302dd34815d28:"静态JSON数据",c71ef0cee2fe9c93b8d173c1d2e07144:"模型字段",f1d4c31b76848df5839bf2c37f43f07a:"表达式","18b44d53f0f6bb757631428dcb8d03aa":"分组","270c97bce44c986ce9e488dc29a61ca5":"选择维度",fb9a6a1a7c10208a4c5524c53c06d872:"设置 {{@1}}","797cfa55439fadc83fa2f274b6afea77":"维度字段","3a3dec166c8191a15173326919a45886":"选择实体字段","9758f5af669c3537dde822e75abda6ce":"选择数据集字段","28214c4af54f87c60b9185f0f5483624":"日期数据聚合","7f19ad096dac966e41f8d53503d74576":"API字段","70a9dc637a3e88f80856be22a78a325c":"上下文字段",e745aa67d7094f2d3d646a6a2366897a:"JSON字段","006f49dbb0415346f0fa037fbb34e849":"非必填，可用于备注字段名称。","1cf92f82bc6b04c564185309e9b5bd15":"非必填，可用于备注字段名称","18e47a04abab37769de4eedd27b29b98":"基于日期排序",ff6b0f6d1954ff11451d30b24f5c50b2:"分组字段",df7c927d6064e471c51100e484c1bce5:'当设置一个Y轴/值轴时，可使用分组字段对图表数据进行分组展示，用于实现"行转列"对比功能。',"63eebc7c9e98d89ed46d50b873c84a99":"[非必填]请选择分组字段",c2b0f098cddaca767a1acf2b760a80f3:"请选择气泡值字段","0156b32c7e08352fef427012b6d5b339":"选择值轴","9e4fe078ee048f9b2bb18b012c654011":"值轴字段",a20d8471d7ab73fc3d382bac9b656853:"折线","5e406e9e1476c01e6d55e68227b763d3":"柱状","3a5c6b786171b9f7222a45705acd975b":"非必填，配置后图表中优先展示此字段名称。","8d7b3e2623f03a395da1ade18f9ddcf3":"聚合方式","66cb0d540477fa3fabff254dcb8706a4":"查询结果行数",dc16d84c52d70845f86a3f56f06cee4d:"获取不到当前地图（{{@1}}）的数据。",d06367c918b2a40dea09472e93ea00fb:"总量数据","46ff01b5358af468be034e2a54ea4020":"占位数据"},!1),(0,C.tD)("en-US",{e202de9cb654d2162ed84f9ab481244f:"city",feed804b208ead0de629d7ac6e4375d9:"county","59b2a8f7733684739b8688a231b29203":"area","83e490932b188269097a82939b2eb8ae":"SUM","08b7b284821ae7703576a77e86a9fd6e":"AVG",e8fa0672c78c68dc80092aff95f76789:"MAX","18ce3b4b6fc41fb41b685268d0df2522":"MIN","029eebde778ad99fe2c78054c053c2e6":"COUNT",ca05a45a085a260019f74bd8969fb3aa:"COUNT_DISTINCT","4b3fdb6ff92620ca22b1c8ea43101cd0":"[{{@1}}] Interface request exception:","0a08b9b29c307012259c9fe9f70ca444":"{{@100}} million",e997cd2ecad440e3edb113af8bda4348:"{{@10000}} yuan","010fe4515099dea840bffb131bfbe534":"{{@1}} hour {{@2}} minutes {{@3}} seconds",eacd5475fbf5594d6ba5262cdbfef15f:"{{@1}} day {{@2}} hours {{@3}} minutes {{@4}} seconds","7afba2fe376032e54721f9f99872c13c":"Bubble value","440ed0c358400343a51c2c2016589b80":"Tip: Setting transparency greater than 1 will cause the gradient of the chart to fail (please ignore intentional settings).","088f7c37c0107c3568a257ba5589f41b":"default",bf1a9ddb379756fa421abce7ec490791:"high",d95ebc056c47f63d9d8c7bb897d9b17a:"low",a0e64bf32fbf0befbf3dde951491eb8a:"Report {{@1}} currently does not allow variable assignment override.","2464e2ee44653ebf8645dc56441fb936":"Current JSON QL string parsing error: {{@1}}","91858878042b3fa89cfc968ce2671d08":"Bubble chart",c2f9437656c3d0c2929a83b071acdd5f:"Bubble chart report component, which can be used to display the distribution of data",e3ad981601e2b33add15a6bc879e3fbe:"X/Y axis flipping","7313821427754f2e54457b03120afdb4":"Activate gradient color",c32abfb437f183cb2fbdb8b30e33b70e:"attribute","4ca72347ca795f4b3f1629ba46b29eef":"Data settings","8872f9c74202237811666dda6a2101bb":"Retrieve API interface data",a763278ab599e58635c366d397298829:"X-axis/Value Axis 1","6c06cea48883a45eecdf736ee0199072":"Y-axis/Value Axis 2",cf9d5f5b0a5b09619dc6fa96eeff1edf:"Bubble/Value Axis 3","9d0f75c1e8cdaab9f0891dde77e708b6":"The numerical value used to set the bubble size, the larger the value, the larger the bubble. If not set (value axis 3), the bubble size defaults to 10.","5b4fe767998f32659d2c146148be4c70":"state","90955854a9a6d4d692200af9c94ca7e8":"appearance","1b6ad312fe99fba6096a9d7b78aac788":"Bubble chart feature configuration","445930b1acc6acbbccdf760cf0b4d176":"Bubble size scaling","3f2605b69947e5a66147b252e42c0e05":"Used to set the bubble size to scale proportionally. Setting it to 3 will enlarge the display by 3 times, and setting it to 0.5 will be equivalent to reducing the display by 2 times.","2e3f089b567d7e4b000e00aebef74191":"Display bubble shadow",b2e0ebc34e2fb68bb36218a4c34d1c45:"Shadow Blur Size","4ad94bf03454c3206d8ce99033467c2d":"Set bubble shadow blur size","3f41800d62f3f93938620c95ef4226d2":"Bubble shadow color","6719306ebc295ac8e7d3041c28a3ef68":"Horizontal offset","8e176b9f2dc7c6b90023b6c8032f8286":"Horizontal offset distance of bubble shadow",d5ce403d6b024973aea8600c4365b31c:"Vertical offset","88dff14a3a470b956510dcd0e3e0e896":"Vertical offset distance of bubble shadow",f0c94d3c0b9d6f6efe60aa8ebae9368c:"Calendar chart","0a0b202d1e75fd3ed96c21a47b8cfd2e":'Calendar chart component, used to display the effect diagram of the relationship between "date" and "data". For example, displaying the user\'s submitted data during a certain period of time (similar to a Github personal open source contribution chart).',"01b0d02c2f605a4ff265a1fd62217318":"X-axis/Date",d56bfd2e08a94fb8e60bc666a833ee3b:"Y-axis/Value Axis","8ae0f01b1f46cd12dfb0b3f58b63d798":"Horizontal Bar Chart Report Component","9b5e78b0007ee291e41f8ac9da02436d":"Horizontal bar chart",d18765f80aae588772214ba58d940a56:"Bar chart","7bae58ff3c827bc4fcfbf024019fb7a9":"Bar chart report component",a9ccb808b3904b10a91cd58bfbbe1f66:"Bar chart type switching","160fe22671b38233c07ad6ca3bb66a81":"Bidirectional comparison bar chart",cf418201b8833d35d558575715ab9242:"Stacked Bar Chart",bce2642c91f1f8971ebcc18cd099ce5c:"Bar chart type","8e30251bead82ee66353a8f367fe1e12":"Chart type",b9dfabfddd24e47190f288ceef57a61b:"X-axis/Dimension","95535338338a9a1918412285bc8fc7cb":"Bar chart feature configuration",ececc9f00ed3cc804541ad8243c530fc:"Stacked Bar Chart Report Component","8b9baeecb29ea263118df08eb796762f":"stacked column chart ",d513d1399b8d5d936c2cd94760a1ae0a:"Bi directional comparison bar chart report component","14b4c4ab63827542ad0cfa937ddf02f9":"Bidirectional comparison bar chart",f91bf74fad3ca31acb331d658f1f3dc3:"Funnel plot",b3b58e19411c0e60a643f820009b068f:"Funnel chart report component, which can be used to display data conversion status","45df96ff523ee085caeb187caf7de610":"Comparison method",b51c5abbef58b2fbc3d9deee1d7c12db:"Comparison of same value axis",a95b10f76ed4caaea11a665487e1efc4:"Comparison of different value axes",e44a638ab9bfe7e8ba0339209deca83d:"Sector name/dimension","3b33bcc4349937f20400843813d846bf":"Sector size/value axis","2f96a8f3dcf830398ed610cf22d41a41":"Funnel plot feature configuration",bf933bf2ca7091c3952f1f1e99d111fd:"Funnel chart orientation","23f516e0894efe170173b8adeb17f9d3":"portrait","5347ccc0e616498ffeca553112fea235":"transverse","7e036589700a0cb5fa3ee19bc0749508":"Dashboard",c9927d1a0adb658de32a1d0bcca3dc6f:"Dashboard report component","07232c825725c35377b350c6ac6d2c70":"Line chart",e235a6d95c59a85409eced6cbc46781a:"Line Chart Report Component","441d3403c9fca8764aeea8b39b041af1":"Line chart type switching","92cd841000dea52557e6afff136a4c7a":"stacking area ","2ada1d86c52a1d2e8d33847f699b21d1":"Line chart type","08b6e168a72f71264746512acc1d1a89":"X-axis Flip",d7bccb57684f78a3e8363b029382f813:"Enable column mixing and matching","7cd63400c23c439b8b33d9004beb392e":"Enable dual Y-axis",bf9052d9eb86424a7f4503b4064e8c27:"Second Y-axis/Value Axis","5b9b0e3cec43ce6c5e5d02822d987567":"Line chart feature configuration","2fc6394c937d163d0456e9c76d0a9f52":"Line type","6efc389cd74943a9fad97175e5986716":"Default Line","69aae1abf3dbbe152b9cfbb044f48fc4":"Smooth lines ",cb1dba9bd8a96221f2ca0b1b56efdfdd:"Staircase lines",c0bd946068ee8fd9b68f484a4f9d6454:"Step turning point",d773d698e44f27164ab6266d2f0e8fa0:"Turn at the current point","3d12cfa417a3ec2681958eea7365655d":"Turn between two points","9681a46d2e2be7db51d42e2e13c2be82":"Turn at the next point","50e284dcadff881fc48870db5bc28ba8":"Line style configuration",e6406a3b437ff10b5523f6b6d68dd0bc:"Line thickness","00039e527cc9e58d7ff408a731d7d849":"data point","5dbf67efbc108b0060d126fc485626c4":"Hollow Circle",b542249e3a5c3547a3ed35f00163dcf3:"Line shadow color",fd5da329ceca059445a47f75f7cc2784:"Shadow horizontal offset",ca821ac7a5eaad21a5a8896367f4d8ee:"Horizontal offset distance of line shadow","17f984c6c16ad2edc3137036e3b47a90":"Shadow vertical offset","00d1d2e3601e31e96ec6c2b9154b189c":"Vertical offset distance of line shadow",a7a74832564b718f9bca1f18114358a8:"Line transparency","4d05bad958878216b77e24a6259aa67f":"Line transparency, supports numbers from 0 to 1, for example, can be set to 0.65. If set to 0, no lines will be drawn.","64ac05f1a7030a5499ab0b649df11e1b":"Stacked Area Chart Report Component","175b384a2a93aa0532cbc28a61b28a92":"Map","7d87d952a96262f26fded63e8d72727c":"Map component (color map), used to display area related data, where the depth of area colors represents the size of corresponding area related data","274daa13cba92ba5b829c10a23c87f4a":"Map type switching","12ad0173b9b3fd3d201fa3be4ac18715":"Map type","0c3b8bb2e883eb91a11b78ccf266ea31":"map of China","9a7e511e82051672b371d06bdb59beef":"World map",ad0d75c309a62df918a81ef3e265a1ca:"Provincial and municipal maps","6d72ab2b6682ff74f484d50a2fd26d88":"X-axis/Region",c777350dcf2253d686b785301d93d87a:"Used to bind region name fields, such as the region name field for numerical values such as Beijing and Shanghai.","56d6f4283c5eccc7f5f4c19e174a587a":"Circular progress chart",a71e77b18151ac5a483fc8800f3f615b:"Circular Progress Chart Component","8875effe1dcb4719a9af89f1493482bc":"Display Title",a11671403f55cd12e6990a44f0cad46d:"Support template syntax: hello, \\ ${xxx}",d98c7c02de481f370eabffa38b8cdc14:"Value Field","4b00d2fd62704b6fc894b14fd25639fb":"Progress chart/dashboard feature configuration",c81d4c5ef6ffc1b6fe2aaa386f3e19da:"Display data title",dd69cb5cd8f4684b52d0d6f7424ba86d:"Text font style","1c8cca86513bdef34adbfb6a006bdea5":"Display data details",e68b932b2090d531f1e8e877f41604ce:"Display progress bar",d040fcb0d5bf788e0055abe78a3fa3fe:"Progress bar thickness",b3b6adc6334373c34c4be01db9ddcd31:"Starting angle",db3e81d65541a7d18d3057811fee7fd9:"End angle","4265d77c97a886e83c89259993efedce":"Progress bar color",aade24853feb2e453d6284e4f4a9af8e:"Display Background Bar","75d260efde4b446760e9cbdbaaa0aee8":"Background bar color",aaeecc29a4096972ab9ce0a85d87b826:"Display Separation Lines",f9e9cb4895dabdb6443294436d1aa8d2:"Separation line length",b7901de2d97396159e63436bf3230c26:"Distance from axis","890ad460b8af1f251110547358c1271a":"Can set the spacing between the dividing line and the axis line",c843224b4b07fe6a76aaeca37dd7c18b:"Separation line color","2c7069b739771d232965f3e965cc3269":"Thickness of dividing line",bfb401467d48eaa092e16ad5a14f70b9:"Display scale lines",caaefdca745778937e2e9339897b47ff:"Splitting degree","4f5df9dc1061ae9c796d113b6a30d1af":"Scale line length","486b1ef9b822b6961d8d81f39f7877e6":"The distance between the scale line and the axis line","24244f2d6bf8aaa1d54b80f4112e7413":"Scale line color",c1d309aee7ff8b280243edb937be1d5d:"Scale line thickness","897cdf52a3a0fe0cf260f746de56fce2":"Display scale labels",efa729a4c33049f6ca6cd60f54183f6d:"Distance from the scale line","99ee02d906271cb444990b52577d73db":"Distance between label and scale line","60305f01d6d68d3e41082fb08d472666":"Rotation angle","090711d84015b32d5b3ba547419e7db1":"Label font style","4c5a283be9a588f4715868a8f83241ac":"Display pointer","0bab97dbd9183ada9df58439cd707182":"Pointer color","177ca54c92bd3b015e268361782ab853":"Pie chart","6ca30e94995ffe96c6eb3ee7fce3f441":"Pie chart report component","82428a952e14642f3259c1fb39a09cc6":"Pie chart type switching",dd1e86744ed604daf0e87a1fabb7e071:"Pie chart","9c00e88da7f93c9912117feab4323321":"Florence Nightingale Rose Chart",e40412fb56fb00cbca792b1208e988f7:"Circular diagram",ad99c1415b2054ac9959945a942fe2ea:"Pie chart type",a1c05baab3fe35efdde8e41cfe43c304:"Data display mode",d83f6824d9daafbd14cbb8a87334bda2:"Percentage display of central angle","342685a08d28022dea268f7d678bcb47":"Same central angle","6f9a06f7346c68843d0dc6c273c2c2da":"Pie chart feature configuration",de2a9636987dd16c65cbd22ca18598ea:"Rounded border","1cfd17b62d1d54836ba8f65a53d88f57":"Circular report component",e833d1d6e8d53c8fe84c8a2a00a02210:"Nightingale Rose Chart Report Component","6631e3430df851b1c08136ddb6916e0a":"Provincial and municipal map component, which can be used to display relevant data of designated provincial and municipal areas","045515308852d562d71fc55e3163007b":"Radar chart","7194e3ac2903eb8ab9cd5287ae194647":"Radar chart report component","510010551560164616258cf4720e70d6":"report form",a831e3beb47fadfa7e7df6ea1f7f731f:"Outer circle/dimension","9b4e1b4e0436704e6002ee49cd0e24f5":"Indicator/Value Axis",db1d81c15acef2cd9ff0903aaeda9b8e:"Radar image characteristic configuration",be00b1a08b827dfc0a4eedf253836842:"Display axis","41e96bee1d9a96c246408ae904e58a33":"Axis color",a2c2faa7b19b241cbb49876729ae699f:"Axis thickness",d99bc7b82627324649bdefd99e1e0fe2:"Display Fill","44957cd766b589c456cf6984c1d9b399":"Fill Shadow Color",af33776de33a391c3fe93ec851e79bce:"Horizontal offset distance for filling shadows",ad283fabaaa5cb23294e8fd153172289:"Fill the shadow with a vertical offset distance",cc10ef396140d6ebb938ce109d146971:"Fill transparency","94b7344d697415a5213f7e9a7a8cf8ce":"Fill transparency, supports numbers from 0 to 1, defaults to 0.7, and does not display fill when set to 0.",d20e5641cdce74366a3d5edb4018ee8c:"Bubble map",efb8ad26e5cb66909f920cb88feb68ef:"Bubble map component, used to display area related data, where bubble size represents the size of the current area related data","680234f7bc7c0f404054de370b75f703":"Scatter plot","957264a06352aa7e3b00ee5ea52653f1":"Scatter chart report component, which can be used to display the distribution of data","5c1bd4761ea31d971bdce6f065a628b3":"Scatter plot feature configuration","9bd7e017b57e98a0f000a388108f7de7":"Mark size","01ea51a8f94adbbcaede77494ad2450e":"Marking graphics","0411a03265fdecc7c9fd122185570bb9":"rotundity","15b38d4bbad9c113952120f5e54e4711":"square","731b08ad9e678f02eb6e3caaccfda071":"rounded square ","938672262e8e566b6fcd66f505de1858":"triangle","7c8e0638911a88207223e16b84c1743e":"diamond","4809961c1c95ed3226fa8fea589c85d5":"Pin Pin",f4a98c66f02bf297cc9e27edeed54f0d:"arrow","862c84b08dd38e25eab1684002739195":"Staircase Waterfall Diagram","206f8d9759b715c181295f32b4beb814":"The waterfall chart uses a combination of absolute and relative values to visually reflect the changes in data during different periods or under the influence of different factors","171ab12f4623e9164fcfad086fa1fc4e":"Step waterfall diagram feature configuration","7cdc86d9f4db11ec9d3f87492035eb2c":"Positive Column Color",d4eba82e5160800639e0583ae3d92109:"Negative Column Color",a49994939b5bd3b48c03ce446245e868:"Display total data","6c68fb0e6ec471b1de348d66656f6237":"Word Cloud","4df34994e35fdce114dfcef9b0057a12":"Word Cloud Report Component, used to display current hot keywords and other related information","901445112c8487bba95a0cb27496ed23":"Change of Word Cloud Shape","50c8d38fe76340808922133f05ef7a3e":"pentagon",e662ad79599d2f1788b42d88afb58c96:"star",cf90dad23a269bc9cac20cc3776acd6a:"Diamonds","210cf0dbe2ed70b8b205e2c722c4db11":"Word cloud shape","3830c3410d6e750cbb029b8bd1ab2233":"Word cloud type","8bc77db9bd8703a8ca4f26be2b902ff4":"Dimension (Name)",a57822079640d561044af32708415564:"Value axis","1a06479a9efea2b3941022ee804077bd":"World map component, used to display data related to international regions","723cb669d48c0fc7142cabb365ab856d":"Numerical indicators",f3ad92287b88e974ee2e0a881b0b1db5:"Used to display numerical indicators in reports",a48579016e5d60d34e279dcbf5636412:"Numerical Style Settings","67e842aae1a20bd83918a8172e63f664":"Numerical Title Style Settings","7dcffc681ba4341612977cf48e7c6754":"Arrangement configuration","12353707d7fffca47e763fb57a004214":"Arrangement method",bd60a437951ac28cb135f83d5baf6e4a:"Used to set the arrangement of numerical values and titles",e5302dc27d168695cf6ecebd5dae48bd:"Above and Below","13fb83e9ed5a5ab6dffa2430c0042727":"Above and below:",db3806112b93979efb888be7c90e7c17:"Left image, right text","24adf029cc2e66ff94839fffc9d2471a":"Left text, right image","621dabc1d28f5b3fb6958ec43a9f9a97":"Chart data",f14da419c7b87f5fed2ce3b4ce61e721:"The component name to which the currently clicked graphic element belongs, with values such as series, markLine, markPoint, timeLine, etc",cd42984b7878d5c32e6e72c3510ffe68:"Series type. The values may be: line, bar, pie, etc. It makes sense when componentType is series.","2a78b75c7131f0944cf2537235d408b4":"The index of the series in the input option.series. It makes sense when componentType is series.","7e732f457c8655e0909c05a598564401":"Series name. It makes sense when componentType is series.","2c5990637b2ddedf968afd1e77f6bcad":"Data name, category name","07baaec1faea9ecfa2569f448e3b28eb":"The index of the data in the incoming data array","25fd03f60b8cffaae92cebf60e78b4a9":"Incoming raw data items",ea7e44cd2afd9f35ba1dc62faf1f91e0:"Sankey, graph and other charts contain both nodeData and edgeData. The value of dataType will be node or edge, indicating whether the current click is on node or edge. In most other charts, there is only one type of data, and dataType is meaningless.",f353676a7a6d33441ee4c854a124b0dd:"Current chart data values","52623bfd6974336648ad0b831c0bc2aa":"The color of the current data graph. It makes sense when componentType is series.","49dc1cad8d77e970e0052b44b6892329":"initialization","3d6543aa1286514fd374ccf816ec6ec6":"Triggered when component instance is created and inserted into DOM","86a675e21d525bd29ac08973875268fa":"data","2cb14edcea2bf21e62901e5249a4b24f":"The current data field can read the corresponding value through the. field name","0d1a2a9da963b185ec9a9733a6f71f92":"Mouse click","36af746dc3b48363715d9fb479445044":"Triggered upon mouse click","2fd570b707fb49442c5f479d57748336":"Mouse hover","645ba9f02abb0e6b107d18db4318d4a6":"Triggered when hovering the mouse","7a48263bde8ae8e0c9424873a85d4b21":"Switch legend selection status",c4b4782f3cd786d45f7c50f49d42afb8:"Triggered when switching legend selection status","17184342e552aa3de6758a035ca66607":"Switching legend name",acd9886ed6b907d6cd0c0e9acfc95564:"Selected status table for all legends",ad30c48d6cf3f8944a2cc83aa1ab7eb3:"Reload",bf55e2f447bc6fc33ddb66120cad5033:"Trigger component data refresh and re render","1b32d4ab583e41f03419084ed30d7296":"Variable assignment",f0da0c9ee2ebe5485fe7fa292796ecce:"Change the data field of the report component to trigger data refresh",ea46a0f4040b90545322d1407e9af771:"Report data domain",ab84f18a48d760c7a4feaffa2a7b10eb:"Data Fields",e1fd7ea89268c1d2f14610c335f0ddaa:"Field values",f7cd681943d791b83761a064f20873d1:"Custom attribute change",a9141decf95af2d178d492d6ab0556a5:"Directly change the values of report attribute fields and re render the report","826c4a6a0ddf7e0c65e87ca2afe8cd22":"Report Properties","78e1ad0353e9f69cd50922e8539911ce":"Report attribute fields","47664be102901b1a648ec35f13e7b6ad":"New attribute values","37e20008fe01687ba553d65f0944e49c":"Legend data","4edd4a2bb84280cd6d7896270027a10e":"Legend indicators","8dfa308fc6faa05684977724ce68138c":"Legend 1","65196c2f45dee91d1b9f004d91c8b456":"Legend 2",c1bc0d14ed87b3c6a5e0ac1751757fe2:"Red rice","021a2d89186467a50d8e267719f5098f":"millet","22a9d49b1614338b52e828ec7c5eaa33":"Meitu",da5ce6ab1df651296eb5261708f28b50:"Meizu",b362d5cf654bf0cb3a29701fdcd18c16:"Red finger red","60110a003d05374563d9d8f77dd17187":"Jinli","2062d9b4246ddb121024c815f25e6ce2":"NOKIA","9bf9f9255d02c5d9423b0bf4f95b7bf5":"hammer",bc4f8cfa37bf5dacbebe839952c747ee:"dji ",a15d510eb1661374b0a04e2bb5bd8408:"Motorola","0e5bb0484446fd0a6f30fd8aa22748ae":"association",f07781ecaf6a0dc84f6aa1a4669ca2c8:"Player Country","1f1950b6e464fa418938823594d483b1":"Huawei","5d06e37e0f8767bf4d662ba234809d18":"Order conversion rate","054613cc5ec5f451a0e3a34dcd5463db":"Number of male users",fb7e4bf4613c691c8a32ae986cde648e:"Number of female users","78d031495d189476ca89a113d269d93f":"Traffic volume","50a72dc788b73886a762ea3304ef279b":"Number of visitors","6f308cab9ebfa33c6ea7ab35533c85a1":"Order quantity",b967fc421d6f906269194950ef73aeb9:"growth rate","1416b87bca7329d6e3f82ea9a0f0b6e7":"attack","6d63787ca94b2f0dd3ecfdffaba4878d":"Physical fitness",bfacd2283df121946fe1cef15eeae567:"skill","17d825c0140e93bfe6e6f305bb66c27a":"speed",b1bea545be7ae74898dd453cefacf212:"Historical achievements",bf4820465af6ddb0b44a9fb4b22610d2:"defense","803a267f7d55f8ce940452453f52eb15":"index","0f3f4fdba6ad87c30d8850e6d7fe8e95":"Cristiano Ronaldo","078fc6eed4728d2757292600a0513e17":"Cristiano Ronaldo","93fd2a257173e980576b2d6ec2733e97":"Messi",f802893952e623f97d58ee6d4bc4d884:"Messi, AVG",e723105bd267b544b7b78362e48b9480:"Beijing",c7622d493ecc2b8d0988e272bd103a88:"Tianjin","5b995f9fd8af1b13cea3eb34a60063fa":"Shanghai","2cbe8c268fc79cc0e849ed60a30bb3d4":"Chongqing","4fc96d5d62e6b2ae0a3d9cec4956fd8d":"Hebei Province","6be9789e3a39363014f775d5ec7c1a1b":"Henan",a7fab7289aa1c4a382f72c481a941f6b:"Yunnan","2ca764d10db59291d0d806b869b1162f":"Liaoning",e7a51bec0811f3a70208be1afeeffde4:"Heilongjiang Province",c7d95bf60f5e5a1f0e82c11e81336c06:"Hunan","2d6f3eab36efd19c7d605114f3c0efdd":"Anhui Province","690e1e3958192bd839a152ad03f15517":"Shandong","676f525e95f6d545fd2e4a411fe45501":"Xinjiang",e8c2c177261f3633a6d063a7a52c1a2b:"Jiangsu",e53a72ba4593e13bdf748c211ded03e5:"Zhejiang",ebb1e9d695bad2ec1cac56df9a635176:"Jiangxi","2da8a7e0527c238df60113c5d6cd0980":"Hubei Province","6124fcd0758719aa1ee4152638dd0b28":"Guangxi",d9360c5d84f37674988a22e99f2b86f3:"Gansu Province","79addaf165f734d3b63eb85d0ab1c37b":"Shanxi","57f4e1947ce0c829511dd47f89d6e93f":"Inner Mongolia","62e0ffbb5ff3f77c284c7975b69af37f":"Shaanxi","2316bf19c2276d75ffdb7b4c037f1c67":"Jilin","6373278592fb42900f6fb0409c685432":"Fujian","7f76399585488bc5fe32455abccfad24":"Guizhou",f01ea4756d42440b211a4a112a11f4d9:"Guangdong","710c7ba1b089532af20755aca251dfd9":"Qinghai","818c183fdec5c5c43811d56045ea489a":"Xizang","6732a330c1983691de5b887f73624a02":"Sichuan","8aace5f7036db993e4049d252d539543":"Ningxia",f9aed7d3b0442d9e174be9f102fe7980:"Hainan","84bc107587e5db68fdc77f81c48a9ba0":"Taiwan",d92c57ae1cc748009a63d7d4b372d8f8:"Hong Kong",a609d46fed7e51f2b8575206845dcab1:"Macao","9960b49249353361ea1fe8d2c0a9154a":"China",d262e07193373c39d122885230f154a3:"U.S.A","49fdff81ee63b322b1855f8b2625f7b9":"Russia","603d002725987ceaf398ac29e516c4d2":"India","617ccfd1c0ee66effc5c50e2ea1f2537":"britain","151d015961a4c5d5d9bd108333c7e5ab":"France","1b5ba1468deaf7a5704be635806f7de4":"Australia","4f05ce5ae977b59ebc90d76467ca55e5":"Canada",a546bb836578e4ff74bfd9f043af4b94:"Japan","99a71e9c075e06d03d2c87dc0a4df0e6":"the republic of korea","51a75b2c9cd507bf9370b5f65a449c06":"North Korea",c4f1eedd5d49ac068b20cf8a9da0a5aa:"Egypt",c0f06d6a8b7ef79367055cc12e3ae1ed:"Sweden",ccb248687779061424f911aa2ed360f1:"South Africa","44d145e7a34617903c6870b3b3b90dc8":"Indonesia",bf2e6fb8429fe55d66a188224ed6e3e4:"Vietnam",e30e9ec24f6fa8a8037e2a2a3ea73fca:"poland","31951935dcdf2921b139d813661e92d6":"Ukraine","6ad4a8a512cbaafc58b7b8c0c6992950":"Belarus","791c072e8221c5c49947ddd0a69023bd":"Iran","336b44e635e4a16800c75a08e69347bb":"Haidian District","27edfb48c66b3d55f139966cb12a6c55":"Chaoyang District","3c24ccb9b81af44df5984b59f1da90da":"Xicheng District",fbc334b4d4c0af4fed16888273e41c4e:"Dongcheng District",e679b86aa81c7d1ea482efc684e1daa3:"Fengtai District","8090f705cd13c343ae2e74a20cf0faf9":"Shijingshan District","50e55259b30b7e294de034b81c3640cd":"Mentougou District",f831bab9d762d303a27232c8f2b78a8f:"Fangshan District","1dc8a3a28cc0315b6fe390240cece37a":"Tongzhou District","6af8ad8896f30bbf032b7e48ba2e90cd":"Shunyi District","9bf92ddd54a558aadf385accdd8962f3":"Changping District",dbbd8f7505fc2db1c2866a08249c45e3:"Daxing District","7b11dfa6c8f63adffa7565191146bc2a":"Huairou District","288b4937ea7fe662443baf7112e8037f":"sales volume","16d37c1a062855f19398c87f9647f115":"region","6df6fe4c42a387833507668e4027c979":"Daily addition of new members",cf22a432058fc87d913a88f6942e694d:"date","0a59b01d39f369435dbe9167aab196ad":"Height and weight distribution data","3d38eb14420694cb443a87807c1dddc1":"Xiao Ming",b00333af44ff20f19080590d49b21a0e:"primary school","459132ffd0ffcd40d61a7a415663fad7":"Xiaoliang","5a4e7c2b2963834c120bd19b79b9a7fd":"Xiaohong","4196d5ab584f4f2c035a3213fc6d4228":"Xiaohua","8d1c0caf38bbdfe0d142f8b429f41f4a":"Xiao Zhang","08cbd6336f17cc09fe782ae2a95be30a":"Xiao Liu","4e738f61bb310ee9a5948aa2be95a88a":"Xiao Wang","42dc631a620e45f612579090a258c09b":"petty thief","7ab58fbb020728835360b8b15fa4c15b":"Xiao Chen","97415f876da711c624fed75e78e2c816":"pocket knife","5681c2354433bafcebaeae8062373724":"Zhao Ming","255a0d77dd0ab2c5371a32d567463771":"junior high school","9da84c38d4d24eface77e1806a832bcf":"Zhang Liang",f764e21807462dba1b743a0301dab8b5:"Chen Hong",c63ddf40bbc94a8c289f1c2992e1f896:"Hua Tuo",fa767075aad98d33b77fe243aabdf3af:"Zhang Fei",a00d6fc25151a9430aac983692406b09:"Liu Bang",d40ed2c3347abcecf054c733bf78e52e:"Wang Fei",ff5bd0e05b4fa534411bdee4a9d7515f:"Aicken ","715ccf91f7f9393d6603446da97c6fad":"Agarwood",ccf245551cf569b9e83e9065f19217bf:"Knife Brother","1925d0cd32171be07327c10df86d70b1":"Zhang San","67fe6c81e710d29c98c253eecd4bf784":"Li Si","6c732be31e98ce95cfcdf21600723187":"WangTwo ","0aece5adb2321061e5c6503d4acb96aa":"Wang Wu",ea9deb042b6957327d5f68f01735ab5c:"height",ed2f4e1047c46a559c9fa44d1a104e8c:"weight","21592c08e85be4aa8957b87dcefc0b90":"GitHub data","004d9619abe29091ab7b304cb1f4a859":"Number of submissions","97a85a7e019144848f140eb6d1ec10e3":"Timed refresh interval",efde673b57d715d81323607a49aa807c:"After setting, it will automatically refresh at a scheduled time, with a minimum of 1000 and a unit of ms","2809ef518e1357bfad18eaf7017c1fc9":"colour",e2898a2221fccd569dd754d5a8635377:"Please choose a color","31b91481d987b8a535b684a2cd5eda35":"Context data",d7a3d1165b3b07f26290cd5b85b1ad23:"Bind contextual data","24fe70486064321222066f0f912ceb6a":"Context variables","10600cffcc77d5b89e6b68ef0ad2866b":"Variable type","5226a41f14b953bb71511db71dcfa64f":"Supporting formula expressions: ${xxx+xxx}",edc053557737c52769cd259227e59043:"Custom numerical values",d7c9afacab11520d4cdb62028ccb9136:"Option Title","43bf7f392fb5a4e004d8e0e2e0fbe2da":"Variable Name","1dac34a87a800c24126e1f304c1170eb":"[Not required] Can be used to annotate the context variable name",b5d91d081e8008ca5dcbc37987cabec0:"Solid line","271178f681b82063bb49a37883ff3dc9":"Point like",dc35525fc1db90ce01fe8b4be18fb675:"Double line",f28f608fa6cb1452462b54ab566bac07:"Dashed line","04f81c97fc03009e9627139981dbd643":"Round (solid)","970f8a81be815d7bb0c6a6bc2ba29364":"rectangle",fb6cab03d11234f88ddaf95d124306cd:"Rounded rectangle",d5d08700a570ad2722f8e0cbbfadba82:"sign",e66b4df83c54f2458ec04e04cb5be566:"nothing","3693bc5713847bbd077b6e46c2a05343":"Top",a4125f38b12db1e421f90a41685a6489:"left","157a9bcb74c3a3055727876ed3ed0f83":"right","8bbc96678fe42a36e19b6df521c8a16a":"bottom","7b17c54e7a2520812f34af32acb8abb1":"Coinciding with the connection point","3b16a5169f70828c4dfe4dbe05a8d2d5":"inside","62fbab18bf1c519ec42cb4f93cf2b9d3":"Internal left side","588a751ef6b68e444b9f77bfb16c81e0":"Internal right side",aab7527a7684dc698370a81032d201aa:"Internal Top","3018d6ddf71d508759b2fd63fe8cac3a":"Internal bottom","6a770544eba3ba9b675aef52bd2201d9":"Internal top left","787ae2a46ba4b4bd24ae6ff7906ad3af":"Internal bottom left","81baca89771cc775fef59573afbb6b87":"Internal top right","128faf3126f50d2741d6914220a2a0b3":"Internal bottom right","89a86b6d4e5aff7466cf6d0a1489d031":"external",ddbcf28fc42e3937837fdc26cc321aad:"core","5cd8dea33911736929cd3b0dc3a8fefd":"upper","45bb88f3eda9cd8249e09c42de9861ca":"Below","091d64497d283de6948b0403ffa05835":"Upper right side","0622165d0cac695e21149ac57e78b237":"Lower right side","805c54ee5ee6cc689816a5a401a52aa0":"Theme setting","4ed292a7d45d7844c88572cbb825e253":"custom","8188ad6d6a2a0b7e22fda5299faf275d":"Chart color scheme","9000dcf996818acc7ff7d56e68ebbbac":"Color selection strategy","609effbb0d890c63d95747c557963a8c":"Set chart color matching strategy, which can take values of series or data. Series means assigning colors according to the series, with all data in the same series using the same color. Data means assigning colors according to data items, with each data item using a different color.","37015716a788857ec46b1684727e9aaf":"Allocate by series","5b839b7dcc28e6d7e39e7bd3884c01c4":"Allocate by data item","9d39a122b55703e8db2bd1694859a3eb":"Custom color scheme",f673650b982afde91d30476086122110:"Gradient from top to bottom","59d04ac9e0b3bd37163d7853b062242a":"Gradient from bottom to top",d6715c47c74f101763785d8d9fb37871:"Gradient from left to right","3f11af7c79be600cab4fbb1bb754c72e":"Gradient from right to left","01aa840d67368550c34949f25190e04b":"Gradient mode",ecb8015feba32b4d445952d04f4bdb91:"Gradient Transparency",ddd8a3387c751b7deb40b4c14260bf07:"Column spacing/width setting",b0abeab982b9316e33c9249e194ebd7f:"Fixed width of column","46bc89cc5c2be0b791bb6c43e3d2b6a0":"Maximum width of column","5c29d32b57d94b5baeec6ab56c005318":"Minimum width of column",db851d839e99857077f6561e6eacad6c:"Distance between columns","8650f56e04829261448ae785e32c6ced":"The distance between columns in different series is expressed as a percentage (e.g. '30%', representing 30% of the column width).","677b418f8e43a99c501ed84126c2a0a1":"Minimum height of column","3f51ac13c03fd8462d4ed0b28636f5d1":"Column style settings","469dc834434ff501d0ad6d496330d68e":"Column stroke thickness",a4ca736c7e1192524090f5d813afe497:"Column border color","064687e11ecdac406a49234db6fdf015":"Column stroke style","39e0e6b8d8816725e6675b8a0b54c0a3":"Column fillet","96387332a4ae3a30cd873f1ddec9d55c":"Set the blur size of the column shadow","8cf4ad7b5a18b486e7b2e176cfe7b8d5":"Column shadow color","5ec1afc0cda21ee8cc20ead149306fc4":"Horizontal offset distance of pillar shadow","6ccb263ae9619e27f030eb291b05ce45":"Vertical offset distance of column shadow","027458396bf8727df9df599f3098e09e":"Tip settings","43b17f858e546f9b1eb94bcab1057c17":"Display prompt","4b5561062b303422186338e0b33f086d":"Prompt content","40b9495ab86bbc382cd166802b0bbf98":"name",c64ae2c583961cd60c73e91170bdc5e6:"numerical value","1dacdcaef7e8cdba287b4bf5844a5bf3":"percentage","48ceb53d1dd1e3985262ebcb29bd27e3":"Axis name",b9aa608628e039b32860dd137a864d67:"Prompt Text Style","85a27b097428d444323a61315d611a98":"Background color","7f5a2de205e4578a39be2b5c13adc42f":"Border thickness","01a0b0d0dfbc84048d73523b2255e007":"Border color","2716ed79e4e81ce1b880305bdb348c38":"padding ",fa414cfc2ffc329abdc91dbcf51fbfd3:"Center point and radius setting (center)","33ce598edc604518b79b79b87ee4c7ad":"Horizontal position",ce243e0d9ff30c5aa5cf259db1bb8fb8:"The horizontal position of the center point is displayed horizontally in the center by default. Percentage or numerical values can be set, such as 120px or 35%. Default 50%.",e33d2e81670f4676c786d587f539a059:"Vertical position",ba3815e173d2e28f95d458b22fd4828f:"The center point is vertically positioned and displayed in the center by default. Percentage or numerical values can be set, such as 120px or 35%. Default 50%.","0672dd3c8c132d5c99bd9f3226927cda":"Radius within the map area",ed0b1d2e5e0b6d2abf80460faa73fe18:"It can be a percentage relative to half of the smaller item in the height and width of the chart container, or an absolute value. For example: 120px, 35%.","5336b4e79c742c64082eb6cac4d32b01":"Graph radius","8a0123b26ac1313b8ceb1ba8484ba6f6":"It can be a percentage relative to half of the smaller item in the height and width of the chart container, or an absolute value. For example: 120px, 35%. Default 70%","600e709a01fc324b577ca8a773ac975a":"Location setting of map area (grid)","735763a4b2b3378e3d8e96e79185dad1":"Distance above the map area","003a8a5efb163a136d6ea10d86c4e66e":"The distance between the chart content and the top of the container is 60px by default","13290e2b52fcb4eb1151051a825864bc":"Right margin of the image area",c8d6b4bb18e545e7dc8ae941390b513d:"The distance between the chart content and the right side of the container is 7% by default","4ffcc02a98a288ee4df31ac6c5e4ca42":"Bottom margin of the image area","10e142be3f9f8a07c9b88b26f79d0ed2":"The distance between the chart content and the bottom of the container is 60px by default","5b4433b92b903a46ed5ad7f7715b912e":"Left margin of the image area","010de40de6df3f0776a669b6c69266d5":"The distance between the chart content and the left side of the container is 7% by default","2908799bf2319f93a5074fb3c683bf16":"Chart font settings",fa264f228fa58730c902d9f695314805:"Title Text Style",d4f843756a29ed3f1024be115a89d628:"Chart Style Settings","9d753eda4f97376cebc8b0f95b522140":"Region zoom settings",f05ef02287c8da8caf95251ff1117438:"X-axis setting",d554e73d4f753418ad99ad1657e305a6:"Show X-axis","287599ae1426eff90b74a6d6cd95a8c3":"X-axis font style","9e85186901c5450fb21410a73f764364":"Set the minimum display value for the X-axis. If not set, it defaults to adaptive (using the minimum value in the current chart data as the starting point).",b302b3515652a5a15ed074aa40e19c16:"Set the maximum display value for the X-axis. If not set, it defaults to adaptive (using the maximum value in the current chart data as the endpoint value).","74e7e538b214a40765e4fe1006bd41ec":"Display X-axis gridlines",aa9a37c85279861716326f9f52c5846a:"Display X-axis region segmentation","00de7ad497aa0e9ed2c59d287849b213":"Display X-axis labels",cfb1ce15de20ae7582fb364638824aea:"Display all tags","01f30511e820df760f2ba7c954efe8f1":"Label inclination","4a2fd58a46e7e48535d4a45219a10efa":"Display X-axis axis","2217b19fe2f7660a4edb6fc301da8500":"X-axis name","095118bafda5cea2bccf2649d5b14902":"Label Text Style",d53814d4fb28914fafeb9777806733e0:"Tilt angle",eb0c73820d9781b9fe0695572ec539b7:"Used to set the inclination of the X-axis name","031a3206a0c2626af3c268ee3adc7a1d":"Display location","03bd08837f0b61364f41bad38793e6a4":"Left side of X-axis",c5fc11b9a7c1c6647abcf035fd173a49:"Middle of X-axis","702502b5665d2932abb904d1f20c495b":"Right side of X-axis",bd42c46595530ec4df50038e8c32a513:"Distance from the axis","8d7fa7250b4cd8a709e9bdd634545965":"The distance between the coordinate axis name and the axis line.",ad6e310e2e2fb099bb313ccd327ac5ce:"Y-axis setting","43ae878560f567b9a675536db71c37e6":"Display Y-axis","6a009f26a3d98b085b7e9fff06056a6b":"The Y-axis value does not start from 0 (automatic adaptation)",c3de6da03190fe0ba3f558e5560a02d3:"After activation, priority will be given to automatic adaptation based on the current report data situation, and the Y-axis minimum and maximum value configuration items will become invalid.",d4b54425bfd51e38d47547082d74c6e5:"Display Y-axis gridlines","4f1a9db249fcc1b839ca9053e61591b3":"Display Y-axis region segmentation","2c79db503b7409f818765f3e1ebfdf09":"Double Y-axis scale alignment","5b3695545f82fa0d4b4bf7a6e0d7b598":"<div>Detailed Y-axis settings</div>","784c4512c862a7158755d3df54b55b1f":"Y-axis font style","5a758770e46cf0ca7d50e321e84df89a":"Data pre unit","74e52d004753539a4f08a98c0e6ea111":"Data unit",e999599567d6807631664b03d913e1e6:"Y-axis numerical format","6edcc8cc40470e6152373f6aff3e2f5b":"Y-axis name","84593f0f82b15c6e0a54510ee64a7d52":"Used to set the inclination of the Y-axis name",be5202a9dae1eaa100262210b33ce2de:"Y-axis head","5b06f1aef0b1f09af4f83b4a8ed30143":"Middle of Y-axis","3ea0d5785200c85565afb66617cdd7bb":"Y-axis tail",bb00d85f55930459db4e93b64f1f59ff:"<div>Detailed settings for the second Y-axis</div>","7399a8c9fa60cfee8bff982705b74086":"Marking and marking settings",fa70cd50687ede9419a81cf03c29a195:"Mark maximum value","90be3c41250e9036cf6c371163791f65":"Mark minimum value",cfd3246c86b129fd4fa6d9988ba262f8:"Mark background color","67f22edc74dcea10e2408088f081cff2":"Set the horizontal offset position of the marker",abed894ac7d4cc3691d31290616fc6e2:"Set the vertical offset position of the marker",a48d39c4f25c58da83dfebfceadf2715:"Mark rotation","8396292f6ca4a5715dfad9a099e29e10":"Display mean markings",f09f233bd91353b758e28208056a0cb7:"Mean marking color",a4cde99c0bc671c73481507b1ba7e058:"Open benchmark marking",b4748e0c4fd8e59ebc5d434787495d14:"Reference value","04070bfa6eceb6fd0726d63b9fbca46c":"Reference line color","1696c251d6a9be7a2581476f1dffe56f":"Mark on the left side of the marking line","79a5d649da7ac91e424877dd6708b252":"Mark on the right side of the marking line","8c90c769bea75047893f65e276f7336f":"Label setting","8c00c93f007d37b683f431989bbd90a1":"Display label","3caae02b2b038952abcf5e1678c01399":"Label location",ef2f866e8e3fb89d24fab2d78a712246:"Negative label position","4054024fe9a2b89431702c5133acfc19":"Beyond display mode",d81e93adb0e549fa79ac737ce953a6b7:"Exceeding Omission","2c2a689c655ecac6dd468514532a778f":"Line break","9150878dd9a498a526adce5289ada9cc":"Line Break (Line Break within Words)","2c5025debd4e9e73fa9cf58842606815":"Tag content","49b99dc30509e878f454db732e423d81":"Legend setting (legend)","26902b968e1dcbae5c57baa2be468c75":"Show Legend ",d69e18ff6b27a22101d00f711fb94706:"Legend Text Style","94a086278a7a209cf0b2009244f5045a":"Legend alignment method","2eb7450afbcc9bffe0d8a46ae3dfae50":"Alignment of legend markers and text. Default automatic, determined by the position and origin of the component. When the left value of the component is' right 'and the vertical layout is' vertical', it is aligned to the right, which is' right '(left text, right image).","6481c4d10bcc1f40fb67b6556770442e":"automatic",c9d7262306ccf85aca69f95dba065af3:"Legend arrangement direction",bbe3d7cdc9a8100d41e545c17488c933:"horizontal direction","25f0153c233557046e1632cc4719e98b":"vertical direction","47331b4a500d2e3b4d28152581ccdc24":"Legend display mode",c165ac90f49fbdbb603d33be5bc8e25f:"When there are a large number of legends, you can choose to scroll and display them.","90134586a5fbcb59cf3b63e05ef08aa0":"Ordinary legend","859cf36f428e0dbe276ddad6753b808c":"Roll Away ","0f17b89d64e84f2c064254988f84a700":"Legend position",c7759ee44e4bc03a82b599315daba251:"Top left",bf91bd02004049ff235b3ef9cb77891a:"Top right",c3e5d04eb628890fb2be80d32b1be85f:"Bottom left","7e0bb5bab448cac2075c4aa0d161bb75":"lower right",f6ee0981cc3c02b7e3a3ab0535a09796:"Display legend data","093d20e1281b05aa740dce6ef47d7d87":"After activation, the corresponding chart values will be displayed in the legend",ae21bfed0c22dddf5e681c68ce462c71:"Legend data type","6b7faec9be2b2c83004e6c9125eb97b6":"Top margin of legend",caf2c8ff993ff98fd11c3ff94d417ba4:"The distance between the legend component and the upper side of the container can be a specific pixel value like 20, or a percentage relative to the height and width of the container like 20%.",d8b04f1f2401d61117a58aff772f450f:"Right margin of legend",d5fd7db585563cb65d3735c0db842bdd:"The distance between the legend component and the right side of the container can be a specific pixel value like 20, or a percentage relative to the height and width of the container like 20%.","13abc2da0ac38c75bc9eabea2d3ca473":"Bottom margin of legend","97f3b7065a4e18c962f720223632f330":"The distance between the legend component and the bottom of the container can be a specific pixel value like 20, or a percentage relative to the height and width of the container like 20%.",d3632d79d3436a16533ebe8e0e76de4c:"Left margin of legend","097a3b19477122971271e0c38ca5ac20":"The distance between the legend component and the left side of the container can be a specific pixel value like 20, or a percentage relative to the height and width of the container like 20%.","85c6fa595e53a5ebe7f9ab81a1ec2b30":"Legend area width","339ea8a0d7433e8e6fc246c5dd48f215":"Set the display width of the legend area (not the width of a single legend), ensuring that the value set is greater than the width of a single legend. Default adaptive.","8ff491835a056b8350f706f9af55e7cb":"Legend area height","45a75a7e83484b02fbe1721390142646":"Set the display height of the legend area (not the height of a single legend), ensuring that the value set is greater than the height of a single legend. Default adaptive.","2f3737f7b4580f1eca85ab75cccd673e":"Chart animation settings","17c08c2ee09a3cd600ea5f149e431ff6":"Change/animation duration","96049c9ffbd59a40a0715dcb18cff429":"Animation duration during data changes (in milliseconds)","53727e9fab95ea3921ac7e5b390539f3":"Initial/animation duration",bbfcad2f6814f0f529aaef9e88d6fd27:"Initial animation duration (milliseconds)","48e855b12edfcdbf83900dd33065d8cb":"Animation threshold","500e50f34b470436cbdc6da19a328cbf":"When the number of graphics displayed in a single series exceeds this threshold, the animation will be turned off.","5716d7c91aaa337ffcc4b91fa538761d":"Word cloud feature configuration","8255d49c67da2baa3ab9b6097a34a848":"Minimum font size",d35453e5765b248ce0944152577b6c53:"Used to set the minimum value of word cloud font, default is 12","3fafd2d2f59b87b5ca6dc86cac81f8c6":"Maximum font size","5f5fd4a17d63c36e66085bd8bc0bcdad":"Used to set the maximum value of word cloud font, default is 50",a37f7cf4feb128b7aabd783f0b29682d:"Minimum rotation degree",e70f34a04dc73927bad1b84d58230330:"Used to set the minimum rotation degree of the word cloud, default is -90","713feb6f79a6decd88758f6c2bd682ce":"Maximum rotation degree","5812d64c6b3116659c92c5bdde9af501":"Used to set the maximum rotation degree of the word cloud, default is 90",cbb6f8a75bb07beab827db4393ee50cf:"Word cloud gap","785075a93c1a8916e4326e12aa987c59":"Used to set the gap size between word clouds. The smaller the size, the denser the word cloud will be displayed. The default is 8","3c840904636ad96262a32941bbff3cdf":"Width and height settings","13fe3d83509f0ba6c99c529348cc8479":"width","5ea8070c947f7131305b1cfefc5e3ea3":"The default width is the width of the parent container, and the value unit is defaulted to px. It also supports units such as percentages, such as 100%",ef01552f43a6d0303c5191dd3a870406:"height","56b0145829f58a57e4f100993a879d0a":"The default height is 300px, and the value unit is px by default. It also supports units such as percentages, such as 100%",b0ee4cc86e520e763ecaa9726f1c6654:"View control property configuration",f2b5a41db89d006d06a781657a829172:"Minimum value of interval","1145c70ff30dcd1aecbcd760338e98cb":"Used to set the minimum display value for map controls, default is 1","9044c84d2dfb7ed7441c9bc3fad8d9e3":"Maximum value of interval","0d4d13584f9a2449751012879a0932bd":"Used to set the maximum display value for map controls, default is 800","501a7f2f4b46948b0f25638659804cfa":"Minimum color interval","118c06c5937e7e184b96715a27f04183":"Used to set the display color for the minimum value on the map",eb3c4e4fe87bc94c693ad46e0d8684db:"Maximum color range","318b25398ad1cf6f1f9d8f0e19f19d0a":"Used to set the display color for the maximum value on the map","523c9324b0128f88e7a5f78c4e51567d":"Display map controls","2434b8240be6976cadfeb587eb52e9eb":"Control display direction","4c28d648abbd23c33fac24d52e3f7bde":"Horizontal display","2efde12c90fad802ab8020929613a26d":"Vertical display",ca4d1f6c25cfcd5fb5760228b10b4e38:"Control width",e735268b223cb23ea81cb401d8135951:"Used to set the width of map controls, default is 10","8cceb5bb5c847f8feeefc3d95e571ace":"Control length","0f6596f827a65838aae793ecb35cde6e":"Used to set the length of map controls, default is 60","2277faad1e11c4c54cad4579c9a21d2d":"Hover linkage","37d4e24610a9fb58b14726b9bb0f1d0e":"After opening, the hover map control will respond to the map area.",eb9a211a64ab1daee8f85046b394cd9c:"Reverse Display",a19a7f84b2f1665ff25778770cdb457b:"Drag and drop controls",b2630e6ea1fcef6bcababe5f4d294795:"Can be used to enable drag and drop controls.",ed92226c8703d4385197929873e154a7:"Drag and drop linkage",c618be330af72ecaf249fef5a1a0d52c:"Is the map component rendered in real-time when dragging and dropping controls","279544c17541d9cffc36dbb831d960f4":"Title at the end of the interval",ac90e7a66d0aaff1a8203d709336cadd:"Section header title",a1eea93435bf5603ab0305993098601e:"Used to set the minimum display value for view controls, default is 1",c9696177cbe1635d869205bb1ca47f40:"Used to set the maximum display value for view controls","9695b92881ecd2f8a9e7e1768376c462":"The lightest color in the interval","9a5ab7ef72ac9935ecc0a3a2d1805f40":"Display color used to set the minimum value of the interval",ee03c8e06427bc6981f8d6b814153be0:"The darkest color in the interval","4a6711f622ff4eb9488b0835b91a531b":"Display color used to set the maximum value of the interval",feb8d1a75e3d3de4dab13c10d2b08f85:"Display View Control",a58c231b52fad60ed6bc5dccd3d86661:"Control display mode",f5dba50df6bc91f64ecca5e02c3fa5c4:"Segmented display","94a0b7492c3aeb4591ff9160a70135cb":"Continuous display","18b31a9ce8ae7fb80a244d5fbc6c7e58":"Number of segments",ab61f57aed2edc806fddf024927a89a0:"Used to divide the view control into several segments for display, with a default display of 5 segments.","80a4a9ff00a201d29497a7c3090567e4":"Used to set the width of the view control, default is 15.","65581093f9aeb1bfd4612c7165abde76":"Control height","620d8c8e93092afdcce030482e4394e8":"Used to set the height of view controls, default is 10","570e2e3aeb5d8ef5082fce28f4a7cb15":"Used to set the length of view controls, default is 60",bc64779cfafef68448ea2ef4d692290d:"After activation, the hover view control will respond to the component area.","6436cb285f5f1e430cd1b56c3b5995be":"Is the report component rendered in real-time when dragging and dropping controls",f65f2d0979b5a3848a58646d34d9a3ea:"Map feature configuration",d2b0a81a70aac7092442b2ad5d4f60de:"Scale ratio",e9fcb9edd680bf2005af50ef0f6fa6e9:"Used to set the map zoom ratio, default is 1 (no zoom).","32cbaeff1cbbaabf46095b368de9bb8e":"Enable drag and drop","58b442d0ba53b6c704399b7664e8cb0c":"After opening, hold down the map to drag and drop","3a62679813ba3ccc2b4c021dead63e9e":"Region boundary color","764e19f996e459f2463da7b3efce9150":"Regional boundary width","5b023d2e3d28f808340907a3c2a2b756":"Used to set the thickness of the boundary line in the map area, with a default boundary width of 1.","5bd7403766cb86a0d4908651b496365e":"Region highlight color","723c801fa9d221ba366fa551f9bca1fc":"Map Area Colors","0a5b9b07a754f10c22dba7a63656551d":"Bubble characteristic configuration",a8126e3a6aee3884cc23a038b66b712b:"Bubble color","80ad3b1575529313a6ee9da293821261":"Bubble transparency","82295cd5838c21f207f776ed4f75115e":"Minimum radius of bubbles","9f57aabb920f489d6029ac6892b85179":"Used to set the minimum radius value for bubbles.",fe7bb7a46348a8f7f871ab7c4b07cbd4:"Maximum radius of bubbles","2a1fd47323da951f8306eb35a6aa1859":"Used to set the maximum radius value for bubbles.","0d422aa77c705fe6d5f5ee9f17ba6118":"Display bubble ripples",b42d6dd92a39009d7da62cee67b72ffb:"Used to set when to display bubble ripple effects.",c24dea31d3eb39b1e206bf5d09a8b15c:"Fixed Display",fd3394fca21939924eb1f27b2c6a6cdc:"Display when highlighted","9aae778c9e053c2218a5d686e13bf4a9":"Bubble ripple mode",daf0c0ebdc702bb147735cf9c6b1ff51:"Sound wave mode","89b19fe4de677623f2d90799fd898435":"Water wave mode","994d8847023036dec9d43e7c29130ae7":"Number of ripples","46565f53e91b6cadce6518bfe99e2cf6":"Ripple animation time","12482ff2a679d219b05ad7770a896ecb":"Used to set the bubble ripple animation time, in seconds.","2070b7c30f0ffa1add257504c3334210":"Ripple scaling ratio","98b1606ac0635ad803cad0ef565956f6":"Used to set the maximum scaling ratio for ripples in bubble animation.",f273e61dfb428aa64ed5c076ad81916c:"Calendar feature configuration","2cf659bb0023e6f214eccbf0210d9bbb":"Calendar time range",e5c517cd08ee234bd2147caecbf5a70f:"Calendar display direction",e229c2da386efe51dd81db2ae81e6d22:"Display date label","98c5a1867603c6c4d6a54433b92508d2":"Display date labels next to the calendar.","6aa4e5171c8fec395cdc608fd2d683c9":"Calendar unit background color","6eb2dbe793ac91efa07b78c9c9c56492":"Used to set the default background color for calendar cells","644cf90cbfb1943b541fd916163b5473":"Calendar stroke color","9f3f73c52c215a598425b942fa900a0d":"Used to set the stroke color for calendar cells.","49cf4e7ff8e251d5455fb5f15628efa3":"Calendar stroke thickness","5c464a39627b345a18d541573a644660":"Used to set the stroke thickness of calendar cells.","130fc105422bac4f235c0574a636f91c":"Display the dividing line",b378aeaebc9af86d9ee0c0081a0c6040:"Color of dividing line","641f7a10bd8d7fb0c12375c0e1b05ebc":"Thickness of dividing line",d55cc531d243876249d8640349e2488a:"Universal Style","2554a080873b01c708f47a7de9b21229":"Positioning Settings","10cee16f2d7394ae26a2afd1e5f6b24b":"Inner and outer margin settings","89987c3a2c1926d847caa17c486020dd":"Title setting","3ace91cc3c709c6f39f2b76cbdf5b9c9":"show heading",bb88812eadb64c9138bf86da639798f4:"Title Text","8d0abab52be9447e511865b04951fa0b":"Title alignment method","1c8bdc37de484af25ae32f55d9c587a7":"Left",f6f151febf1334c3a437ac6c0d0b65e2:"in","150341b40ec94921e5da48598ee78db7":"right","59a491d7bfd14c8b2baa356c7f6c36e7":"Title Background Color",a88c0c653fba7d358a60576bbf70809e:"Title link",d178e174b1006df9b300b234b8de458a:"Customize background and borders for charts","54fbaf6e1280bd9e0a240489fde97032":"Chart background color","59db6bb7f5ea431e136a5b205b7f7c7a":"Chart rounded corners","5554ff7f24395c28080e1510efebd101":"Chart border width",ce3beffa2bcbb247ba82d5858a0811e4:"Chart border style","368bd6d16576e8ca8db9be2d0a5296a6":"Chart border color",adc1d4db36c16687d811b25ad5d54e78:"Chart shadow width","84cedc16bea2d90b021064e036e916db":"Chart shadow offset",e83e58c7b7ecceb9ba16e6b0b6d3f48e:"Chart Shadow Color","0d2a9bc20946f5086de4e0f6287cad8e":"Currently available fields",ed6baea39d3de9d929b54ad4c85f32a6:"<h3>Main Table</h3>","6462bfcf5dc9c4f3b6b9c70aa8e5ea9e":"Field Name","62a903f6c898dadc8ee62f9c1d34ebca":"Field type",b1afb82c384a473603113b9ae106a345:"Table Name","69635b4fcb027fc286840032af5990ca":"data type","071eeb3e55f2ae336f7474fb6c89aad8":"character string","2d531b4b2814edd26f00adc1b9cfc8b9":"integer",eeb81dca205b89fbb2d327b168a07a73:"decimal","1f90bfa372abfbef513a5b8121162814":"Date and Time","26c9ecb82ca3a17ec8db98c156ca4ba7":"Note: The dataset needs to take fields in the form of data model and field names, such as model_student.id * 10","4e6ded0d51412095ec9785305d513184":"SQL expression",af7f607a288a8617025a99ce91488a05:"Multiple fields can be subjected to operations such as addition, subtraction, multiplication, division, and some SQL function calculations (such as CONCAT, DATEDIFF, ADDDATE, etc.) to form a new calculated field.","87e847c1c1f184cbeec6d8082ca2487f":"Select expression","5f95a033e94f9cf547d8229d1b20d7f9":"Sort based on fields",c369ea262433a097b7a6dcf1359628ee:"Ascending order","5cf098240452cbe14e221764301481a1":"Descending order","630c5a3d106bfa5a14041e4612c829bd":"Select fields",aef04941dcc47f1cb958bd11f63c94ad:"Select dimension field",eb4879011932695766e234f9f45982f3:"Dimension value grouping",ea64a05aec90feef781ee3c11de7cebf:"Custom Group Name","23501adf4441eaadb3479253176da504":"other","1fcda4634111b04ab2400e59b3912502":"The change in the 'Other' configuration item is only a data update in the current grouping options. If you need to update to the report component, please reselect the current grouping.",a7535bc3e39c2b6537196a256a266442:"Select Group",bc065edb81e38471e3b8e5898af4061d:"sort","3d6b49086cf80d4bcff6067617c39b12":"Data Bucket",ae6fc63341bb59e9b877c11e0a47703e:"Custom data bucket name","6238c4deec20253f5bbc031979b94a73":"Data Bucket Conditions",da6438d912aa635346eaf4526f5ec396:"The change in the 'Other' configuration item only updates the data in the current bucket options. If you need to update it to the report component, please reselect the current data bucket.","9b14f02ab6bb8232425d820e59683a98":"Select data bucket","4d166daa49b22100c7646dc6829f3646":"[Expression] {{@1}}","35e8065165e032e7381c8b44439a8c96":"[Data Bucket] {{@1}}","1e39dc80aadf5852fdd9899d4736a82c":"[Grouping] {{@1}}",b3bd6500d91d6d8457ee6fcf142392b4:"event","9e00dfde194dfe98bd3f8d8ea55ed60c":"year","0990d2d0e8591bbaf4f516c902429c8b":"Year Quarter",c3a322c57fb9c75f6a2f0859555b6085:"Year Month","1eaf12e70629af44011065267fa6423d":"Year week (cross year)","47b24ed164d67d5b432d1a6f99d105ab":"Year Month Day","51d6eb36a76d4a2c4f25e03567d3ad7d":"quarter","86b50eb0b3c7bee00ef3d0e3fa681ad5":"month","05554cb359239155eb451258369133b2":"week","056be004e82f2b07fcd509d423d643f7":"week","8a2a9e26f7c2b2efe806195bd2f220e2":"day","364e4fa9e393372fe559793a85a3e8a4":"Precision control","5d70dce4350f4f395c2a569398bd3a6a":"Amount divided into yuan","5df77fa1706c014c52d8d1ed5eaea108":"Add a thousand separator symbol",b912ddb69156967f522318071fc663ce:"Pure numbers without thousands separator symbol","3e1d420f2ecd0bd33cf79fcef7e4f818":"Add a percentage sign (*%) at the end",e62ced9f792170f2b4f0ece7305217f7:"Percentage (*%)","795b2e60f029f22935fdfdf0ede7ea51":"Digital to 10000/100 million","4f4358baac34866f111677228f08ec4c":"Seconds to minutes to seconds",d923dacb28fb060e65c13ce6b7584fb8:"Second to day hour minute second","4a92c45a17486a363649c3e5f934becf":"Byte to MB/GB",db129a9306d2f3d7acdee601ea18b8b5:"Byte to Mbps (bandwidth)","0b2a9e253ee991e976d9c70bf037386e":"Numerical formatting","49608a5f78bca6a250944735f19f3198":"Keep decimal places",a6c47db1cc2f9af71f8b331f88d91d4e:"Can set precision between 0-100",a6f308b53cb4dca1afdbb1e44c3018bc:"0 after decimal point",c9548263126a69917fe4e621191f4958:"After activation, do not display the last 0 to the right of the decimal point","28e1c29ef8d7984f9ed65f743ffc6a30":"Entity data source","8efbc65020f3c868985e6b62a7510ac9":"data set","3f065ab2724ee1dd26bcfc2e260667d0":"unknown type","2343149a6d9689aaf596b31a0be9f389":"number","0cb12cf31a1fbd628118da615ed19426":"Boolean value","431f5c3f1ba5fac864f3320721483ee5":"text",b714b5303b67dcb601a0664654a69bbc:"array","36a1327a76a9e130426a971ad031dd4f":"object",ea5d8a306af77ae1e2806afc8034317a:"Filter criteria",fdc38280653107fdf3baf154204ae076:"Aggregate filtering criteria","9c4bd372bb2fe735d6db13eca5c5dbd3":"API Pull","88bdaeb8bc046a656ea6e700fd1bf2c1":"Static JSON","9a6590b3702421593f2dfe87da46fa01":"context","4958567c8c4098b45061179942bf0027":"Data acquisition method","94f14e9a1df1cfb400ba7408327b86a6":"data interface ","852f4deb79e793a3761e9e72090c75b3":"Business data required for charts can be obtained through interfaces",e0cd7479c8317042ebf302dd34815d28:"Static JSON data",c71ef0cee2fe9c93b8d173c1d2e07144:"Model Fields",f1d4c31b76848df5839bf2c37f43f07a:"expression","18b44d53f0f6bb757631428dcb8d03aa":"grouping","270c97bce44c986ce9e488dc29a61ca5":"Select dimension",fb9a6a1a7c10208a4c5524c53c06d872:"Set {{@1}}","797cfa55439fadc83fa2f274b6afea77":"Dimension field","3a3dec166c8191a15173326919a45886":"Select entity field","9758f5af669c3537dde822e75abda6ce":"Select dataset fields","28214c4af54f87c60b9185f0f5483624":"Date data aggregation","7f19ad096dac966e41f8d53503d74576":"API Fields","70a9dc637a3e88f80856be22a78a325c":"Context field",e745aa67d7094f2d3d646a6a2366897a:"JSON fields","006f49dbb0415346f0fa037fbb34e849":"Not mandatory, can be used to indicate field names.","1cf92f82bc6b04c564185309e9b5bd15":"Not required, can be used for commenting on field names","18e47a04abab37769de4eedd27b29b98":"Sort by date",ff6b0f6d1954ff11451d30b24f5c50b2:"Grouping field",df7c927d6064e471c51100e484c1bce5:'When setting a Y-axis/value axis, the grouping field can be used to display chart data in groups, which is used to achieve the "row to column" comparison function.',"63eebc7c9e98d89ed46d50b873c84a99":"[Not required] Please select a grouping field",c2b0f098cddaca767a1acf2b760a80f3:"Please select the bubble value field","0156b32c7e08352fef427012b6d5b339":"Select Value Axis","9e4fe078ee048f9b2bb18b012c654011":"Value axis field",a20d8471d7ab73fc3d382bac9b656853:"broken line","5e406e9e1476c01e6d55e68227b763d3":"Columnar shape","3a5c6b786171b9f7222a45705acd975b":"Not mandatory, this field name will be prioritized in the chart after configuration.","8d7b3e2623f03a395da1ade18f9ddcf3":"Aggregation method","66cb0d540477fa3fabff254dcb8706a4":"Query result rows",dc16d84c52d70845f86a3f56f06cee4d:"Unable to obtain data for the current map ({{@1}}).",d06367c918b2a40dea09472e93ea00fb:"Total data","46ff01b5358af468be034e2a54ea4020":"Placeholder data"},!1)},36540:function(e,a,t){var i=t(70927);i.__esModule&&(i=i.default),"string"==typeof i&&(i=[[e.id,i,""]]),i.locals&&(e.exports=i.locals),(0,t(70534).A)("73247dfd",i,!1,{sourceMap:!1})},65607:function(e,a,t){"use strict";var i=t(20430),n=t(9726),o=t(86058),c=t(44383),d=t.n(c),r=t(38221),s=t.n(r),f=t(11331),b=t.n(f),h=t(7309),l=t.n(h),p=t(56449),u=t.n(p),g=t(96540),m=t(23805),y=t.n(m),x=t(2404),C=t.n(x),w=t(85015),v=t.n(w),S=t(50014),D=t.n(S),T=t(91998),_=t.n(T),z=t(14368);class A extends z.t{static contextType=o.MzX;config;curChartData=null;chartStylePadding="";onChartMount;chartCanvasDebounce;chartUpdateDebounce;preProps;preChartProps;reportTimer;isLoading=!1;constructor(e,a){super(e),a.registerComponent(this),this.updateChartCanvasPadding=this.updateChartCanvasPadding.bind(this),this.onChartMount=()=>{this.config=this.getChartConfig(this.curChartData),this.renderChart(this.config),this.isLoading&&setTimeout((()=>{this.echarts?.showLoading()}),100),setTimeout((()=>{this.updateChartCanvasPadding(),this.isLoading||this.echarts?.hideLoading()}),500)},this.chartCanvasDebounce=s()(((e,a)=>{const t=this.preChartProps||a||{};for(const a of i.S)if((t.style||{})[a]!==(e.style||{})[a]){this.preChartProps=e,this.updateChartCanvasPadding();break}}),400,{leading:!0,trailing:!1}),this.setReportTimer=this.setReportTimer.bind(this),this.reload=this.reload.bind(this)}async componentDidMount(){this.setReportTimer()}componentDidUpdate(e){this.chartCanvasDebounce(this.props,this.preChartProps),this.props.reportInterval!==e.reportInterval&&this.setReportTimer()}showLoading(){this.isLoading=!0,this.echarts?.showLoading()}hideLoading(){this.isLoading=!1,this.echarts?.hideLoading()}componentWillUnmount(){super.componentWillUnmount(),this.context.unRegisterComponent(this),this.chartCanvasDebounce?.cancel(),this.echarts&&(this.echarts.off("rendered"),this.echarts.off("finished")),clearInterval(this.reportTimer)}reloadEcharts(e){this.echarts?.setOption(e,{replaceMerge:["xAxis","yAxis","series"]})}sortRoprtDataByMeasures(e,a){let t=e;return u()(e)&&a&&a.length&&a.map((a=>{const i=a.orderBy,n=a.as;e[0][n]&&i&&("asc"===i?t=e.sort(((e,a)=>e[n]-a[n])):"desc"===i&&(t=e.sort(((e,a)=>a[n]-e[n]))))})),t}sortRoprtDataByDate(e,a){let t=e;return u()(e)&&a&&a.length&&a.map((a=>{const i=a.orderBy,n=a.as;"date"===a.type&&e[0][n]&&i&&("asc"===i?t=e.sort(((e,a)=>Date.parse(e[n])-Date.parse(a[n]))):"desc"===i&&(t=e.sort(((e,a)=>Date.parse(a[n])-Date.parse(e[n])))))})),t}reload(){const e=this.preProps||this.props;(0,i.h)(e).then((a=>{a&&a.data&&(this.curChartData=a.data,this.updateChartData(a.data,!0,e))}))}setReportTimer(){let e=this.props.reportInterval;e&&v()(e)&&(e=Number.parseInt(e)),this.reportTimer&&clearInterval(this.reportTimer),e?this.mounted&&(this.reportTimer=setInterval(this.reload,Math.max(e,1e3))):this.reportTimer&&clearInterval(this.reportTimer)}setSchema(e){if(!e)return;let a=e;if(u()(e))a=(0,i.A)(e);else if(!y()(e))return;const t=(0,i.i)(a,this.props.data),n=(0,i.j)(this.preProps,t);"chart-map"!==n.type&&"chart-scatter-map"!==n.type||!t?.mapName||t.mapName===this.preProps.mapName?setTimeout((()=>{this.chartUpdateDebounce(n)}),300):this.loadReportMapData(n,(()=>{this.chartUpdateDebounce(n)}))}setData(e,a){const{store:t}=this.props;if(t.updateData(e,void 0,a),y()(e)){const a={...this.preProps.data,...e},t=(0,i.k)(this.props,a),n={...this.preProps,...t,data:a};"chart-map"===this.preProps.type&&t?.mapName&&t.mapName!==this.preProps.mapName?this.loadReportMapData(n,(()=>{this.chartUpdateDebounce(n,this.preProps)})):this.chartUpdateDebounce(n,this.preProps)}}doAction(e,a,t,i){const n=e?.actionType;"setSchema"===n?this.setSchema(i?.chartSchema||i?.value):"gradientStatus"===n&&this.setSchema({gradientStatus:i?.gradientStatus})}getMapURL(e,a,t){let n=t||"";if(e){const t=a||{};if(e){(0,o.BHS)(e)&&(e=o.wzx.formula(e,t)),e=(0,i.l)(e)||e,n=n&&n.startsWith("/api/geojson/beijing/")?`/api/geojson/beijing/${e}`:`/api/geojson/city/${e}`;const a=(0,i.m)(e);"china"===e||"world"===e?n=`/api/geojson/${e}`:a&&(n=`/api/geojson/province/${e}`)}}return{mapName:e,mapURL:n}}fetchChartMapData(e,a){const{mapName:t,mapURL:i,env:o,data:c}=e;i&&window.echarts&&o.fetcher(i,c).then((e=>{e.ok||n.oRP.warning(`获取不到当前地图（${t}）的数据。`),window.echarts.registerMap(t,e.data),a&&a()}))}loadReportMapData(e,a){if(e&&window.echarts){const{data:t,env:i}=e,{mapName:n,mapURL:o}=this.getMapURL(e.mapName,t,e.mapURL);o!==e.mapURL&&this.fetchChartMapData({mapName:n,mapURL:o,env:i,data:t},a)}}refreshConfigByMapName(e,a){const t=e||{};return t.series&&u()(t.series)&&t.series.forEach((e=>{e.mapType=a})),t}getChartConfig(e){return e||{}}updateChartData(e,a,t){return e||{}}updateChartCanvasPadding(e){if(this.ref&&this.mounted){const a=this.ref.getElementsByTagName("canvas");if(a&&a[0]){const{style:t,data:i}=this.props,n=e||t,c=a[0];let d="",r={};n?(r=(0,o.K8U)(n,i),c.style||(c.style={}),d=r.padding?r.padding:r.paddingTop===r.paddingRight&&r.paddingBottom===r.paddingRight&&r.paddingLeft===r.paddingBottom?r.paddingTop||"":`${r.paddingTop||0} ${r.paddingRight||0} ${r.paddingBottom||0} ${r.paddingLeft||0}`):d="",this.chartStylePadding!==d&&(this.chartStylePadding=d,c.style.padding=d,this.reloadEcharts(this.config))}}}}function L(e,a,t,n){const o=e||[],c=t||[],d=[],r=(n||[])[0],s=[],f={};for(let e=0;e<o.length;e++){const t=o[e],n=t[a];s.indexOf(n)<0&&(s.push(n),f[n]={});const b=c.map((e=>(0,i.n)(t[e.as])||"")).filter((e=>""!==e)).join("-");d.indexOf(b)<0&&d.push(b),f[n][b]={...t,value:t[r.as]}}return{categories:d,groupFieldValues:s,groupFieldData:f}}let k=class extends A{config;chartUpdateDebounce;constructor(e,a){super(e,a),this.config=this.getChartConfig(),this.chartUpdateDebounce=s()((async(e,a)=>{const t=this.preProps||a||{};this.showLoading();const n=await(0,i.o)(e,t);this.hideLoading(),n&&n.data&&(this.curChartData=n.data,this.updateChartData(n.data,!0,e));const o=(0,i.p)(e,t);o&&this.updateChartConfig(this.curChartData,o,e),this.preProps=e}),300)}async componentDidMount(){super.componentDidMount();const e=(0,i.i)(this.props,this.props.data);this.preProps=e,this.showLoading();const{data:a}=await(0,i.h)(e);this.hideLoading(),a?(this.curChartData=a,this.updateChartData(a,e)):this.renderChart(this.config);const{dispatchEvent:t}=this.props;await t("init",a,this),this.echarts&&this.echarts.on("finished",(()=>{this.updateChartCanvasPadding(this.props.style),this.hideLoading()}))}componentDidUpdate(e){super.componentDidUpdate(e);const a=this.props.formStore?.data||this.props.data;if(this.preProps&&this.props.data!==e.data){const e=(0,i.k)(this.props,a);this.chartUpdateDebounce({...this.preProps,...e,data:a},this.preProps)}else{const e=(0,i.i)(this.props,a);this.chartUpdateDebounce(e,this.preProps)}}componentWillUnmount(){super.componentWillUnmount(),this.chartUpdateDebounce?.cancel()}doAction(e,a,t,i){const n=e?.actionType;if("chartTypeChange"===n){const e=i?.chartType;this.setSchema({columnChartType:e,xyFlip:"horizontal"===e})}else"xyFlip"===n?this.setSchema({xyFlip:i?.xyFlip}):super.doAction(e,a,t,i)}getChartConfig(e,a){let t=a;a||(t=(0,i.i)(this.props,this.props.data));const n=(0,i.q)(t,this.ref),{measures:o,dimensions:c,xyFlip:r,colorBy:s,columnChartType:f,columnBarWidth:h,columnBarMaxWidth:l,columnBarMinWidth:p,columnBarGap:u,columnBarMinHeight:g,groupField:m}=n;let y=e;const x=c||[],C=o||[],w={tooltip:(0,i.r)(n,void 0,this.ref),color:(0,i.s)(n),title:(0,i.t)(n,this.ref),grid:(0,i.v)(d()(n,i.G)),series:[],...(0,i.w)(d()(n,i.x))},v=(0,i.y)(n,void 0,this.ref),S=(0,i.z)(n,void 0,this.ref);if(r?(w.xAxis=S,w.yAxis=v):(w.yAxis=S,w.xAxis=v),y&&b()(y)&&(y=[y]),!y?.length)return w;if(y=this.sortRoprtDataByDate(y,x),y=this.sortRoprtDataByMeasures(y,C),C&&1===C.length&&m){const e=C[0],{categories:a,groupFieldValues:t,groupFieldData:o}=L(y,m,x,C);for(let c=0;c<t.length;c++){const b=t[c],m=o[b],y=[],x={data:[],type:"bar",name:b||(0,i.B)(e)};for(let e=0;e<a.length;e++){const t=a[e];let n=m[t]?.value||"";"twoWayComparison"!==f||0!==c||(0,i.J)(n)||(n=-n),y.push(n)}x.data=y,"stacked"!==f&&"twoWayComparison"!==f||(x.stack="default"),x.label=(0,i.C)(n,e.formatter||"twoWayComparison"===f?{type:e.formatter,formatterToFixed:e.formatterToFixed,negative:"twoWayComparison"===f}:void 0,this.ref),x.colorBy=s,x.barWidth=h,x.barMaxWidth=l,x.barMinWidth=p,x.barGap=u,x.barMinHeight=g,x.itemStyle=(0,i.D)(n,this.ref),x.markPoint=(0,i.E)(d()(n,i.M),this.ref),x.markLine=(0,i.F)(d()(n,i.H),r,this.ref),w.series.push(x)}v.data=a}else{for(let e=0;e<C.length;e++){const a=C[e],t={data:y.map((t=>{const i=t[a.as];return"twoWayComparison"===f&&0===e?-i:i})),type:"bar",name:(0,i.B)(a)};"stacked"!==f&&"twoWayComparison"!==f||(t.stack="default"),t.label=(0,i.C)(n,a.formatter||"twoWayComparison"===f?{type:a.formatter,formatterToFixed:a.formatterToFixed,negative:"twoWayComparison"===f}:void 0,this.ref),t.colorBy=s,t.barWidth=h,t.barMaxWidth=l,t.barMinWidth=p,t.barGap=u,t.barMinHeight=g,t.itemStyle=(0,i.D)(n,this.ref),t.markPoint=(0,i.E)(d()(n,i.M),this.ref),t.markLine=(0,i.F)(d()(n,i.H),r,this.ref),w.series.push(t)}const e=y.map((e=>x.map((a=>(0,i.n)(e[a.as])||"")).filter((e=>""!==e)).join("-")));v.data=e}return w.legend=(0,i.I)(n,w.series,this.ref),w}updateChartData(e,a,t){const n=t||this.props,o=(0,i.q)(n,this.ref),{measures:c,dimensions:r,xyFlip:s,columnChartType:f,columnBarWidth:h,columnBarMaxWidth:l,columnBarMinWidth:p,columnBarGap:u,columnBarMinHeight:g,groupField:m,colorBy:y}=o,{measures:x,groupField:C}=this.preProps||{};let w=e;const v=r||[],S=c||[],D=x||[];if(w){b()(w)&&(w=[w]),this.config.series=[];let e=[];if(w&&w.length>0){if(w=this.sortRoprtDataByDate(w,v),w=this.sortRoprtDataByMeasures(w,S),1===S.length&&m){const a=S[0],{categories:t,groupFieldValues:n,groupFieldData:c}=L(w,m,v,S);e=t;for(let t=0;t<n.length;t++){const r=n[t],b=c[r],m=[],x={data:[],type:"bar",name:r||(0,i.B)(a)};for(let a=0;a<e.length;a++){const n=e[a];let o=b[n]?.value||"";"twoWayComparison"!==f||0!==t||(0,i.J)(o)||(o=-o),m.push(o)}x.data=m,"stacked"!==f&&"twoWayComparison"!==f||(x.stack="default"),x.label=(0,i.C)(o,a.formatter||"twoWayComparison"===f?{type:a.formatter,formatterToFixed:a.formatterToFixed,negative:"twoWayComparison"===f}:void 0,this.ref),x.colorBy=y,x.barWidth=h,x.barMaxWidth=l,x.barMinWidth=p,x.barGap=u,x.barMinHeight=g,x.itemStyle=(0,i.D)(o,this.ref),x.markPoint=(0,i.E)(d()(o,i.M),this.ref),x.markLine=(0,i.F)(d()(o,i.H),s,this.ref),this.config.series.push(x)}}else{for(let e=0;e<S.length;e++){const a=S[e],t={data:w.map((t=>{const i=t[a.as];return"twoWayComparison"===f&&0===e?-i:i})),type:"bar",name:(0,i.B)(a)};"stacked"!==f&&"twoWayComparison"!==f||(t.stack="default"),t.label=(0,i.C)(o,a.formatter||"twoWayComparison"===f?{type:a.formatter,formatterToFixed:a.formatterToFixed,negative:"twoWayComparison"===f}:void 0,this.ref),t.colorBy=y,t.barWidth=h,t.barMaxWidth=l,t.barMinWidth=p,t.barGap=u,t.barMinHeight=g,t.itemStyle=(0,i.D)(o,this.ref),t.markPoint=(0,i.E)(d()(o,i.M),this.ref),t.markLine=(0,i.F)(d()(o,i.H),s,this.ref),this.config.series.push(t)}e=w.map((e=>v.map((a=>(0,i.n)(e[a.as])||"")).filter((e=>""!==e)).join("-")))}s&&this.config?.yAxis?.data?this.config.yAxis.data=e:this.config?.xAxis?.data&&(this.config.xAxis.data=e)}this.config.legend=(0,i.I)(o,this.config.series,this.ref),a?(0!==e.length&&0!==this.config.series.length&&D.length===S.length&&C===m||!this.echarts?.clear||this.echarts?.clear(),this.reloadEcharts(this.config)):(this.echarts?.clear&&this.echarts?.clear(),this.renderChart(this.config))}}updateChartConfig(e,a,t){const i=this.getChartConfig(e,t);i&&(this.config=i,void 0!==a?.__notEChartsDiff?.columnChartType||void 0!==a?.groupField?(this.echarts?.clear&&this.echarts?.clear(),this.renderChart(i)):this.reloadEcharts(i))}};k=(0,i._)([(0,n.A49)({type:"chart-column",storeType:o.DtI.name})],k);let M=class extends A{config;chartUpdateDebounce;constructor(e,a){super(e,a),this.config=this.getChartConfig(),this.chartUpdateDebounce=s()((async(e,a)=>{const t=this.preProps||a||{};this.showLoading();const n=await(0,i.o)(e,t);this.hideLoading(),n&&n.data&&(this.curChartData=n.data,this.updateChartData(n.data,!0,e));const o=(0,i.p)(e,t);o&&this.updateChartConfig(this.curChartData,o,e),this.preProps=e}),300)}async componentDidMount(){super.componentDidMount();const e=(0,i.i)(this.props,this.props.data);this.preProps=e,this.showLoading();const{data:a}=await(0,i.h)(e);this.hideLoading(),a?(this.curChartData=a,this.updateChartData(a)):this.renderChart(this.config);const{dispatchEvent:t}=this.props;await t("init",a,this),this.echarts&&this.echarts.on("finished",(()=>{this.updateChartCanvasPadding(this.props.style),this.hideLoading()}))}componentDidUpdate(e){super.componentDidUpdate(e);const a=this.props.formStore?.data||this.props.data;if(this.preProps&&this.props.data!==e.data){const e=(0,i.k)(this.props,a);this.chartUpdateDebounce({...this.preProps,...e,data:a},this.preProps)}else{const e=(0,i.i)(this.props,a);this.chartUpdateDebounce(e,this.preProps)}}componentWillUnmount(){super.componentWillUnmount(),this.chartUpdateDebounce?.cancel()}doAction(e,a,t,i){const n=e?.actionType;if("chartTypeChange"===n){const e=i?.chartType;"line"===e?this.setSchema({stackedLineChart:!1}):"stackedLine"===e&&this.setSchema({stackedLineChart:!0})}else"xAxisInverse"===n?this.setSchema({xAxisInverse:i?.xAxisInverse}):super.doAction(e,a,t,i)}getChartConfig(e,a){let t=a;a||(t=(0,i.i)(this.props,this.props.data));const n=(0,i.q)(t,this.ref),{measures:o,measures2:c,dimensions:r,stackedLineChart:s,lineType:f,lineStepPosition:h,lineSymbol:l,columnLineMix:p,doubleYAxis:u,doubleYAxisAlign:g,columnBarWidth:m,columnBarMaxWidth:y,columnBarMinWidth:x,columnBarGap:C,columnBarMinHeight:w,groupField:v,colorBy:S}=n;let D=e;const T=o||[],_=r||[];if(D&&b()(D)&&(D=[D]),!e||0===e.length)return{};const z={tooltip:(0,i.r)(n,void 0,this.ref),title:(0,i.t)(n,this.ref),color:(0,i.s)(n),series:[],grid:(0,i.v)(d()(n,i.G)),xAxis:{data:[],type:"category",...(0,i.y)(n,void 0,this.ref)},...(0,i.w)(d()(n,i.x))};if(!D?.length)return z;D=this.sortRoprtDataByDate(D,_),D=this.sortRoprtDataByMeasures(D,T);const A=u&&c?[].concat(T).concat(c):T;let k=[];if(!u&&1===T.length&&v){const e=T[0],{categories:a,groupFieldValues:t,groupFieldData:o}=L(D,v,_,A);k=a;for(let a=0;a<t.length;a++){const c=t[a],r=o[c],b=[];let u={data:[],type:p?(0,i.K)(e,a):"line",name:c||(0,i.B)(e)};for(let e=0;e<k.length;e++){const a=k[e];b.push(r[a]?.value||"")}u.data=b,u=Object.assign(u,{symbol:l||"emptyCircle"},(0,i.L)(d()(n,i.N))),s&&"default"!==s&&(u.stack="default",u.areaStyle={}),u.label=(0,i.C)(n,e.formatter?{type:e.formatter,formatterToFixed:e.formatterToFixed,negative:!1}:void 0,this.ref),u.colorBy=S,u.smooth="smooth"===f,u.step="step"===f?h||"start":"",u.markPoint=(0,i.E)(d()(n,i.M),this.ref),u.markLine=(0,i.F)(d()(n,i.H),!1,this.ref),z.series.push(u)}}else{for(let e=0;e<A.length;e++){const a=A[e];if(!a)continue;let t={data:D.map((e=>e[a.as])),type:p?(0,i.K)(a,e):"line",name:(0,i.B)(a)};"line"===t.type?t=Object.assign(t,{symbol:l||"emptyCircle"},(0,i.L)(d()(n,i.N))):(t.barWidth=m,t.barMaxWidth=y,t.barMinWidth=x,t.barGap=C,t.barMinHeight=w,t.itemStyle=(0,i.D)(n,this.ref)),e>=T.length&&(t.yAxisIndex=1),s&&"default"!==s&&(t.stack="default",t.areaStyle={}),t.label=(0,i.C)(n,a.formatter?{type:a.formatter,formatterToFixed:a.formatterToFixed,negative:!1}:void 0,this.ref),t.colorBy=S,t.smooth="smooth"===f,t.step="step"===f?h||"start":"",t.markPoint=(0,i.E)(d()(n,i.M),this.ref),t.markLine=(0,i.F)(d()(n,i.H),!1,this.ref),z.series.push(t)}k=D.map((e=>_.map((a=>(0,i.n)(e[a.as])||"")).join("-")))}if(z.xAxis.data=k,u){const e=d()(n,i.Y);let a=d()(n,i.O);a={...e,yAxisLabelFontSize:a.yAxisLabelFontSize2,yAxisMin:a.yAxisMin2,yAxisMax:a.yAxisMax2,yAxisLabelRotate:a.yAxisLabelRotate2,yAxisPreUnit:a.yAxisPreUnit2,yAxisAfterUnit:a.yAxisAfterUnit2,yAxisName:a.yAxisName2,yAxisNameConfig:a.yAxis2NameConfig,yAxisFormatter:a.yAxisFormatter2,yAxisLabelStyle:a.yAxis2LabelStyle},z.yAxis=(0,i.z)([e,a],{},this.ref)}else z.yAxis=(0,i.z)(n,{},this.ref);return z.legend=(0,i.I)(n,z.series,this.ref),z}updateChartData(e,a,t){const n=t||this.props,o=(0,i.q)(n,this.ref),{measures:c,dimensions:r,measures2:s,groupField:f,stackedLineChart:h,lineType:l,lineStepPosition:p,lineSymbol:u,columnLineMix:g,doubleYAxis:m,doubleYAxisAlign:y,columnBarWidth:x,columnBarMaxWidth:C,columnBarMinWidth:w,columnBarGap:v,columnBarMinHeight:S,colorBy:D}=o,{measures:T,measures2:_}=this.preProps||{};let z=e;const A=r||[],k=c||[];if(this.config.xAxis||(this.config=this.getChartConfig(e)),z){this.config.series=[];let e=[];if(b()(z)&&(z=[z]),z&&z.length>0){z=this.sortRoprtDataByDate(z,A),z=this.sortRoprtDataByMeasures(z,k);const a=m&&s?[].concat(k).concat(s):k;if(!m&&1===k.length&&f){const a=k[0],{categories:t,groupFieldValues:n,groupFieldData:c}=L(z,f,A,k);e=t;for(let t=0;t<n.length;t++){const r=n[t],s=c[r],f=[];let b={data:[],type:g?(0,i.K)(a,t):"line",name:r||(0,i.B)(a)};for(let a=0;a<e.length;a++){const t=e[a];f.push(s[t]?.value||"")}b.data=f,b=Object.assign(b,{symbol:u||"emptyCircle"},(0,i.L)(d()(o,i.N))),h&&"default"!==h&&(b.stack="default",b.areaStyle={}),b.label=(0,i.C)(o,a.formatter?{type:a.formatter,formatterToFixed:a.formatterToFixed,negative:!1}:void 0,this.ref),b.colorBy=D,b.smooth="smooth"===l,b.step="step"===l?p||"start":"",b.markPoint=(0,i.E)(d()(o,i.M),this.ref),b.markLine=(0,i.F)(d()(o,i.H),!1,this.ref),this.config.series.push(b)}}else{for(let e=0;e<a.length;e++){const t=a[e];if(!t)continue;let n={data:z.map((e=>e[t.as])),type:g?(0,i.K)(t,e):"line",name:(0,i.B)(t)};"line"===n.type?n=Object.assign(n,{symbol:u||"emptyCircle"},(0,i.L)(d()(o,i.N))):(n.barWidth=x,n.barMaxWidth=C,n.barMinWidth=w,n.barGap=v,n.barMinHeight=S,n.itemStyle=(0,i.D)(o,this.ref)),e>=k.length&&(n.yAxisIndex=1),h&&"default"!==h&&(n.stack="default",n.areaStyle={}),n.label=(0,i.C)(o,t.formatter?{type:t.formatter,formatterToFixed:t.formatterToFixed,negative:!1}:void 0,this.ref),n.colorBy=D,n.smooth="smooth"===l,n.step="step"===l?p||"start":"",n.markPoint=(0,i.E)(d()(o,i.M),this.ref),n.markLine=(0,i.F)(d()(o,i.H),!1,this.ref),this.config.series.push(n)}A.length>0&&(e=z.map((e=>A.map((a=>(0,i.n)(e[a.as])||"")).join("-"))))}if(this.config?.xAxis?.data&&(this.config.xAxis.data=e),m){const e=d()(o,i.Y);let a=d()(o,i.O);a={...e,yAxisLabelFontSize:a.yAxisLabelFontSize2,yAxisMin:a.yAxisMin2,yAxisMax:a.yAxisMax2,yAxisLabelRotate:a.yAxisLabelRotate2,yAxisPreUnit:a.yAxisPreUnit2,yAxisAfterUnit:a.yAxisAfterUnit2,yAxisName:a.yAxisName2,yAxisFormatter:a.yAxisFormatter2,yAxisLabelStyle:a.yAxis2LabelStyle},this.config.yAxis=(0,i.z)([e,a],{},this.ref)}else this.config.yAxis=(0,i.z)(o,{},this.ref)}this.config.legend=(0,i.I)(o,this.config.series,this.ref),a?(0!==e.length&&0!==this.config.series.length&&T?.length===c?.length&&_?.length===s?.length||!this.echarts?.clear||this.echarts?.clear(),this.reloadEcharts(this.config)):(this.echarts?.clear&&this.echarts?.clear(),this.renderChart(this.config))}}updateChartConfig(e,a,t){const i=this.getChartConfig(e,t);i&&(this.config=i,void 0!==a?.__notEChartsDiff?.doubleYAxisAlign||void 0!==a?.__notEChartsDiff?.stackedLineChart?(this.echarts?.clear&&this.echarts?.clear(),this.renderChart(i)):this.reloadEcharts(i))}};M=(0,i._)([(0,n.A49)({type:"chart-line",storeType:o.DtI.name})],M);let F=class extends A{config;chartUpdateDebounce;constructor(e,a){super(e,a),this.config=this.getChartConfig(),this.chartUpdateDebounce=s()((async(e,a)=>{const t=this.preProps||a||{};this.showLoading();const n=await(0,i.o)(e,t);this.hideLoading(),n&&n.data&&(this.curChartData=n.data,this.updateChartData(n.data,!0,e));const o=(0,i.p)(e,t);o&&this.updateChartConfig(this.curChartData,o,e),this.preProps=e}),300)}async componentDidMount(){super.componentDidMount();const e=(0,i.i)(this.props,this.props.data);this.preProps=e,this.showLoading();const{data:a}=await(0,i.h)(e);this.hideLoading(),a?(this.curChartData=a,this.updateChartData(a,e)):this.renderChart(this.config);const{dispatchEvent:t}=this.props;await t("init",a,this),this.echarts&&this.echarts.on("finished",(()=>{this.updateChartCanvasPadding(this.props.style),this.hideLoading()}))}componentDidUpdate(e){super.componentDidUpdate(e);const a=this.props.formStore?.data||this.props.data;if(this.preProps&&this.props.data!==e.data){const e=(0,i.k)(this.props,a);this.chartUpdateDebounce({...this.preProps,...e,data:a},this.preProps)}else{const e=(0,i.i)(this.props,a);this.chartUpdateDebounce(e,this.preProps)}}componentWillUnmount(){super.componentWillUnmount(),this.chartUpdateDebounce?.cancel()}doAction(e,a,t,i){const n=e?.actionType;if("chartTypeChange"===n){const e=i?.chartType;this.setSchema({pieChartType:e,innerRadius:"ring"===e?60:void 0})}else super.doAction(e,a,t,i)}getChartConfig(e,a){let t=a;a||(t=(0,i.i)(this.props,this.props.data));const{measures:n,dimensions:o,dataType:c,pieChartType:r,pieChartRoseType:s,color:f}=t,h=(0,i.q)(t,this.ref);let p=e;const g=n||[],m=o||[];let y=[];const x={tooltip:(0,i.r)(h,void 0,this.ref),title:(0,i.t)(h,this.ref),color:(0,i.s)(h),series:[],...(0,i.w)(d()(h,i.x))};if("rose"===r&&(x.roseType=s),!p)return x;if(1===c){b()(p)&&(p=[p]);const e=p.map((e=>m.map((a=>(0,i.n)(e[a.as])||"")).join("-"))),a=g[0];if(!a)return x;y=p.map(((t,n)=>({value:t[a.as],name:e[n],itemStyle:(0,i.P)(h)}))),x.series.push({data:y,type:"pie",...(0,i.Q)(d()(h,i.R)),label:(0,i.C)(h,a.formatter?{type:a.formatter,formatterToFixed:a.formatterToFixed,negative:!1}:void 0,this.ref)})}else{const e=[];u()(p)&&(p=p[0]);for(const a in p){const t=l()(g,(e=>e.as===a));t&&e.push({value:p[a],name:(0,i.T)(t,a),itemStyle:(0,i.P)(h)})}y=e,x.series.push({data:y,type:"pie",...(0,i.Q)(d()(h,i.R)),label:{...(0,i.C)(h,void 0,this.ref),overflow:"none"}})}return x.legend=(0,i.I)(h,y,this.ref),x}updateChartData(e,a,t){const n=t||this.props,{measures:o,dimensions:c,dataType:r}=n,s=o||[],f=c||[],h=(0,i.q)(n,this.ref);let p=e;if(e){if(this.config.series=[],1===r){b()(p)&&(p=[p]);const e=p.map((e=>f.map((a=>(0,i.n)(e[a.as])||"")).join("-"))),a=s[0];a&&this.config.series.push({data:p.map(((t,n)=>({value:t[a.as],name:e[n],itemStyle:(0,i.P)(h)}))),type:"pie",...(0,i.Q)(d()(h,i.R)),label:(0,i.C)(h,a.formatter?{type:a.formatter,formatterToFixed:a.formatterToFixed,negative:!1}:void 0,this.ref)})}else{u()(p)&&(p=p[0]);const e=[];for(const a in p){const t=l()(s,(e=>e.as===a));t&&e.push({value:p[a],name:(0,i.T)(t,a),itemStyle:(0,i.P)(h)})}this.config.series.push({data:e,type:"pie",...(0,i.Q)(d()(h,i.R)),label:{...(0,i.C)(h,void 0,this.ref),overflow:"none"}})}this.config.legend=(0,i.I)(h,this.config.series,this.ref),a?(0===this.config.series.length&&this.echarts?.clear&&this.echarts?.clear(),this.reloadEcharts(this.config)):(this.echarts?.clear&&this.echarts?.clear(),this.renderChart(this.config))}}updateChartConfig(e,a,t){const i=this.getChartConfig(e,t);if(i){const{dataType:e,roseType:t}=a||{};void 0===e&&void 0===t||!this.echarts?.clear||this.echarts?.clear(),this.config=i,void 0!==t?this.renderChart(i):this.reloadEcharts(i)}}};F=(0,i._)([(0,n.A49)({type:"chart-pie",storeType:o.DtI.name})],F);let P=class extends g.Component{static contextType=o.MzX;chartUpdateDebounce;preProps;reportTimer;domRef=g.createRef();constructor(e,a){super(e),a.registerComponent(this),this.state={targetNumbers:{},targetNumberTime:(new Date).getTime()},this.chartUpdateDebounce=s()((async(e,a)=>{const t=this.preProps||a||{},n=await(0,i.o)(e,this.preProps);n?.data&&this.updateChartData(n.data),this.preProps=e,(0,i.p)(e,t)&&this.forceRender()}),300),this.setReportTimer=this.setReportTimer.bind(this),this.reload=this.reload.bind(this)}async componentDidMount(){const e=(0,i.i)(this.props,this.props.data);this.preProps=e;const a=await(0,i.h)(e);a?.data&&this.updateChartData(a?.data);const{dispatchEvent:t}=this.props;await t("init",a?.data||{},this),this.setReportTimer()}componentDidUpdate(e,a){const t=this.props,n=t.formStore?.data||t.data;if(a.targetNumberTime===this.state.targetNumberTime){if(this.preProps&&t.data!==e.data){const e=(0,i.k)(t,n);this.chartUpdateDebounce({...this.preProps,...e,data:n},this.preProps)}else{const e=(0,i.i)(t,n);this.chartUpdateDebounce(e,this.preProps)}this.props.reportInterval!==e.reportInterval&&this.setReportTimer()}}componentWillUnmount(){this.context.unRegisterComponent(this),this.chartUpdateDebounce?.cancel(),clearInterval(this.reportTimer)}getReportProps(){let e=this.preProps;if(!e){e=this.props;const a=this.props.formStore?.data||this.props.data;return(0,i.i)(e,a)}return e}reload(){const e=this.preProps||this.props;(0,i.h)(e).then((e=>{e&&e.data&&this.updateChartData(e.data)}))}setData(e,a){const{store:t}=this.props;if(t.updateData(e,void 0,a),y()(e)){const a={...this.preProps.data,...e},t=(0,i.k)(this.props,a),n={...this.preProps,...t,data:a};this.chartUpdateDebounce(n,this.preProps)}}setSchema(e){if(!e)return;let a=e;if(u()(e))a=(0,i.A)(e);else if(!y()(e))return;const t=(0,i.i)(a,this.props.data),n=(0,i.j)(this.preProps,t);this.chartUpdateDebounce(n)}doAction(e,a,t,i){const n=e?.actionType;"setSchema"===n&&this.setSchema(i?.chartSchema||i?.value)}setReportTimer(){let e=this.props.reportInterval;e&&v()(e)&&(e=Number.parseInt(e)),this.reportTimer&&clearInterval(this.reportTimer),e?this.reportTimer=setInterval(this.reload,Math.max(e,1e3)):this.reportTimer&&clearInterval(this.reportTimer)}forceRender(){this.setState({targetNumberTime:(new Date).getTime()})}updateChartData(e){C()(this.state.targetNumbers,e)||this.setState({targetNumbers:e})}renderTitle(){const e=this.getReportProps(),{classnames:a,titleShow:t,titleText:n,titleAlignment:o,titleColor:c,titleBackgroundColor:d,titleFontSize:r,titleLink:s}=e,f=(0,i.t)(e,this.domRef),b={display:t?"block":"none",textAlign:o,color:c||(0,i.U)("color.text"),fontSize:r,...f.textStyle};return g.createElement("div",{className:a("TargetNumberTitle"),style:b},s?g.createElement("a",{style:{background:d||"none",color:b.color,fontSize:b.fontSize},href:s,target:"_blank"},n):g.createElement("span",{style:{background:d||"none"}},n))}renderValExpr(e){const a=(0,i.V)(e||"",this.props.data||{});return void 0!==a?a.toString():""}render(){const e=this.getReportProps(),{className:a,classnames:t,style:n,classPrefix:c,alignClass:d,data:r,id:s,wrapperCustomStyle:f,env:b,themeCss:h,baseControlClassName:l}=e,p=d??"flex-col";let{targetNumbers:m,targetNumberTime:y}=this.state;const{measures:x}=e,C=x||[],{dataSourceType:w,contextData:v,fontSize:S,fontColor:D,fontWeight:T}=e;u()(m)&&(m=m[0]);const _=(0,o.K8U)(n,r),z={fontSize:S||32,fontWeight:T||400,...(0,i.W)(e,"chartStyle",{color:(0,i.U)("color.brand"),fontSize:S||"32px"},this.domRef)},A=(0,i.W)(e,"subTitleStyle",{color:(0,i.U)("color.text"),fontSize:"12px"},this.domRef);return("context"===w&&w||m&&0!==C.length)&&("context"!==w||v&&0!==v.length)?"context"===w?g.createElement("div",{className:t("TargetContainer",a,(0,o.NH8)({name:"baseControlClassName",id:s,themeCss:h}),(0,o.NH8)({name:"wrapperCustomStyle",id:s,themeCss:f})),style:_,ref:e=>{this.domRef=e}},this.renderTitle(),v.map(((e,a)=>{let n=this.renderValExpr(e.data);return e.formatter&&(n=i.X[e.formatter](n||0,e)),g.createElement("div",{className:t("TargetBlock",p),key:a},g.createElement("div",{className:t("TargetNumber","break-all"),style:z},n),g.createElement("div",{className:t("TargetTitle","break-all"),style:A},this.renderValExpr(e.title||"")),g.createElement(o.z4D,{config:{wrapperCustomStyle:f,id:s,themeCss:h,classNames:[{key:"baseControlClassName"}]},env:b}))}))):g.createElement("div",{className:t("TargetContainer",a,(0,o.NH8)({name:"baseControlClassName",id:s,themeCss:h}),(0,o.NH8)({name:"wrapperCustomStyle",id:s,themeCss:f})),style:_,ref:e=>{this.domRef=e}},this.renderTitle(),C.map(((e,a)=>{let n=m[e.as]??"-";return e.formatter&&(n=i.X[e.formatter](n||0,e)),g.createElement("div",{className:t("TargetBlock",p),key:a},g.createElement("div",{className:t("TargetNumber","break-all"),style:z},n),g.createElement("div",{className:t("TargetTitle","break-all"),style:A},(0,i.B)(e)),g.createElement(o.z4D,{config:{wrapperCustomStyle:f,id:s,themeCss:h,classNames:[{key:"baseControlClassName"}]},env:b}))}))):g.createElement("div",{className:t("TargetContainer",a,(0,o.NH8)({name:"baseControlClassName",id:s,themeCss:h}),(0,o.NH8)({name:"wrapperCustomStyle",id:s,themeCss:f})),style:_,"data-time":y,ref:e=>{this.domRef=e}},this.renderTitle(),g.createElement("div",{className:t("TargetBlock",p)},g.createElement("div",{className:t("TargetNumber"),style:z},"-"),g.createElement("div",{className:t("TargetTitle"),style:A},"-")),g.createElement(o.z4D,{config:{wrapperCustomStyle:f,id:s,themeCss:h,classNames:[{key:"baseControlClassName"}]},env:b}))}};P=(0,i._)([(0,n.A49)({type:"target-number",storeType:o.DtI.name})],P);let B=class extends A{config;chartUpdateDebounce;constructor(e,a){super(e,a),this.config=this.getChartConfig(),this.chartUpdateDebounce=s()((async(e,a)=>{const t=this.preProps||a||{};this.showLoading();const n=await(0,i.o)(e,t);this.hideLoading(),n&&n.data&&(this.curChartData=n.data,this.updateChartData(n.data,!0,e)),(0,i.p)(e,t)&&this.updateChartConfig(e),this.preProps=e}),300)}async componentDidMount(){super.componentDidMount();const e=(0,i.i)(this.props,this.props.data);this.preProps=e,this.showLoading();const{data:a}=await(0,i.h)(e);this.hideLoading(),a?(this.curChartData=a,this.updateChartData(a)):this.renderChart(this.config);const{dispatchEvent:t}=this.props;await t("init",a,this),this.echarts&&this.echarts.on("finished",(()=>{this.updateChartCanvasPadding(this.props.style),this.hideLoading()}))}componentDidUpdate(e){super.componentDidUpdate(e);const a=this.props.formStore?.data||this.props.data;if(this.preProps&&this.props.data!==e.data){const e=(0,i.k)(this.props,a);this.chartUpdateDebounce({...this.preProps,...e,data:a},this.preProps)}else{const e=(0,i.i)(this.props,a);this.chartUpdateDebounce(e,this.preProps)}}componentWillUnmount(){super.componentWillUnmount(),this.chartUpdateDebounce?.cancel()}getChartConfig(e,a){let t=a;a||(t=(0,i.i)(this.props,this.props.data));const{measures:n,progressStartAngle:o,progressEndAngle:c,dataSourceType:d,contextData:r,data:s}=t,f=(0,i.q)(t,this.ref);let b=(n||[])[0]||{};const h={};let l=e||{},p=100;if(e&&u()(e)&&(l=e[0]),"context"===d){const e=r&&r[0]?r[0]:{};b=e,h.value=(0,i.V)(e.data,s),h.name=(0,i.V)(e.title,s)}else h.value=l[b.as],h.name=(0,i.B)(b);return"numberToPercent"===b.formatter?p=1:"totalToPercent"===b.formatter&&b.totalField&&(p=l[b.totalFieldAs||b.totalField],"context"===d&&(p=s[b.totalField])),{series:[{type:"gauge",startAngle:o,endAngle:c,pointer:(0,i.Z)(f),progress:(0,i.$)(f,this.ref),axisLine:(0,i.a0)(f,this.ref),splitLine:(0,i.a1)(f,this.ref),axisTick:(0,i.a2)(f,this.ref),axisLabel:(0,i.a3)(f,this.ref),...(0,i.Q)(f),data:[h],min:0,max:p,title:(0,i.a4)(f,this.ref),detail:(0,i.a5)(f,b,this.ref)}],title:(0,i.t)(f,this.ref)}}updateChartData(e,a,t){const n=t||this.props,{dataSourceType:o,measures:c,data:d,contextData:r}=n,s=(0,i.q)(n,this.ref),f={};let b=(c||[])[0]||{},h=e||{},l=100;if(e&&u()(e)&&(h=e[0]),"context"===o){const e=r&&r[0]?r[0]:{};b=e,f.value=(0,i.V)(e.data,d),f.name=(0,i.V)(e.title,d)}else f.value=h[b.as],f.name=(0,i.B)(b);"numberToPercent"===b.formatter?l=1:"totalToPercent"===b.formatter&&b.totalField&&(l=h[b.totalFieldAs||b.totalField],"context"===o&&(l=d[b.totalField])),this.config.series[0].data=[f],this.config.series[0].detail=(0,i.a5)(s,b,this.ref),this.config.series[0].max=l,a?this.reloadEcharts(this.config):(this.echarts?.clear&&this.echarts?.clear(),this.renderChart(this.config))}updateChartConfig(e){const a=e||this.props,{measures:t}=a,{measures:i}=this.preProps||{},n=this.getChartConfig(this.curChartData,e);if(n){this.config=n;const e=(t||[])[0]?.formatter,a=(i||[])[0]?.formatter;a&&!e&&this.echarts?.clear&&this.echarts?.clear(),this.reloadEcharts(n)}}};B=(0,i._)([(0,n.A49)({type:"chart-percent",storeType:o.DtI.name})],B);let U=class extends A{config;chartUpdateDebounce;constructor(e,a){super(e,a),this.config=this.getChartConfig(),this.chartUpdateDebounce=s()((async(e,a)=>{const t=this.preProps||a||{};this.showLoading();const n=await(0,i.o)(e,t);this.hideLoading(),n&&n.data&&(this.curChartData=n.data,this.updateChartData(n.data,!0,e));const o=(0,i.p)(e,t);o&&this.updateChartConfig(this.curChartData,o,e),this.preProps=e}),300)}async componentDidMount(){super.componentDidMount();const e=(0,i.i)(this.props,this.props.data);this.preProps=e,this.showLoading();const{data:a}=await(0,i.h)(e);this.hideLoading(),a?(this.curChartData=a,this.updateChartData(a)):this.renderChart(this.config);const{dispatchEvent:t}=this.props;await t("init",a,this),this.echarts&&this.echarts.on("finished",(()=>{this.updateChartCanvasPadding(this.props.style),this.hideLoading()}))}componentDidUpdate(e){super.componentDidUpdate(e);const a=this.props.formStore?.data||this.props.data;if(this.preProps&&this.props.data!==e.data){const e=(0,i.k)(this.props,a);this.chartUpdateDebounce({...this.preProps,...e,data:a},this.preProps)}else{const e=(0,i.i)(this.props,a);this.chartUpdateDebounce(e,this.preProps)}}componentWillUnmount(){super.componentWillUnmount(),this.chartUpdateDebounce?.cancel()}getChartConfig(e,a){let t=a;a||(t=(0,i.i)(this.props,this.props.data));const n=(0,i.q)(t,this.ref),{measures:o,dimensions:c,color:r,groupField:s}=n;let f=e;const h=o||[],l=c||[],p={color:(0,i.s)(n),title:(0,i.t)(n,this.ref),grid:(0,i.v)(n),radar:{indicator:[],...(0,i.Q)(d()(n,i.R)),axisLine:{show:n.axisLineStyle?.show??!0,lineStyle:(0,i.a6)(n,"axisLineStyle",this.ref)},splitLine:{show:n.splitLineStyle?.show??!0,lineStyle:(0,i.a6)(n,"splitLineStyle",this.ref)}},series:[{type:"radar",data:[],areaStyle:(0,i.a7)(n)}],...(0,i.w)(d()(n,i.x))};if(0===h.length||0===l.length)return p;if(f&&b()(f)&&(f=[f]),!f?.length)return p;const u=l[0].as;let g=[];if(h&&1===h.length&&s){const e=h[0],{categories:a,groupFieldValues:t,groupFieldData:o}=L(f,s,l,h);let c=a.map((e=>({name:e})));c=D()(c,"name"),p.radar.indicator=c;for(let c=0;c<t.length;c++){const d=t[c],r=o[d],s=[],f={value:[],name:d||(0,i.B)(e)};for(let e=0;e<a.length;e++){const t=a[e];s.push(r[t]?.value||"")}f.value=s,f.label=(0,i.C)(n,e.formatter?{type:e.formatter,formatterToFixed:e.formatterToFixed}:void 0,this.ref),p.series[0].data.push(f)}}else{for(const e of h){if(!e)continue;const a=f.map((a=>a[e.as]));g=g.concat(a),p.series[0].data.push({value:a,name:(0,i.B)(e),label:(0,i.C)(n,e.formatter?{type:e.formatter,formatterToFixed:e.formatterToFixed,negative:!1}:void 0,this.ref)})}const e=Math.max(...g);p.radar.indicator=f.map((a=>({name:a[u],max:e})))}return p.tooltip=(0,i.r)(n,p.radar.indicator,this.ref),p.legend=(0,i.I)(n,p.series[0].data,this.ref),p}updateChartData(e,a,t){const n=t||this.props,o=(0,i.q)(n,this.ref),{measures:c,dimensions:d,groupField:r}=o;let s=e;const f=c||[],h=d||[];if(s){this.config.series=[{type:"radar",data:[],areaStyle:(0,i.a7)(o)}],b()(s)&&(s=[s]);const e=h[0]?.as;let t=[];if(f&&1===f.length&&r){const e=f[0],{categories:a,groupFieldValues:t,groupFieldData:n}=L(s,r,h,f);let c=a.map((e=>({name:e})));c=D()(c,"name"),this.config.radar.indicator=c;for(let c=0;c<t.length;c++){const d=t[c],r=n[d],s=[],f={value:[],name:d||(0,i.B)(e)};for(let e=0;e<a.length;e++){const t=a[e];s.push(r[t]?.value||"")}f.value=s,f.label=(0,i.C)(o,e.formatter?{type:e.formatter,formatterToFixed:e.formatterToFixed}:void 0,this.ref),this.config.series[0].data.push(f)}}else{for(const e of f){if(!e)continue;const a=s.map((a=>a[e.as]));t=t.concat(a),this.config.series[0].data.push({value:a,name:(0,i.B)(e),label:(0,i.C)(o,e.formatter?{type:e.formatter,formatterToFixed:e.formatterToFixed,negative:!1}:void 0,this.ref)})}const a=Math.max(...t);this.config.radar.indicator=s.map((t=>({name:t[e],max:a})))}this.config.tooltip=(0,i.r)(o,this.config.radar.indicator,this.ref),this.config.legend=(0,i.I)(o,this.config.series[0].data,this.ref),a?(0===this.config.series.length&&this.echarts?.clear&&this.echarts?.clear(),this.reloadEcharts(this.config)):(this.echarts?.clear&&this.echarts?.clear(),this.renderChart(this.config))}}updateChartConfig(e,a,t){const i=this.getChartConfig(e,t);i&&(this.config=i,this.reloadEcharts(i))}};U=(0,i._)([(0,n.A49)({type:"chart-radar",storeType:o.DtI.name})],U);let N=class extends A{config;chartUpdateDebounce;constructor(e,a){super(e,a),this.config=this.getChartConfig(),this.chartUpdateDebounce=s()((async(e,a)=>{const t=this.preProps||a||{};this.showLoading();const n=await(0,i.o)(e,t);this.hideLoading(),n&&n.data&&(this.curChartData=n.data,this.updateChartData(n.data,!0,e));const o=(0,i.p)(e,t);o&&this.updateChartConfig(this.curChartData,o,e),this.preProps=e}),300)}async componentDidMount(){super.componentDidMount();const e=(0,i.i)(this.props,this.props.data);this.preProps=e,this.showLoading();const{data:a}=await(0,i.h)(e);this.hideLoading(),a?(this.curChartData=a,this.updateChartData(a)):this.renderChart(this.config);const{dispatchEvent:t}=this.props;await t("init",a,this),this.echarts&&this.echarts.on("finished",(()=>{this.updateChartCanvasPadding(this.props.style),this.hideLoading()}))}componentDidUpdate(e){super.componentDidUpdate(e);const a=this.props.formStore?.data||this.props.data;if(this.preProps&&this.props.data!==e.data){const e=(0,i.k)(this.props,a);this.chartUpdateDebounce({...this.preProps,...e,data:a},this.preProps)}else{const e=(0,i.i)(this.props,a);this.chartUpdateDebounce(e,this.preProps)}}componentWillUnmount(){super.componentWillUnmount(),this.chartUpdateDebounce?.cancel()}getChartConfig(e,a){let t=a;a||(t=(0,i.i)(this.props,this.props.data));const{measures:n,dimensions:o,dataType:c,funnelOrient:r}=t,s=(0,i.q)(t,this.ref);let f=e;const h=n||[],p=o||[];let g=[];const m={tooltip:(0,i.r)(s,void 0,this.ref),title:(0,i.t)(s,this.ref),color:(0,i.s)(s),series:[],...(0,i.w)(d()(s,i.x))};if(!f)return m;if(1===c){b()(f)&&(f=[f]);const e=f.map((e=>p.map((a=>(0,i.n)(e[a.as])||"")).join("-"))),a=h[0];if(!a)return m;g=f.map(((t,i)=>({value:t[a.as],name:e[i]}))),m.series.push({data:g,type:"funnel",orient:r,label:(0,i.C)(s,a.formatter?{type:a.formatter,formatterToFixed:a.formatterToFixed,negative:!1}:void 0,this.ref),...(0,i.v)(s)})}else{const e=[];u()(f)&&(f=f[0]);for(const a in f){const t=l()(h,(e=>e.as===a));t&&e.push({value:f[a],name:(0,i.T)(t,a)})}g=e,m.series.push({data:g,type:"funnel",orient:r,label:{...(0,i.C)(s,void 0,this.ref)},...(0,i.v)(s)})}return m.legend=(0,i.I)(s,g,this.ref),m}updateChartData(e,a,t){const n=t||this.props,{measures:o,dimensions:c,dataType:d,funnelOrient:r}=n;let s=e;const f=o||[],h=c||[],p=(0,i.q)(n,this.ref);if(e){if(this.config.series=[],1===d){b()(s)&&(s=[s]);const e=s.map((e=>h.map((a=>(0,i.n)(e[a.as])||"")).join("-"))),a=f[0];a&&this.config.series.push({data:s.map(((t,i)=>({value:t[a.as],name:e[i]}))),type:"funnel",orient:r,label:(0,i.C)(p,a.formatter?{type:a.formatter,formatterToFixed:a.formatterToFixed,negative:!1}:void 0,this.ref),...(0,i.v)(p)})}else{u()(s)&&(s=s[0]);const e=[];for(const a in s){const t=l()(f,(e=>e.as===a));t&&e.push({value:s[a],name:(0,i.T)(t,a)})}this.config.series.push({data:e,type:"funnel",orient:r,label:{...(0,i.C)(p,void 0,this.ref)},...(0,i.v)(p)})}this.config.legend=(0,i.I)(p,this.config.series,this.ref),a?(0===this.config.series.length&&this.echarts?.clear&&this.echarts?.clear(),this.reloadEcharts(this.config)):(this.echarts?.clear&&this.echarts?.clear(),this.renderChart(this.config))}}updateChartConfig(e,a,t){const i=this.getChartConfig(e,t);if(i){const{dataType:e,roseType:t}=a||{};void 0===e&&void 0===t||!this.echarts?.clear||this.echarts?.clear(),this.config=i,void 0!==t?this.renderChart(i):this.reloadEcharts(i)}}};N=(0,i._)([(0,n.A49)({type:"chart-funnel",storeType:o.DtI.name})],N);let R=class extends A{config;chartUpdateDebounce;constructor(e,a){super(e,a),this.config=this.getChartConfig(),this.chartUpdateDebounce=s()((async(e,a)=>{const t=this.preProps||a||{};this.showLoading();const n=await(0,i.o)(e,t);this.hideLoading(),n&&n.data&&(this.curChartData=n.data,this.updateChartData(n.data,!0,e));const o=(0,i.p)(e,t);o&&this.updateChartConfig(this.curChartData,o,e),this.preProps=e}),300)}async componentDidMount(){super.componentDidMount();const e=(0,i.i)(this.props,this.props.data);this.preProps=e,this.showLoading();const{data:a}=await(0,i.h)(e);this.hideLoading(),a?(this.curChartData=a,this.updateChartData(a)):this.renderChart(this.config);const{dispatchEvent:t}=this.props;await t("init",a,this),this.echarts&&this.echarts.on("finished",(()=>{this.updateChartCanvasPadding(this.props.style),this.hideLoading()}))}componentDidUpdate(e){super.componentDidUpdate(e);const a=this.props.formStore?.data||this.props.data;if(this.preProps&&this.props.data!==e.data){const e=(0,i.k)(this.props,a);this.chartUpdateDebounce({...this.preProps,...e,data:a},this.preProps)}else{const e=(0,i.i)(this.props,a);this.chartUpdateDebounce(e,this.preProps)}}componentWillUnmount(){super.componentWillUnmount(),this.chartUpdateDebounce?.cancel()}doAction(e,a,t,i){const n=e?.actionType;"chartTypeChange"===n?this.setSchema({shape:i?.chartType}):super.doAction(e,a,t,i)}getChartConfig(e,a){let t=a;a||(t=(0,i.i)(this.props,this.props.data));const{measures:n,dimensions:o,color:c}=t,r=(0,i.q)(t,this.ref);let s=e;const f=n||[],h=o||[],l={tooltip:(0,i.r)(r),title:(0,i.t)(r,this.ref),textStyle:{fontFamily:"PingFangSC-Semibold",fontWeight:600,color:()=>{const e=(0,i.s)(r);return e[_()(Math.random()*e.length,0)]}},series:[],grid:(0,i.v)(r),...(0,i.w)(d()(r,i.x))};if(!s)return l;b()(s)&&(s=[s]);const p=s.map((e=>h.map((a=>(0,i.n)(e[a.as])||"")).join("-"))),u=f[0];return u?(l.series.push({data:s.map(((e,a)=>({value:e[u.as],name:p[a]}))),type:"wordCloud",...(0,i.a8)(r),rotationStep:5,drawOutOfBound:!1,shrinkToFit:!0,layoutAnimation:!0}),l):l}updateChartData(e,a,t){const n=t||this.props,{measures:o,dimensions:c}=n,d=(0,i.q)(n,this.ref);let r=e;const s=o||[],f=c||[];if(r){this.config.series=[],b()(r)&&(r=[r]);const e=r.map((e=>f.map((a=>(0,i.n)(e[a.as])||"")).join("-"))),t=s[0];t&&this.config.series.push({data:r.map(((a,i)=>({value:a[t.as],name:e[i]}))),type:"wordCloud",...(0,i.a8)(d),rotationStep:10,drawOutOfBound:!1,shrinkToFit:!1,layoutAnimation:!0}),a?(0===this.config.series.length&&this.echarts?.clear&&this.echarts?.clear(),this.reloadEcharts(this.config)):(this.echarts?.clear&&this.echarts?.clear(),this.renderChart(this.config))}}updateChartConfig(e,a,t){const i=this.getChartConfig(e,t);if(i){const{dataType:e,roseType:t}=a||{};void 0===e&&void 0===t||!this.echarts?.clear||this.echarts?.clear(),this.config=i,void 0!==t?this.renderChart(i):this.reloadEcharts(i)}}};R=(0,i._)([(0,n.A49)({type:"chart-word-cloud",storeType:o.DtI.name})],R);const j={"北京市":"北京","上海市":"上海","天津市":"天津","重庆市":"重庆","香港市":"香港","香港特别行政区":"香港","澳门市":"澳门","澳门特别行政区":"澳门","河北省":"河北","山西省":"山西","内蒙古省":"内蒙古","内蒙古自治区":"内蒙古","辽宁省":"辽宁","吉林省":"吉林","黑龙江省":"黑龙江","江苏省":"江苏","浙江省":"浙江","安徽省":"安徽","福建省":"福建","江西省":"江西","山东省":"山东","河南省":"河南","湖北省":"湖北","湖南省":"湖南","广东省":"广东","广西省":"广西","广西壮族自治区":"广西","海南省":"海南","四川省":"四川","贵州省":"贵州","云南省":"云南","西藏省":"西藏","西藏自治区":"西藏","陕西省":"陕西","甘肃省":"甘肃","青海省":"青海","宁夏省":"宁夏","宁夏回族自治区":"宁夏","新疆省":"新疆","新疆维吾尔自治区":"新疆","台湾省":"台湾","石家庄":"石家庄市","唐山":"唐山市","秦皇岛":"秦皇岛市","邯郸":"邯郸市","邢台":"邢台市","保定":"保定市","张家口":"张家口市","承德":"承德市","沧州":"沧州市","廊坊":"廊坊市","衡水":"衡水市","太原":"太原市","大同":"大同市","阳泉":"阳泉市","长治":"长治市","晋城":"晋城市","朔州":"朔州市","晋中":"晋中市","运城":"运城市","忻州":"忻州市","临汾":"临汾市","吕梁":"吕梁市","呼和浩特":"呼和浩特市","包头":"包头市","乌海":"乌海市","赤峰":"赤峰市","通辽":"通辽市","鄂尔多斯":"鄂尔多斯市","呼伦贝尔":"呼伦贝尔市","巴彦淖尔":"巴彦淖尔市","巴彦淖尔盟":"巴彦淖尔市","乌兰察布":"乌兰察布市","兴安市":"兴安盟","兴安":"兴安盟","锡林郭勒":"锡林郭勒盟","阿拉善":"阿拉善盟","阿拉善市":"阿拉善盟","沈阳":"沈阳市","大连":"大连市","鞍山":"鞍山市","抚顺":"抚顺市","本溪":"本溪市","丹东":"丹东市","锦州":"锦州市","营口":"营口市","阜新":"阜新市","辽阳":"辽阳市","盘锦":"盘锦市","铁岭":"铁岭市","朝阳":"朝阳市","葫芦岛":"葫芦岛市","长春":"长春市","四平":"四平市","辽源":"辽源市","通化":"通化市","白山":"白山市","松原":"松原市","白城":"白城市","延边朝鲜族":"延边朝鲜族自治州","延边":"延边朝鲜族自治州","延边市":"延边朝鲜族自治州","哈尔滨":"哈尔滨市","齐齐哈尔":"齐齐哈尔市","鸡西":"鸡西市","鹤岗":"鹤岗市","双鸭山":"双鸭山市","大庆":"大庆市","伊春":"伊春市","佳木斯":"佳木斯市","七台河":"七台河市","牡丹江":"牡丹江市","黑河":"黑河市","绥化":"绥化市","大兴安岭":"大兴安岭地区","大兴安岭市":"大兴安岭地区","南京":"南京市","无锡":"无锡市","徐州":"徐州市","常州":"常州市","苏州":"苏州市","南通":"南通市","连云港":"连云港市","淮安":"淮安市","盐城":"盐城市","扬州":"扬州市","镇江":"镇江市","泰州":"泰州市","宿迁":"宿迁市","杭州":"杭州市","宁波":"宁波市","温州":"温州市","嘉兴":"嘉兴市","湖州":"湖州市","绍兴":"绍兴市","金华":"金华市","衢州":"衢州市","舟山":"舟山市","台州":"台州市","丽水":"丽水市","合肥":"合肥市","芜湖":"芜湖市","蚌埠":"蚌埠市","淮南":"淮南市","马鞍山":"马鞍山市","淮北":"淮北市","铜陵":"铜陵市","安庆":"安庆市","黄山":"黄山市","滁州":"滁州市","阜阳":"阜阳市","宿州":"宿州市","六安":"六安市","亳州":"亳州市","池州":"池州市","宣城":"宣城市","福州":"福州市","厦门":"厦门市","莆田":"莆田市","三明":"三明市","泉州":"泉州市","漳州":"漳州市","南平":"南平市","龙岩":"龙岩市","宁德":"宁德市","南昌":"南昌市","景德镇":"景德镇市","萍乡":"萍乡市","九江":"九江市","新余":"新余市","鹰潭":"鹰潭市","赣州":"赣州市","吉安":"吉安市","宜春":"宜春市","抚州":"抚州市","上饶":"上饶市","济南":"济南市","青岛":"青岛市","淄博":"淄博市","枣庄":"枣庄市","东营":"东营市","烟台":"烟台市","潍坊":"潍坊市","济宁":"济宁市","泰安":"泰安市","威海":"威海市","日照":"日照市","临沂":"临沂市","德州":"德州市","聊城":"聊城市","滨州":"滨州市","菏泽":"菏泽市","郑州":"郑州市","开封":"开封市","洛阳":"洛阳市","平顶山":"平顶山市","安阳":"安阳市","鹤壁":"鹤壁市","新乡":"新乡市","焦作":"焦作市","濮阳":"濮阳市","许昌":"许昌市","漯河":"漯河市","三门峡":"三门峡市","南阳":"南阳市","商丘":"商丘市","信阳":"信阳市","周口":"周口市","驻马店":"驻马店市","济源":"济源市","武汉":"武汉市","黄石":"黄石市","十堰":"十堰市","宜昌":"宜昌市","襄阳":"襄阳市","鄂州":"鄂州市","荆门":"荆门市","孝感":"孝感市","荆州":"荆州市","黄冈":"黄冈市","咸宁":"咸宁市","随州":"随州市","恩施":"恩施土家族苗族自治州","恩施市":"恩施土家族苗族自治州","恩施土家族苗族":"恩施土家族苗族自治州","仙桃":"仙桃市","潜江":"潜江市","天门":"天门市","神农架":"神农架林区","长沙":"长沙市","株洲":"株洲市","湘潭":"湘潭市","衡阳":"衡阳市","邵阳":"邵阳市","岳阳":"岳阳市","常德":"常德市","张家界":"张家界市","益阳":"益阳市","郴州":"郴州市","永州":"永州市","怀化":"怀化市","娄底":"娄底市","湘西":"湘西土家族苗族自治州","湘西市":"湘西土家族苗族自治州","湘西土家族苗族":"湘西土家族苗族自治州","广州":"广州市","韶关":"韶关市","深圳":"深圳市","珠海":"珠海市","汕头":"汕头市","佛山":"佛山市","江门":"江门市","湛江":"湛江市","茂名":"茂名市","肇庆":"肇庆市","惠州":"惠州市","梅州":"梅州市","汕尾":"汕尾市","河源":"河源市","阳江":"阳江市","清远":"清远市","东莞":"东莞市","中山":"中山市","潮州":"潮州市","揭阳":"揭阳市","云浮":"云浮市","南宁":"南宁市","柳州":"柳州市","桂林":"桂林市","梧州":"梧州市","北海":"北海市","防城港":"防城港市","钦州":"钦州市","贵港":"贵港市","玉林":"玉林市","百色":"百色市","贺州":"贺州市","河池":"河池市","来宾":"来宾市","崇左":"崇左市","海口":"海口市","三亚":"三亚市","三沙":"三沙市","儋州":"儋州市","五指山":"五指山市","琼海":"琼海市","文昌":"文昌市","万宁":"万宁市","东方":"东方市","定安":"定安县","屯昌":"屯昌县","澄迈":"澄迈县","临高":"临高县","白沙黎族":"白沙黎族自治县","白沙":"白沙黎族自治县","昌江黎族":"昌江黎族自治县","昌江":"昌江黎族自治县","乐东黎族":"乐东黎族自治县","乐东":"乐东黎族自治县","陵水黎族":"陵水黎族自治县","陵水":"陵水黎族自治县","保亭黎族苗族":"保亭黎族苗族自治县","保亭":"保亭黎族苗族自治县","琼中黎族苗族":"琼中黎族苗族自治县","琼中":"琼中黎族苗族自治县","成都":"成都市","自贡":"自贡市","攀枝花":"攀枝花市","泸州":"泸州市","德阳":"德阳市","绵阳":"绵阳市","广元":"广元市","遂宁":"遂宁市","内江":"内江市","乐山":"乐山市","南充":"南充市","眉山":"眉山市","宜宾":"宜宾市","广安":"广安市","达州":"达州市","雅安":"雅安市","巴中":"巴中市","资阳":"资阳市","阿坝藏族羌族":"阿坝藏族羌族自治州","阿坝":"阿坝藏族羌族自治州","阿坝市":"阿坝藏族羌族自治州","甘孜藏族":"甘孜藏族自治州","甘孜":"甘孜藏族自治州","甘孜市":"甘孜藏族自治州","凉山彝族":"凉山彝族自治州","凉山":"凉山彝族自治州","凉山市":"凉山彝族自治州","贵阳":"贵阳市","六盘水":"六盘水市","遵义":"遵义市","安顺":"安顺市","毕节":"毕节市","铜仁":"铜仁市","黔西南布依族苗族":"黔西南布依族苗族自治州","黔西南":"黔西南布依族苗族自治州","黔东南苗族侗族":"黔东南苗族侗族自治州","黔东南":"黔东南苗族侗族自治州","黔南布依族苗族":"黔南布依族苗族自治州","黔南":"黔南布依族苗族自治州","昆明":"昆明市","曲靖":"曲靖市","玉溪":"玉溪市","保山":"保山市","昭通":"昭通市","丽江":"丽江市","普洱":"普洱市","临沧":"临沧市","楚雄彝族":"楚雄彝族自治州","楚雄":"楚雄彝族自治州","楚雄市":"楚雄彝族自治州","红河哈尼族彝族":"红河哈尼族彝族自治州","红河":"红河哈尼族彝族自治州","红河市":"红河哈尼族彝族自治州","文山壮族苗族":"文山壮族苗族自治州","文山":"文山壮族苗族自治州","文山市":"文山壮族苗族自治州","西双版纳傣族":"西双版纳傣族自治州","西双版纳":"西双版纳傣族自治州","西双版纳市":"西双版纳傣族自治州","大理白族":"大理白族自治州","大理":"大理白族自治州","大理市":"大理白族自治州","德宏傣族景颇族":"德宏傣族景颇族自治州","德宏":"德宏傣族景颇族自治州","德宏市":"德宏傣族景颇族自治州","怒江傈僳族":"怒江傈僳族自治州","怒江":"怒江傈僳族自治州","怒江市":"怒江傈僳族自治州","迪庆藏族":"迪庆藏族自治州","迪庆":"迪庆藏族自治州","迪庆市":"迪庆藏族自治州","拉萨":"拉萨市","日喀则":"日喀则市","昌都":"昌都市","林芝":"林芝市","山南":"山南市","那曲":"那曲市","那曲地区":"那曲市","阿里":"阿里地区","阿里市":"阿里地区","西安":"西安市","铜川":"铜川市","宝鸡":"宝鸡市","咸阳":"咸阳市","渭南":"渭南市","延安":"延安市","汉中":"汉中市","榆林":"榆林市","安康":"安康市","商洛":"商洛市","兰州":"兰州市","嘉峪关":"嘉峪关市","金昌":"金昌市","白银":"白银市","天水":"天水市","武威":"武威市","张掖":"张掖市","平凉":"平凉市","酒泉":"酒泉市","庆阳":"庆阳市","定西":"定西市","陇南":"陇南市","临夏回族":"临夏回族自治州","临夏":"临夏回族自治州","临夏市":"临夏回族自治州","甘南藏族":"甘南藏族自治州","甘南":"甘南藏族自治州","甘南市":"甘南藏族自治州","西宁":"西宁市","海东":"海东市","海北藏族":"海北藏族自治州","海北":"海北藏族自治州","海北市":"海北藏族自治州","黄南藏族":"黄南藏族自治州","黄南":"黄南藏族自治州","黄南市":"黄南藏族自治州","海南藏族":"海南藏族自治州","果洛藏族":"果洛藏族自治州","果洛":"果洛藏族自治州","果洛市":"果洛藏族自治州","玉树藏族":"玉树藏族自治州","玉树":"玉树藏族自治州","玉树市":"玉树藏族自治州","海西蒙古族藏族":"海西蒙古族藏族自治州","海西":"海西蒙古族藏族自治州","海西市":"海西蒙古族藏族自治州","银川":"银川市","石嘴山":"石嘴山市","吴忠":"吴忠市","固原":"固原市","中卫":"中卫市","乌鲁木齐":"乌鲁木齐市","克拉玛依":"克拉玛依市","吐鲁番":"吐鲁番市","哈密":"哈密市","昌吉回族":"昌吉回族自治州","昌吉":"昌吉回族自治州","昌吉市":"昌吉回族自治州","博尔塔拉蒙古":"博尔塔拉蒙古自治州","博尔塔拉":"博尔塔拉蒙古自治州","博尔塔拉市":"博尔塔拉蒙古自治州","巴音郭楞蒙古":"巴音郭楞蒙古自治州","巴音郭楞":"巴音郭楞蒙古自治州","巴音郭楞市":"巴音郭楞蒙古自治州","阿克苏":"阿克苏地区","阿克苏市":"阿克苏地区","克孜勒苏柯尔克孜":"克孜勒苏柯尔克孜自治州","克孜勒苏柯尔克孜市":"克孜勒苏柯尔克孜自治州","喀什":"喀什地区","喀什市":"喀什地区","和田":"和田地区","和田市":"和田地区","伊犁哈萨克":"伊犁哈萨克自治州","伊犁":"伊犁哈萨克自治州","伊犁市":"伊犁哈萨克自治州","塔城":"塔城地区","塔城市":"塔城地区","阿勒泰":"阿勒泰地区","阿勒泰市":"阿勒泰地区","石河子":"石河子市","阿拉尔":"阿拉尔市","图木舒克":"图木舒克市","五家渠":"五家渠市","北屯":"北屯市","铁门关":"铁门关市","双河":"双河市","可克达拉":"可克达拉市","昆玉":"昆玉市","胡杨河":"胡杨河市","高雄":"高雄市","屏东":"屏东县","台南":"台南市","新竹":"新竹县","宜兰":"宜兰县","基隆":"基隆市","苗栗":"苗栗县","台北":"台北市","新北":"新北市","桃园":"桃园市","彰化":"彰化县","嘉义":"嘉义市","花莲":"花莲县","南投":"南投县","台中":"台中市","云林":"云林县","台东":"台东县","澎湖":"澎湖县","金门":"金门县","连江":"连江县","花地玛堂":"花地玛堂区","花王堂":"花王堂区","望德堂":"望德堂区","大堂":"大堂区","风顺堂":"风顺堂区","嘉模堂":"嘉模堂区","路凼填海":"路凼填海区","圣方济各堂":"圣方济各堂区","东城":"东城区","西城":"西城区","朝阳":"朝阳区","丰台":"丰台区","石景山":"石景山区","海淀":"海淀区","门头沟":"门头沟区","房山":"房山区","通州":"通州区","顺义":"顺义区","昌平":"昌平区","大兴":"大兴区","怀柔":"怀柔区","平谷":"平谷区","密云":"密云区","延庆":"延庆区","万州":"万州区","涪陵":"涪陵区","渝中":"渝中区","大渡口":"大渡口区","江北":"江北区","沙坪坝":"沙坪坝区","九龙坡":"九龙坡区","南岸":"南岸区","北碚":"北碚区","綦江":"綦江区","大足":"大足区","渝北":"渝北区","巴南":"巴南区","黔江":"黔江区","长寿":"长寿区","江津":"江津区","合川":"合川区","永川":"永川区","南川":"南川区","璧山":"璧山区","铜梁":"铜梁区","潼南":"潼南区","荣昌":"荣昌区","开州":"开州区","梁平":"梁平区","武隆":"武隆区","城口":"城口县","丰都":"丰都县","垫江":"垫江县","云阳":"云阳县","奉节":"奉节县","巫山":"巫山县","巫溪":"巫溪县","石柱土家族":"石柱土家族自治县","秀山土家族苗族":"秀山土家族苗族自治县","酉阳土家族苗族":"酉阳土家族苗族自治县","彭水苗族土家族":"彭水苗族土家族自治县","黄浦":"黄浦区","徐汇":"徐汇区","长宁":"长宁县","静安":"静安区","普陀":"普陀区","虹口":"虹口区","杨浦":"杨浦区","闵行":"闵行区","宝山":"宝山区","嘉定":"嘉定区","浦东新":"浦东新区","金山":"金山区","松江":"松江区","青浦":"青浦区","奉贤":"奉贤区","崇明":"崇明区","和平":"和平县","河东":"河东区","河西":"河西区","南开":"南开区","红桥":"红桥区","东丽":"东丽区","西青":"西青区","津南":"津南区","北辰":"北辰区","武清":"武清区","宝坻":"宝坻区","滨海新":"滨海新区","宁河":"宁河区","静海":"静海区","蓟州":"蓟州区","中西":"中西区","湾仔":"湾仔区","油尖旺":"油尖旺区","深水埗":"深水埗区","九龙城":"九龙城区","黄大仙":"黄大仙区","观塘":"观塘区","荃湾":"荃湾区","屯门":"屯门区","元朗":"元朗区","大埔":"大埔县","西贡":"西贡区","沙田":"沙田区","葵青":"葵青区","离岛":"离岛区","长安":"长安区","桥西":"桥西区","新华":"新华区","井陉矿":"井陉矿区","裕华":"裕华区","藁城":"藁城区","鹿泉":"鹿泉区","栾城":"栾城区","井陉":"井陉县","正定":"正定县","行唐":"行唐县","灵寿":"灵寿县","高邑":"高邑县","深泽":"深泽县","赞皇":"赞皇县","无极":"无极县","平山":"平山区","元氏":"元氏县","辛集":"辛集市","晋州":"晋州市","新乐":"新乐市","路南":"路南区","路北":"路北区","古冶":"古冶区","开平":"开平市","丰南":"丰南区","丰润":"丰润区","曹妃甸":"曹妃甸区","滦南":"滦南县","乐亭":"乐亭县","迁西":"迁西县","玉田":"玉田县","遵化":"遵化市","迁安":"迁安市","滦州":"滦州市","海港":"海港区","山海关":"山海关区","北戴河":"北戴河区","抚宁":"抚宁区","青龙满族":"青龙满族自治县","昌黎":"昌黎县","卢龙":"卢龙县","邯山":"邯山区","丛台":"丛台区","复兴":"复兴区","峰峰":"峰峰矿区","肥乡":"肥乡区","永年":"永年区","临漳":"临漳县","成安":"成安县","大名":"大名县","鸡泽":"鸡泽县","广平":"广平县","馆陶":"馆陶县","曲周":"曲周县","武安":"武安市","襄都":"襄都区","信都":"信都区","任泽":"任泽区","南和":"南和区","临城":"临城县","内丘":"内丘县","柏乡":"柏乡县","隆尧":"隆尧县","宁晋":"宁晋县","巨鹿":"巨鹿县","新河":"新河县","广宗":"广宗县","平乡":"平乡县","清河":"清河区","临西":"临西县","南宫":"南宫市","沙河":"沙河市","竞秀":"竞秀区","莲池":"莲池区","满城":"满城区","清苑":"清苑区","徐水":"徐水区","涞水":"涞水县","阜平":"阜平县","定兴":"定兴县","高阳":"高阳县","容城":"容城县","涞源":"涞源县","望都":"望都县","安新":"安新县","曲阳":"曲阳县","顺平":"顺平县","博野":"博野县","涿州":"涿州市","定州":"定州市","安国":"安国市","高碑店":"高碑店市","桥东":"桥东区","宣化":"宣化区","下花园":"下花园区","万全":"万全区","崇礼":"崇礼区","张北":"张北县","康保":"康保县","沽源":"沽源县","尚义":"尚义县","阳原":"阳原县","怀安":"怀安县","怀来":"怀来县","涿鹿":"涿鹿县","赤城":"赤城县","双桥":"双桥区","双滦":"双滦区","鹰手营子矿":"鹰手营子矿区","承德":"承德县","兴隆":"兴隆县","滦平":"滦平县","隆化":"隆化县","丰宁满族":"丰宁满族自治县","宽城满族":"宽城满族自治县","围场满族蒙古族":"围场满族蒙古族自治县","平泉":"平泉市","运河":"运河区","东光":"东光县","海兴":"海兴县","盐山":"盐山县","肃宁":"肃宁县","南皮":"南皮县","吴桥":"吴桥县","孟村回族":"孟村回族自治县","泊头":"泊头市","任丘":"任丘市","黄骅":"黄骅市","河间":"河间市","安次":"安次区","广阳":"广阳区","固安":"固安县","永清":"永清县","香河":"香河县","大城":"大城县","文安":"文安县","大厂回族":"大厂回族自治县","霸州":"霸州市","三河":"三河市","桃城":"桃城区","冀州":"冀州区","枣强":"枣强县","武邑":"武邑县","武强":"武强县","饶阳":"饶阳县","安平":"安平县","故城":"故城县","阜城":"阜城县","深州":"深州市","小店":"小店区","迎泽":"迎泽区","杏花岭":"杏花岭区","尖草坪":"尖草坪区","万柏林":"万柏林区","万柏":"万柏林区","晋源":"晋源区","清徐":"清徐县","阳曲":"阳曲县","娄烦":"娄烦县","古交":"古交市","新荣":"新荣区","平城":"平城区","云冈":"云冈区","云州":"云州区","阳高":"阳高县","天镇":"天镇县","广灵":"广灵县","灵丘":"灵丘县","浑源":"浑源县","左云":"左云县","平定":"平定县","潞州":"潞州区","上党":"上党区","屯留":"屯留区","潞城":"潞城区","襄垣":"襄垣县","平顺":"平顺县","黎城":"黎城县","壶关":"壶关县","长子":"长子县","武乡":"武乡县","沁源":"沁源县","沁水":"沁水县","阳城":"阳城县","陵川":"陵川县","泽州":"泽州县","高平":"高平市","朔城":"朔城区","平鲁":"平鲁区","山阴":"山阴县","右玉":"右玉县","怀仁":"怀仁市","榆次":"榆次区","太谷":"太谷区","榆社":"榆社县","左权":"左权县","和顺":"和顺县","昔阳":"昔阳县","寿阳":"寿阳县","平遥":"平遥县","灵石":"灵石县","介休":"介休市","盐湖":"盐湖区","临猗":"临猗县","万荣":"万荣县","闻喜":"闻喜县","稷山":"稷山县","新绛":"新绛县","垣曲":"垣曲县","平陆":"平陆县","芮城":"芮城县","永济":"永济市","河津":"河津市","忻府":"忻府区","定襄":"定襄县","五台":"五台县","繁峙":"繁峙县","宁武":"宁武县","静乐":"静乐县","神池":"神池县","五寨":"五寨县","岢岚":"岢岚县","河曲":"河曲县","保德":"保德县","偏关":"偏关县","原平":"原平市","尧都":"尧都区","曲沃":"曲沃县","翼城":"翼城县","襄汾":"襄汾县","洪洞":"洪洞县","安泽":"安泽县","浮山":"浮山县","乡宁":"乡宁县","大宁":"大宁县","永和":"永和县","汾西":"汾西县","侯马":"侯马市","霍州":"霍州市","离石":"离石区","文水":"文水县","交城":"交城县","柳林":"柳林县","石楼":"石楼县","方山":"方山县","中阳":"中阳县","交口":"交口县","孝义":"孝义市","汾阳":"汾阳市","新城":"新城区","回民":"回民区","玉泉":"玉泉区","赛罕":"赛罕区","托克托":"托克托县","和林格尔":"和林格尔县","清水河":"清水河县","武川":"武川县","东河":"东河区","昆都仑":"昆都仑区","青山":"青山区","石拐":"石拐区","白云鄂博矿":"白云鄂博矿区","九原":"九原区","固阳":"固阳县","海勃湾":"海勃湾区","乌达":"乌达区","红山":"红山区","元宝山":"元宝山区","松山":"松山区","林西":"林西县","宁城":"宁城县","科尔沁":"科尔沁区","开鲁":"开鲁县","霍林郭勒":"霍林郭勒市","东胜":"东胜区","康巴什":"康巴什区","海拉尔":"海拉尔区","扎赉诺尔":"扎赉诺尔区","满洲里":"满洲里市","牙克石":"牙克石市","扎兰屯":"扎兰屯市","额尔古纳":"额尔古纳市","根河":"根河市","临河":"临河区","五原":"五原县","磴口":"磴口县","集宁":"集宁区","卓资":"卓资县","化德":"化德县","商都":"商都县","兴和":"兴和县","凉城":"凉城县","丰镇":"丰镇市","乌兰浩特":"乌兰浩特市","阿尔山":"阿尔山市","突泉":"突泉县","二连浩特":"二连浩特市","锡林浩特":"锡林浩特市","多伦":"多伦县","沈河":"沈河区","大东":"大东区","皇姑":"皇姑区","铁西":"铁西区","苏家屯":"苏家屯区","浑南":"浑南区","沈北新":"沈北新区","于洪":"于洪区","辽中":"辽中区","康平":"康平县","法库":"法库县","新民":"新民市","中山":"中山市","西岗":"西岗区","沙河口":"沙河口区","甘井子":"甘井子区","旅顺口":"旅顺口区","金州":"金州区","普兰店":"普兰店区","长海":"长海县","瓦房店":"瓦房店市","庄河":"庄河市","铁东":"铁东区","立山":"立山区","千山":"千山区","台安":"台安县","岫岩满族":"岫岩满族自治县","海城":"海城区","新抚":"新抚区","东洲":"东洲区","望花":"望花区","顺城":"顺城区","抚顺":"抚顺县","新宾满族":"新宾满族自治县","清原满族":"清原满族自治县","溪湖":"溪湖区","明山":"明山区","南芬":"南芬区","本溪满族":"本溪满族自治县","桓仁满族":"桓仁满族自治县","元宝":"元宝区","振兴":"振兴区","振安":"振安区","宽甸满族":"宽甸满族自治县","东港":"东港区","凤城":"凤城市","古塔":"古塔区","凌河":"凌河区","太和":"太和县","黑山":"黑山县","凌海":"凌海市","北镇":"北镇市","站前":"站前区","西市":"西市区","鲅鱼圈":"鲅鱼圈区","老边":"老边区","盖州":"盖州市","大石桥":"大石桥市","海州":"海州区","新邱":"新邱区","太平":"太平区","清河门":"清河门区","细河":"细河区","阜新蒙古族":"阜新蒙古族自治县","彰武":"彰武县","白塔":"白塔区","文圣":"文圣区","宏伟":"宏伟区","弓长岭":"弓长岭区","太子河":"太子河区","辽阳":"辽阳县","灯塔":"灯塔市","双台子":"双台子区","兴隆台":"兴隆台区","大洼":"大洼区","盘山":"盘山县","银州":"银州区","铁岭":"铁岭县","西丰":"西丰县","昌图":"昌图县","调兵山":"调兵山市","开原":"开原市","双塔":"双塔区","龙城":"龙城区","建平":"建平县","喀喇沁左翼蒙古族":"喀喇沁左翼蒙古族自治县","北票":"北票市","凌源":"凌源市","连山":"连山区","龙港":"龙港市","南票":"南票区","绥中":"绥中县","建昌":"建昌县","兴城":"兴城市","南关":"南关区","宽城":"宽城区","二道":"二道区","绿园":"绿园区","双阳":"双阳区","九台":"九台区","农安":"农安县","榆树":"榆树市","德惠":"德惠市","公主岭":"公主岭市","昌邑":"昌邑市","龙潭":"龙潭区","船营":"船营区","丰满":"丰满区","永吉":"永吉县","蛟河":"蛟河市","桦甸":"桦甸市","舒兰":"舒兰市","磐石":"磐石市","梨树":"梨树区","伊通满族":"伊通满族自治县","双辽":"双辽市","龙山":"龙山县","西安":"西安区","东丰":"东丰县","东辽":"东辽县","东昌":"东昌区","二道江":"二道江区","通化":"通化县","辉南":"辉南县","柳河":"柳河县","梅河口":"梅河口市","集安":"集安市","浑江":"浑江区","江源":"江源区","抚松":"抚松县","靖宇":"靖宇县","长白朝鲜族":"长白朝鲜族自治县","临江":"临江市","宁江":"宁江区","前郭尔罗斯蒙古族":"前郭尔罗斯蒙古族自治县","长岭":"长岭县","乾安":"乾安县","扶余":"扶余市","洮北":"洮北区","镇赉":"镇赉县","通榆":"通榆县","洮南":"洮南市","大安":"大安区","延吉":"延吉市","图们":"图们市","敦化":"敦化市","珲春":"珲春市","龙井":"龙井市","和龙":"和龙市","汪清":"汪清县","安图":"安图县","道里":"道里区","南岗":"南岗区","道外":"道外区","平房":"平房区","松北":"松北区","香坊":"香坊区","呼兰":"呼兰区","阿城":"阿城区","双城":"双城区","依兰":"依兰县","方正":"方正县","巴彦":"巴彦县","木兰":"木兰县","通河":"通河县","延寿":"延寿县","尚志":"尚志市","五常":"五常市","龙沙":"龙沙区","建华":"建华区","铁锋":"铁锋区","昂昂溪":"昂昂溪区","富拉尔基":"富拉尔基区","碾子山":"碾子山区","梅里斯达斡尔族":"梅里斯达斡尔族区","龙江":"龙江县","依安":"依安县","泰来":"泰来县","甘南":"甘南县","富裕":"富裕县","克山":"克山县","克东":"克东县","拜泉":"拜泉县","讷河":"讷河市","鸡冠":"鸡冠区","恒山":"恒山区","滴道":"滴道区","城子河":"城子河区","麻山":"麻山区","鸡东":"鸡东县","虎林":"虎林市","密山":"密山市","向阳":"向阳区","工农":"工农区","南山":"南山区","兴安":"兴安县","东山":"东山县","兴山":"兴山县","萝北":"萝北县","绥滨":"绥滨县","尖山":"尖山区","岭东":"岭东区","四方台":"四方台区","集贤":"集贤县","友谊":"友谊县","宝清":"宝清县","饶河":"饶河县","萨尔图":"萨尔图区","龙凤":"龙凤区","让胡路":"让胡路区","红岗":"红岗区","大同":"大同区","肇州":"肇州县","肇源":"肇源县","林甸":"林甸县","杜尔伯特蒙古族":"杜尔伯特蒙古族自治县","伊美":"伊美区","乌翠":"乌翠区","友好":"友好区","嘉荫":"嘉荫县","汤旺":"汤旺县","丰林":"丰林县","大箐山":"大箐山县","南岔":"南岔县","金林":"金林区","铁力":"铁力市","前进":"前进区","东风":"东风区","桦南":"桦南县","桦川":"桦川县","汤原":"汤原县","同江":"同江市","富锦":"富锦市","抚远":"抚远市","新兴":"新兴县","桃山":"桃山区","茄子河":"茄子河区","勃利":"勃利县","东安":"东安县","阳明":"阳明区","爱民":"爱民区","林口":"林口县","绥芬河":"绥芬河市","海林":"海林市","宁安":"宁安市","穆棱":"穆棱市","东宁":"东宁市","爱辉":"爱辉区","逊克":"逊克县","孙吴":"孙吴县","北安":"北安市","五大连池":"五大连池市","嫩江":"嫩江市","北林":"北林区","望奎":"望奎县","兰西":"兰西县","青冈":"青冈县","庆安":"庆安县","明水":"明水县","绥棱":"绥棱县","安达":"安达市","肇东":"肇东市","海伦":"海伦市","漠河":"漠河市","加格达奇":"加格达奇区","呼玛":"呼玛县","塔河":"塔河县","玄武":"玄武区","秦淮":"秦淮区","建邺":"建邺区","鼓楼":"鼓楼区","浦口":"浦口区","栖霞":"栖霞市","雨花台":"雨花台区","江宁":"江宁区","六合":"六合区","溧水":"溧水区","高淳":"高淳区","锡山":"锡山区","惠山":"惠山区","滨湖":"滨湖区","梁溪":"梁溪区","新吴":"新吴区","江阴":"江阴市","宜兴":"宜兴市","云龙":"云龙县","贾汪":"贾汪区","泉山":"泉山区","铜山":"铜山区","睢宁":"睢宁县","新沂":"新沂市","邳州":"邳州市","天宁":"天宁区","钟楼":"钟楼区","新北":"新北区","武进":"武进区","金坛":"金坛区","溧阳":"溧阳市","虎丘":"虎丘区","吴中":"吴中区","相城":"相城区","姑苏":"姑苏区","吴江":"吴江区","常熟":"常熟市","张家港":"张家港市","昆山":"昆山市","太仓":"太仓市","崇川":"崇川区","如东":"如东县","启东":"启东市","如皋":"如皋市","海门":"海门区","海安":"海安市","连云":"连云区","赣榆":"赣榆区","东海":"东海县","灌云":"灌云县","灌南":"灌南县","淮安":"淮安区","淮阴":"淮阴区","清江浦":"清江浦区","洪泽":"洪泽区","涟水":"涟水县","盱眙":"盱眙县","金湖":"金湖县","亭湖":"亭湖区","盐都":"盐都区","大丰":"大丰区","响水":"响水县","滨海":"滨海县","阜宁":"阜宁县","射阳":"射阳县","建湖":"建湖县","东台":"东台市","广陵":"广陵区","邗江":"邗江区","江都":"江都区","宝应":"宝应县","仪征":"仪征市","高邮":"高邮市","京口":"京口区","润州":"润州区","丹徒":"丹徒区","丹阳":"丹阳市","扬中":"扬中市","句容":"句容市","海陵":"海陵区","高港":"高港区","姜堰":"姜堰区","兴化":"兴化市","靖江":"靖江市","泰兴":"泰兴市","宿城":"宿城区","宿豫":"宿豫区","沭阳":"沭阳县","泗阳":"泗阳县","泗洪":"泗洪县","上城":"上城区","拱墅":"拱墅区","西湖":"西湖区","滨江":"滨江区","萧山":"萧山区","余杭":"余杭区","富阳":"富阳区","临安":"临安区","钱塘":"钱塘区","临平":"临平区","桐庐":"桐庐县","淳安":"淳安县","建德":"建德市","海曙":"海曙区","北仑":"北仑区","镇海":"镇海区","鄞州":"鄞州区","奉化":"奉化区","象山":"象山区","宁海":"宁海县","余姚":"余姚市","慈溪":"慈溪市","鹿城":"鹿城区","龙湾":"龙湾区","瓯海":"瓯海区","洞头":"洞头区","永嘉":"永嘉县","平阳":"平阳县","苍南":"苍南县","文成":"文成县","泰顺":"泰顺县","瑞安":"瑞安市","乐清":"乐清市","南湖":"南湖区","秀洲":"秀洲区","嘉善":"嘉善县","海盐":"海盐县","海宁":"海宁市","平湖":"平湖市","桐乡":"桐乡市","吴兴":"吴兴区","南浔":"南浔区","德清":"德清县","长兴":"长兴县","安吉":"安吉县","越城":"越城区","柯桥":"柯桥区","上虞":"上虞区","新昌":"新昌县","诸暨":"诸暨市","嵊州":"嵊州市","婺城":"婺城区","金东":"金东区","武义":"武义县","浦江":"浦江县","磐安":"磐安县","兰溪":"兰溪市","义乌":"义乌市","东阳":"东阳市","永康":"永康市","柯城":"柯城区","衢江":"衢江区","常山":"常山县","开化":"开化县","龙游":"龙游县","江山":"江山市","定海":"定海区","岱山":"岱山县","嵊泗":"嵊泗县","椒江":"椒江区","黄岩":"黄岩区","路桥":"路桥区","三门":"三门县","天台":"天台县","仙居":"仙居县","温岭":"温岭市","临海":"临海市","玉环":"玉环市","莲都":"莲都区","青田":"青田县","缙云":"缙云县","遂昌":"遂昌县","松阳":"松阳县","云和":"云和县","庆元":"庆元县","景宁畲族":"景宁畲族自治县","龙泉":"龙泉市","瑶海":"瑶海区","庐阳":"庐阳区","蜀山":"蜀山区","包河":"包河区","长丰":"长丰县","肥东":"肥东县","肥西":"肥西县","庐江":"庐江县","巢湖":"巢湖市","镜湖":"镜湖区","鸠江":"鸠江区","弋江":"弋江区","湾沚":"湾沚区","繁昌":"繁昌区","南陵":"南陵县","无为":"无为市","龙子湖":"龙子湖区","蚌山":"蚌山区","禹会":"禹会区","淮上":"淮上区","怀远":"怀远县","五河":"五河县","固镇":"固镇县","大通":"大通区","田家庵":"田家庵区","谢家集":"谢家集区","八公山":"八公山区","潘集":"潘集区","凤台":"凤台县","花山":"花山区","雨山":"雨山区","博望":"博望区","当涂":"当涂县","含山":"含山县","杜集":"杜集区","相山":"相山区","烈山":"烈山区","濉溪":"濉溪县","铜官":"铜官区","义安":"义安区","枞阳":"枞阳县","迎江":"迎江区","大观":"大观区","宜秀":"宜秀区","怀宁":"怀宁县","太湖":"太湖县","宿松":"宿松县","望江":"望江县","岳西":"岳西县","桐城":"桐城市","潜山":"潜山市","屯溪":"屯溪区","黄山":"黄山区","徽州":"徽州区","休宁":"休宁县","祁门":"祁门县","琅琊":"琅琊区","南谯":"南谯区","来安":"来安县","全椒":"全椒县","定远":"定远县","凤阳":"凤阳县","天长":"天长市","明光":"明光市","颍州":"颍州区","颍东":"颍东区","颍泉":"颍泉区","临泉":"临泉县","阜南":"阜南县","颍上":"颍上县","界首":"界首市","埇桥":"埇桥区","砀山":"砀山县","灵璧":"灵璧县","金安":"金安区","裕安":"裕安区","叶集":"叶集区","霍邱":"霍邱县","舒城":"舒城县","金寨":"金寨县","霍山":"霍山县","谯城":"谯城区","涡阳":"涡阳县","蒙城":"蒙城县","利辛":"利辛县","贵池":"贵池区","东至":"东至县","石台":"石台县","青阳":"青阳县","宣州":"宣州区","郎溪":"郎溪县","绩溪":"绩溪县","旌德":"旌德县","宁国":"宁国市","广德":"广德市","台江":"台江县","仓山":"仓山区","马尾":"马尾区","晋安":"晋安区","长乐":"长乐区","闽侯":"闽侯县","连江":"连江县","罗源":"罗源县","闽清":"闽清县","永泰":"永泰县","平潭":"平潭县","福清":"福清市","思明":"思明区","海沧":"海沧区","湖里":"湖里区","集美":"集美区","同安":"同安区","翔安":"翔安区","城厢":"城厢区","涵江":"涵江区","荔城":"荔城区","秀屿":"秀屿区","仙游":"仙游县","三元":"三元区","明溪":"明溪县","清流":"清流县","宁化":"宁化县","大田":"大田县","尤溪":"尤溪县","沙县":"沙县区","将乐":"将乐县","泰宁":"泰宁县","建宁":"建宁县","永安":"永安市","鲤城":"鲤城区","丰泽":"丰泽区","洛江":"洛江区","泉港":"泉港区","惠安":"惠安县","安溪":"安溪县","永春":"永春县","德化":"德化县","金门":"金门县","石狮":"石狮市","晋江":"晋江市","南安":"南安市","芗城":"芗城区","龙文":"龙文区","云霄":"云霄县","漳浦":"漳浦县","诏安":"诏安县","长泰":"长泰区","南靖":"南靖县","平和":"平和县","华安":"华安县","龙海":"龙海区","延平":"延平区","建阳":"建阳区","顺昌":"顺昌县","浦城":"浦城县","光泽":"光泽县","松溪":"松溪县","政和":"政和县","邵武":"邵武市","武夷山":"武夷山市","建瓯":"建瓯市","新罗":"新罗区","永定":"永定区","长汀":"长汀县","上杭":"上杭县","武平":"武平县","连城":"连城县","漳平":"漳平市","蕉城":"蕉城区","霞浦":"霞浦县","古田":"古田县","屏南":"屏南县","寿宁":"寿宁县","周宁":"周宁县","柘荣":"柘荣县","福安":"福安市","福鼎":"福鼎市","东湖":"东湖区","青云谱":"青云谱区","青山湖":"青山湖区","新建":"新建区","红谷滩":"红谷滩区","南昌":"南昌县","安义":"安义县","进贤":"进贤县","昌江":"昌江区","珠山":"珠山区","浮梁":"浮梁县","乐平":"乐平市","安源":"安源区","湘东":"湘东区","莲花":"莲花县","上栗":"上栗县","芦溪":"芦溪县","濂溪":"濂溪区","浔阳":"浔阳区","柴桑":"柴桑区","武宁":"武宁县","修水":"修水县","永修":"永修县","德安":"德安县","都昌":"都昌县","湖口":"湖口县","彭泽":"彭泽县","瑞昌":"瑞昌市","共青城":"共青城市","庐山":"庐山市","渝水":"渝水区","分宜":"分宜县","月湖":"月湖区","余江":"余江区","贵溪":"贵溪市","章贡":"章贡区","南康":"南康区","赣县":"赣县区","信丰":"信丰县","大余":"大余县","上犹":"上犹县","崇义":"崇义县","安远":"安远县","定南":"定南县","全南":"全南县","宁都":"宁都县","于都":"于都县","兴国":"兴国县","会昌":"会昌县","寻乌":"寻乌县","石城":"石城县","瑞金":"瑞金市","龙南":"龙南市","吉州":"吉州区","青原":"青原区","吉安":"吉安县","吉水":"吉水县","峡江":"峡江县","新干":"新干县","永丰":"永丰县","泰和":"泰和县","遂川":"遂川县","万安":"万安县","安福":"安福县","永新":"永新县","井冈山":"井冈山市","袁州":"袁州区","奉新":"奉新县","万载":"万载县","上高":"上高县","宜丰":"宜丰县","靖安":"靖安县","铜鼓":"铜鼓县","丰城":"丰城市","樟树":"樟树市","高安":"高安市","临川":"临川区","东乡":"东乡区","南城":"南城县","黎川":"黎川县","南丰":"南丰县","崇仁":"崇仁县","乐安":"乐安县","宜黄":"宜黄县","金溪":"金溪县","资溪":"资溪县","广昌":"广昌县","信州":"信州区","广丰":"广丰区","广信":"广信区","玉山":"玉山县","铅山":"铅山县","横峰":"横峰县","弋阳":"弋阳县","余干":"余干县","鄱阳":"鄱阳县","万年":"万年县","婺源":"婺源县","德兴":"德兴市","历下":"历下区","市中":"市中区","槐荫":"槐荫区","天桥":"天桥区","历城":"历城区","长清":"长清区","章丘":"章丘区","济阳":"济阳区","莱芜":"莱芜区","钢城":"钢城区","平阴":"平阴县","商河":"商河县","市南":"市南区","市北":"市北区","黄岛":"黄岛区","崂山":"崂山区","李沧":"李沧区","城阳":"城阳区","即墨":"即墨区","胶州":"胶州市","平度":"平度市","莱西":"莱西市","淄川":"淄川区","张店":"张店区","博山":"博山区","临淄":"临淄区","周村":"周村区","桓台":"桓台县","高青":"高青县","沂源":"沂源县","薛城":"薛城区","峄城":"峄城区","台儿庄":"台儿庄区","山亭":"山亭区","滕州":"滕州市","东营":"东营区","河口":"河口区","垦利":"垦利区","利津":"利津县","广饶":"广饶县","芝罘":"芝罘区","福山":"福山区","牟平":"牟平区","莱山":"莱山区","蓬莱":"蓬莱区","龙口":"龙口市","莱阳":"莱阳市","莱州":"莱州市","招远":"招远市","海阳":"海阳市","潍城":"潍城区","寒亭":"寒亭区","坊子":"坊子区","奎文":"奎文区","临朐":"临朐县","昌乐":"昌乐县","青州":"青州市","诸城":"诸城市","寿光":"寿光市","安丘":"安丘市","高密":"高密市","任城":"任城区","兖州":"兖州区","微山":"微山县","鱼台":"鱼台县","金乡":"金乡县","嘉祥":"嘉祥县","汶上":"汶上县","泗水":"泗水县","梁山":"梁山县","曲阜":"曲阜市","邹城":"邹城市","泰山":"泰山区","岱岳":"岱岳区","宁阳":"宁阳县","东平":"东平县","新泰":"新泰市","肥城":"肥城市","环翠":"环翠区","文登":"文登区","荣成":"荣成市","乳山":"乳山市","岚山":"岚山区","五莲":"五莲县","莒":"莒县","兰山":"兰山区","罗庄":"罗庄区","沂南":"沂南县","郯城":"郯城县","沂水":"沂水县","兰陵":"兰陵县","平邑":"平邑县","莒南":"莒南县","蒙阴":"蒙阴县","临沭":"临沭县","德城":"德城区","陵城":"陵城区","宁津":"宁津县","庆云":"庆云县","临邑":"临邑县","齐河":"齐河县","平原":"平原县","夏津":"夏津县","武城":"武城县","乐陵":"乐陵市","禹城":"禹城市","东昌府":"东昌府区","茌平":"茌平区","阳谷":"阳谷县","东阿":"东阿县","高唐":"高唐县","临清":"临清市","滨城":"滨城区","沾化":"沾化区","惠民":"惠民县","阳信":"阳信县","无棣":"无棣县","博兴":"博兴县","邹平":"邹平市","牡丹":"牡丹区","定陶":"定陶区","成武":"成武县","巨野":"巨野县","郓城":"郓城县","鄄城":"鄄城县","东明":"东明县","中原":"中原区","二七":"二七区","管城回族":"管城回族区","金水":"金水区","上街":"上街区","惠济":"惠济区","中牟":"中牟县","巩义":"巩义市","荥阳":"荥阳市","新密":"新密市","新郑":"新郑市","登封":"登封市","龙亭":"龙亭区","顺河回族":"顺河回族区","禹王台":"禹王台区","祥符":"祥符区","通许":"通许县","尉氏":"尉氏县","兰考":"兰考县","老城":"老城区","西工":"西工区","瀍河回族":"瀍河回族区","涧西":"涧西区","孟津":"孟津区","洛龙":"洛龙区","新安":"新安县","栾川":"栾川县","汝阳":"汝阳县","宜阳":"宜阳县","洛宁":"洛宁县","伊川":"伊川县","偃师":"偃师区","卫东":"卫东区","石龙":"石龙区","湛河":"湛河区","宝丰":"宝丰县","鲁山":"鲁山县","舞钢":"舞钢市","汝州":"汝州市","文峰":"文峰区","北关":"北关区","殷都":"殷都区","龙安":"龙安区","安阳":"安阳县","汤阴":"汤阴县","内黄":"内黄县","林州":"林州市","鹤山":"鹤山市","山城":"山城区","淇滨":"淇滨区","红旗":"红旗区","卫滨":"卫滨区","凤泉":"凤泉区","牧野":"牧野区","新乡":"新乡县","获嘉":"获嘉县","原阳":"原阳县","延津":"延津县","封丘":"封丘县","卫辉":"卫辉市","辉县":"辉县市","长垣":"长垣市","解放":"解放区","中站":"中站区","马村":"马村区","山阳":"山阳县","修武":"修武县","博爱":"博爱县","武陟":"武陟县","沁阳":"沁阳市","孟州":"孟州市","华龙":"华龙区","清丰":"清丰县","南乐":"南乐县","台前":"台前县","濮阳":"濮阳县","魏都":"魏都区","建安":"建安区","鄢陵":"鄢陵县","襄城":"襄城区","禹州":"禹州市","长葛":"长葛市","源汇":"源汇区","郾城":"郾城区","召陵":"召陵区","舞阳":"舞阳县","临颍":"临颍县","湖滨":"湖滨区","陕州":"陕州区","渑池":"渑池县","卢氏":"卢氏县","义马":"义马市","灵宝":"灵宝市","宛城":"宛城区","卧龙":"卧龙区","南召":"南召县","方城":"方城县","西峡":"西峡县","镇平":"镇平县","内乡":"内乡县","淅川":"淅川县","社旗":"社旗县","唐河":"唐河县","新野":"新野县","桐柏":"桐柏县","邓州":"邓州市","梁园":"梁园区","睢阳":"睢阳区","民权":"民权县","宁陵":"宁陵县","柘城":"柘城县","虞城":"虞城县","夏邑":"夏邑县","永城":"永城市","浉河":"浉河区","平桥":"平桥区","罗山":"罗山县","光山":"光山县","商城":"商城县","固始":"固始县","潢川":"潢川县","淮滨":"淮滨县","川汇":"川汇区","淮阳":"淮阳区","扶沟":"扶沟县","西华":"西华县","商水":"商水县","沈丘":"沈丘县","郸城":"郸城县","太康":"太康县","鹿邑":"鹿邑县","项城":"项城市","驿城":"驿城区","西平":"西平县","上蔡":"上蔡县","平舆":"平舆县","正阳":"正阳县","确山":"确山县","泌阳":"泌阳县","汝南":"汝南县","遂平":"遂平县","新蔡":"新蔡县","济源":"济源市","江岸":"江岸区","江汉":"江汉区","硚口":"硚口区","汉阳":"汉阳区","武昌":"武昌区","洪山":"洪山区","东西湖":"东西湖区","汉南":"汉南区","蔡甸":"蔡甸区","江夏":"江夏区","黄陂":"黄陂区","新洲":"新洲区","黄石港":"黄石港区","西塞山":"西塞山区","下陆":"下陆区","铁山":"铁山区","阳新":"阳新县","大冶":"大冶市","茅箭":"茅箭区","张湾":"张湾区","郧阳":"郧阳区","郧西":"郧西县","竹山":"竹山县","竹溪":"竹溪县","丹江口":"丹江口市","西陵":"西陵区","伍家岗":"伍家岗区","点军":"点军区","猇亭":"猇亭区","夷陵":"夷陵区","远安":"远安县","秭归":"秭归县","长阳土家族":"长阳土家族自治县","五峰土家族":"五峰土家族自治县","宜都":"宜都市","当阳":"当阳市","枝江":"枝江市","樊城":"樊城区","襄州":"襄州区","南漳":"南漳县","谷城":"谷城县","保康":"保康县","老河口":"老河口市","枣阳":"枣阳市","宜城":"宜城市","梁子湖":"梁子湖区","华容":"华容县","鄂城":"鄂城区","东宝":"东宝区","掇刀":"掇刀区","沙洋":"沙洋县","钟祥":"钟祥市","京山":"京山市","孝南":"孝南区","孝昌":"孝昌县","大悟":"大悟县","云梦":"云梦县","应城":"应城市","安陆":"安陆市","汉川":"汉川市","沙市":"沙市区","荆州":"荆州区","公安":"公安县","监利":"监利市","江陵":"江陵县","石首":"石首市","洪湖":"洪湖市","松滋":"松滋市","黄州":"黄州区","团风":"团风县","红安":"红安县","罗田":"罗田县","英山":"英山县","浠水":"浠水县","蕲春":"蕲春县","黄梅":"黄梅县","麻城":"麻城市","武穴":"武穴市","咸安":"咸安区","嘉鱼":"嘉鱼县","通城":"通城县","崇阳":"崇阳县","通山":"通山县","赤壁":"赤壁市","曾都":"曾都区","广水":"广水市","恩施":"恩施市","利川":"利川市","建始":"建始县","巴东":"巴东县","宣恩":"宣恩县","咸丰":"咸丰县","来凤":"来凤县","鹤峰":"鹤峰县","仙桃":"仙桃市","潜江":"潜江市","天门":"天门市","芙蓉":"芙蓉区","天心":"天心区","岳麓":"岳麓区","开福":"开福区","雨花":"雨花区","望城":"望城区","长沙":"长沙县","浏阳":"浏阳市","宁乡":"宁乡市","荷塘":"荷塘区","芦淞":"芦淞区","石峰":"石峰区","天元":"天元区","渌口":"渌口区","茶陵":"茶陵县","炎陵":"炎陵县","醴陵":"醴陵市","雨湖":"雨湖区","岳塘":"岳塘区","湘潭":"湘潭县","湘乡":"湘乡市","韶山":"韶山市","珠晖":"珠晖区","雁峰":"雁峰区","石鼓":"石鼓区","蒸湘":"蒸湘区","南岳":"南岳区","衡阳":"衡阳县","衡南":"衡南县","衡山":"衡山县","衡东":"衡东县","祁东":"祁东县","耒阳":"耒阳市","常宁":"常宁市","双清":"双清区","大祥":"大祥区","北塔":"北塔区","新邵":"新邵县","邵阳":"邵阳县","隆回":"隆回县","洞口":"洞口县","绥宁":"绥宁县","新宁":"新宁县","城步苗族":"城步苗族自治县","武冈":"武冈市","邵东":"邵东市","岳阳楼":"岳阳楼区","云溪":"云溪区","君山":"君山区","岳阳":"岳阳县","湘阴":"湘阴县","平江":"平江县","汨罗":"汨罗市","临湘":"临湘市","武陵":"武陵区","鼎城":"鼎城区","安乡":"安乡县","汉寿":"汉寿县","临澧":"临澧县","桃源":"桃源县","石门":"石门县","津市":"津市市","武陵源":"武陵源区","慈利":"慈利县","桑植":"桑植县","资阳":"资阳区","赫山":"赫山区","桃江":"桃江县","安化":"安化县","沅江":"沅江市","北湖":"北湖区","苏仙":"苏仙区","桂阳":"桂阳县","宜章":"宜章县","永兴":"永兴县","嘉禾":"嘉禾县","临武":"临武县","汝城":"汝城县","桂东":"桂东县","安仁":"安仁县","资兴":"资兴市","零陵":"零陵区","冷水滩":"冷水滩区","祁阳":"祁阳市","双牌":"双牌县","江永":"江永县","宁远":"宁远县","蓝山":"蓝山县","新田":"新田县","江华瑶族":"江华瑶族自治县","鹤城":"鹤城区","中方":"中方县","沅陵":"沅陵县","辰溪":"辰溪县","溆浦":"溆浦县","会同":"会同县","麻阳苗族":"麻阳苗族自治县","新晃侗族":"新晃侗族自治县","芷江侗族":"芷江侗族自治县","靖州苗族侗族":"靖州苗族侗族自治县","通道侗族":"通道侗族自治县","洪江":"洪江市","娄星":"娄星区","双峰":"双峰县","新化":"新化县","冷水江":"冷水江市","涟源":"涟源市","吉首":"吉首市","泸溪":"泸溪县","凤凰":"凤凰县","花垣":"花垣县","保靖":"保靖县","古丈":"古丈县","永顺":"永顺县","荔湾":"荔湾区","越秀":"越秀区","海珠":"海珠区","天河":"天河区","白云":"白云区","黄埔":"黄埔区","番禺":"番禺区","花都":"花都区","南沙":"南沙区","从化":"从化区","增城":"增城区","武江":"武江区","浈江":"浈江区","曲江":"曲江区","始兴":"始兴县","仁化":"仁化县","翁源":"翁源县","乳源瑶族":"乳源瑶族自治县","新丰":"新丰县","乐昌":"乐昌市","南雄":"南雄市","罗湖":"罗湖区","福田":"福田区","宝安":"宝安区","龙岗":"龙岗区","盐田":"盐田区","龙华":"龙华区","坪山":"坪山区","光明":"光明区","香洲":"香洲区","斗门":"斗门区","金湾":"金湾区","龙湖":"龙湖区","金平":"金平区","濠江":"濠江区","潮阳":"潮阳区","潮南":"潮南区","澄海":"澄海区","南澳":"南澳县","禅城":"禅城区","南海":"南海区","顺德":"顺德区","三水":"三水区","高明":"高明区","蓬江":"蓬江区","江海":"江海区","新会":"新会区","台山":"台山市","恩平":"恩平市","赤坎":"赤坎区","霞山":"霞山区","坡头":"坡头区","麻章":"麻章区","遂溪":"遂溪县","徐闻":"徐闻县","廉江":"廉江市","雷州":"雷州市","吴川":"吴川市","茂南":"茂南区","电白":"电白区","高州":"高州市","化州":"化州市","信宜":"信宜市","端州":"端州区","鼎湖":"鼎湖区","高要":"高要区","广宁":"广宁县","怀集":"怀集县","封开":"封开县","德庆":"德庆县","四会":"四会市","惠城":"惠城区","惠阳":"惠阳区","博罗":"博罗县","惠东":"惠东县","龙门":"龙门县","梅江":"梅江区","梅县":"梅县区","丰顺":"丰顺县","五华":"五华区","平远":"平远县","蕉岭":"蕉岭县","兴宁":"兴宁区","海丰":"海丰县","陆河":"陆河县","陆丰":"陆丰市","源城":"源城区","紫金":"紫金县","龙川":"龙川县","连平":"连平县","东源":"东源县","江城":"江城区","阳东":"阳东区","阳西":"阳西县","阳春":"阳春市","清城":"清城区","清新":"清新区","佛冈":"佛冈县","阳山":"阳山县","连山壮族瑶族":"连山壮族瑶族自治县","连南瑶族":"连南瑶族自治县","英德":"英德市","连州":"连州市","东莞":"东莞市","湘桥":"湘桥区","潮安":"潮安区","饶平":"饶平县","榕城":"榕城区","揭东":"揭东区","揭西":"揭西县","惠来":"惠来县","普宁":"普宁市","云城":"云城区","云安":"云安区","郁南":"郁南县","罗定":"罗定市","青秀":"青秀区","江南":"江南区","西乡塘":"西乡塘区","良庆":"良庆区","邕宁":"邕宁区","武鸣":"武鸣区","隆安":"隆安县","马山":"马山县","上林":"上林县","宾阳":"宾阳县","横州":"横州市","城中":"城中区","鱼峰":"鱼峰区","柳南":"柳南区","柳北":"柳北区","柳江":"柳江区","柳城":"柳城县","鹿寨":"鹿寨县","融安":"融安县","融水苗族":"融水苗族自治县","三江侗族":"三江侗族自治县","秀峰":"秀峰区","叠彩":"叠彩区","七星":"七星区","雁山":"雁山区","临桂":"临桂区","阳朔":"阳朔县","灵川":"灵川县","全州":"全州县","永福":"永福县","灌阳":"灌阳县","龙胜各族":"龙胜各族自治县","资源":"资源县","平乐":"平乐县","恭城瑶族":"恭城瑶族自治县","荔浦":"荔浦市","万秀":"万秀区","长洲":"长洲区","龙圩":"龙圩区","苍梧":"苍梧县","蒙山":"蒙山县","岑溪":"岑溪市","银海":"银海区","铁山港":"铁山港区","合浦":"合浦县","港口":"港口区","防城":"防城区","上思":"上思县","东兴":"东兴区","钦南":"钦南区","钦北":"钦北区","灵山":"灵山县","浦北":"浦北县","港北":"港北区","港南":"港南区","覃塘":"覃塘区","平南":"平南县","桂平":"桂平市","玉州":"玉州区","福绵":"福绵区","陆川":"陆川县","博白":"博白县","兴业":"兴业县","北流":"北流市","右江":"右江区","田阳":"田阳区","田东":"田东县","德保":"德保县","那坡":"那坡县","凌云":"凌云县","乐业":"乐业县","田林":"田林县","西林":"西林县","隆林各族":"隆林各族自治县","靖西":"靖西市","平果":"平果市","八步":"八步区","平桂":"平桂区","昭平":"昭平县","钟山":"钟山区","富川瑶族":"富川瑶族自治县","金城江":"金城江区","宜州":"宜州区","南丹":"南丹县","天峨":"天峨县","凤山":"凤山县","东兰":"东兰县","罗城仫佬族":"罗城仫佬族自治县","环江毛南族":"环江毛南族自治县","巴马瑶族":"巴马瑶族自治县","都安瑶族":"都安瑶族自治县","大化瑶族":"大化瑶族自治县","兴宾":"兴宾区","忻城":"忻城县","象州":"象州县","武宣":"武宣县","金秀瑶族":"金秀瑶族自治县","合山":"合山市","江州":"江州区","扶绥":"扶绥县","宁明":"宁明县","龙州":"龙州县","大新":"大新县","天等":"天等县","凭祥":"凭祥市","秀英":"秀英区","琼山":"琼山区","美兰":"美兰区","海棠":"海棠区","吉阳":"吉阳区","天涯":"天涯区","崖州":"崖州区","西沙":"西沙区","儋州":"儋州市","五指山":"五指山市","琼海":"琼海市","文昌":"文昌市","万宁":"万宁市","东方":"东方市","定安":"定安县","屯昌":"屯昌县","澄迈":"澄迈县","临高":"临高县","白沙黎族":"白沙黎族自治县","昌江黎族":"昌江黎族自治县","乐东黎族":"乐东黎族自治县","陵水黎族":"陵水黎族自治县","保亭黎族苗族":"保亭黎族苗族自治县","琼中黎族苗族":"琼中黎族苗族自治县","锦江":"锦江区","青羊":"青羊区","金牛":"金牛区","武侯":"武侯区","成华":"成华区","龙泉驿":"龙泉驿区","青白江":"青白江区","新都":"新都区","温江":"温江区","双流":"双流区","郫都":"郫都区","新津":"新津区","金堂":"金堂县","大邑":"大邑县","蒲江":"蒲江县","都江堰":"都江堰市","彭州":"彭州市","邛崃":"邛崃市","崇州":"崇州市","简阳":"简阳市","自流井":"自流井区","贡井":"贡井区","沿滩":"沿滩区","富顺":"富顺县","仁和":"仁和区","米易":"米易县","盐边":"盐边县","江阳":"江阳区","纳溪":"纳溪区","龙马潭":"龙马潭区","合江":"合江县","叙永":"叙永县","古蔺":"古蔺县","旌阳":"旌阳区","罗江":"罗江区","中江":"中江县","广汉":"广汉市","什邡":"什邡市","绵竹":"绵竹市","涪城":"涪城区","游仙":"游仙区","安州":"安州区","三台":"三台县","盐亭":"盐亭县","梓潼":"梓潼县","北川羌族":"北川羌族自治县","平武":"平武县","江油":"江油市","利州":"利州区","昭化":"昭化区","朝天":"朝天区","旺苍":"旺苍县","青川":"青川县","剑阁":"剑阁县","苍溪":"苍溪县","船山":"船山区","安居":"安居区","蓬溪":"蓬溪县","大英":"大英县","射洪":"射洪市","威远":"威远县","资中":"资中县","隆昌":"隆昌市","沙湾":"沙湾市","五通桥":"五通桥区","金口河":"金口河区","犍为":"犍为县","井研":"井研县","夹江":"夹江县","沐川":"沐川县","峨边彝族":"峨边彝族自治县","马边彝族":"马边彝族自治县","峨眉山":"峨眉山市","顺庆":"顺庆区","高坪":"高坪区","嘉陵":"嘉陵区","南部":"南部县","营山":"营山县","蓬安":"蓬安县","仪陇":"仪陇县","西充":"西充县","阆中":"阆中市","东坡":"东坡区","彭山":"彭山区","仁寿":"仁寿县","洪雅":"洪雅县","丹棱":"丹棱县","青神":"青神县","翠屏":"翠屏区","南溪":"南溪区","叙州":"叙州区","江安":"江安县","筠连":"筠连县","兴文":"兴文县","屏山":"屏山县","广安":"广安区","前锋":"前锋区","岳池":"岳池县","武胜":"武胜县","邻水":"邻水县","华蓥":"华蓥市","通川":"通川区","达川":"达川区","宣汉":"宣汉县","开江":"开江县","大竹":"大竹县","万源":"万源市","雨城":"雨城区","名山":"名山区","荥经":"荥经县","汉源":"汉源县","石棉":"石棉县","天全":"天全县","芦山":"芦山县","宝兴":"宝兴县","巴州":"巴州区","恩阳":"恩阳区","通江":"通江县","南江":"南江县","平昌":"平昌县","雁江":"雁江区","安岳":"安岳县","乐至":"乐至县","马尔康":"马尔康市","汶川":"汶川县","松潘":"松潘县","九寨沟":"九寨沟县","金川":"金川区","小金":"小金县","黑水":"黑水县","壤塘":"壤塘县","阿坝":"阿坝县","若尔盖":"若尔盖县","红原":"红原县","康定":"康定市","泸定":"泸定县","丹巴":"丹巴县","九龙":"九龙县","雅江":"雅江县","道孚":"道孚县","炉霍":"炉霍县","甘孜":"甘孜县","新龙":"新龙县","德格":"德格县","白玉":"白玉县","石渠":"石渠县","色达":"色达县","理塘":"理塘县","巴塘":"巴塘县","乡城":"乡城县","稻城":"稻城县","得荣":"得荣县","西昌":"西昌市","木里藏族":"木里藏族自治县","盐源":"盐源县","德昌":"德昌县","会理":"会理市","会东":"会东县","宁南":"宁南县","普格":"普格县","布拖":"布拖县","金阳":"金阳县","昭觉":"昭觉县","喜德":"喜德县","冕宁":"冕宁县","越西":"越西县","甘洛":"甘洛县","美姑":"美姑县","雷波":"雷波县","南明":"南明区","云岩":"云岩区","花溪":"花溪区","乌当":"乌当区","观山湖":"观山湖区","开阳":"开阳县","息烽":"息烽县","修文":"修文县","清镇":"清镇市","六枝特":"六枝特区","水城":"水城区","盘州":"盘州市","红花岗":"红花岗区","汇川":"汇川区","播州":"播州区","桐梓":"桐梓县","绥阳":"绥阳县","正安":"正安县","道真仡佬族苗族":"道真仡佬族苗族自治县","务川仡佬族苗族":"务川仡佬族苗族自治县","凤冈":"凤冈县","湄潭":"湄潭县","余庆":"余庆县","习水":"习水县","赤水":"赤水市","仁怀":"仁怀市","西秀":"西秀区","平坝":"平坝区","普定":"普定县","镇宁布依族苗族":"镇宁布依族苗族自治县","关岭布依族苗族":"关岭布依族苗族自治县","紫云苗族布依族":"紫云苗族布依族自治县","七星关":"七星关区","大方":"大方县","黔西":"黔西市","金沙":"金沙县","织金":"织金县","纳雍":"纳雍县","威宁彝族回族苗族":"威宁彝族回族苗族自治县","赫章":"赫章县","碧江":"碧江区","万山":"万山区","江口":"江口县","玉屏侗族":"玉屏侗族自治县","石阡":"石阡县","思南":"思南县","印江土家族苗族":"印江土家族苗族自治县","德江":"德江县","沿河土家族":"沿河土家族自治县","松桃苗族":"松桃苗族自治县","兴义":"兴义市","兴仁":"兴仁市","普安":"普安县","晴隆":"晴隆县","贞丰":"贞丰县","望谟":"望谟县","册亨":"册亨县","安龙":"安龙县","凯里":"凯里市","黄平":"黄平县","施秉":"施秉县","三穗":"三穗县","镇远":"镇远县","岑巩":"岑巩县","天柱":"天柱县","锦屏":"锦屏县","剑河":"剑河县","黎平":"黎平县","榕江":"榕江县","从江":"从江县","雷山":"雷山县","麻江":"麻江县","丹寨":"丹寨县","都匀":"都匀市","福泉":"福泉市","荔波":"荔波县","贵定":"贵定县","瓮安":"瓮安县","独山":"独山县","平塘":"平塘县","罗甸":"罗甸县","长顺":"长顺县","龙里":"龙里县","惠水":"惠水县","三都水族":"三都水族自治县","盘龙":"盘龙区","官渡":"官渡区","西山":"西山区","东川":"东川区","呈贡":"呈贡区","晋宁":"晋宁区","富民":"富民县","宜良":"宜良县","石林彝族":"石林彝族自治县","嵩明":"嵩明县","禄劝彝族苗族":"禄劝彝族苗族自治县","寻甸回族彝族":"寻甸回族彝族自治县","安宁":"安宁区","麒麟":"麒麟区","沾益":"沾益区","马龙":"马龙区","陆良":"陆良县","师宗":"师宗县","罗平":"罗平县","富源":"富源县","会泽":"会泽县","宣威":"宣威市","红塔":"红塔区","江川":"江川区","通海":"通海县","华宁":"华宁县","易门":"易门县","峨山彝族":"峨山彝族自治县","新平彝族傣族":"新平彝族傣族自治县","元江哈尼族彝族傣族":"元江哈尼族彝族傣族自治县","澄江":"澄江市","隆阳":"隆阳区","施甸":"施甸县","龙陵":"龙陵县","昌宁":"昌宁县","腾冲":"腾冲市","昭阳":"昭阳区","鲁甸":"鲁甸县","巧家":"巧家县","盐津":"盐津县","大关":"大关县","永善":"永善县","绥江":"绥江县","镇雄":"镇雄县","彝良":"彝良县","威信":"威信县","水富":"水富市","古城":"古城区","玉龙纳西族":"玉龙纳西族自治县","永胜":"永胜县","华坪":"华坪县","宁蒗彝族":"宁蒗彝族自治县","思茅":"思茅区","宁洱哈尼族彝族":"宁洱哈尼族彝族自治县","墨江哈尼族":"墨江哈尼族自治县","景东彝族":"景东彝族自治县","景谷傣族彝族":"景谷傣族彝族自治县","镇沅彝族哈尼族拉祜族":"镇沅彝族哈尼族拉祜族自治县","江城哈尼族彝族":"江城哈尼族彝族自治县","孟连傣族拉祜族佤族":"孟连傣族拉祜族佤族自治县","澜沧拉祜族":"澜沧拉祜族自治县","西盟佤族":"西盟佤族自治县","临翔":"临翔区","凤庆":"凤庆县","永德":"永德县","镇康":"镇康县","双江拉祜族佤族布朗族傣族":"双江拉祜族佤族布朗族傣族自治县","耿马傣族佤族":"耿马傣族佤族自治县","沧源佤族":"沧源佤族自治县","楚雄":"楚雄市","双柏":"双柏县","牟定":"牟定县","南华":"南华县","姚安":"姚安县","大姚":"大姚县","永仁":"永仁县","元谋":"元谋县","武定":"武定县","禄丰":"禄丰市","个旧":"个旧市","开远":"开远市","蒙自":"蒙自市","弥勒":"弥勒市","屏边苗族":"屏边苗族自治县","建水":"建水县","石屏":"石屏县","泸西":"泸西县","元阳":"元阳县","红河":"红河县","金平苗族瑶族傣族":"金平苗族瑶族傣族自治县","绿春":"绿春县","河口瑶族":"河口瑶族自治县","文山":"文山市","砚山":"砚山县","西畴":"西畴县","麻栗坡":"麻栗坡县","马关":"马关县","丘北":"丘北县","广南":"广南县","富宁":"富宁县","景洪":"景洪市","勐海":"勐海县","勐腊":"勐腊县","大理":"大理市","漾濞彝族":"漾濞彝族自治县","祥云":"祥云县","宾川":"宾川县","弥渡":"弥渡县","南涧彝族":"南涧彝族自治县","巍山彝族回族":"巍山彝族回族自治县","永平":"永平县","洱源":"洱源县","剑川":"剑川县","鹤庆":"鹤庆县","瑞丽":"瑞丽市","梁河":"梁河县","盈江":"盈江县","陇川":"陇川县","泸水":"泸水市","福贡":"福贡县","贡山独龙族怒族":"贡山独龙族怒族自治县","兰坪白族普米族":"兰坪白族普米族自治县","香格里拉":"香格里拉市","德钦":"德钦县","维西傈僳族":"维西傈僳族自治县","城关":"城关区","堆龙德庆":"堆龙德庆区","达孜":"达孜区","林周":"林周县","当雄":"当雄县","尼木":"尼木县","曲水":"曲水县","墨竹工卡":"墨竹工卡县","桑珠孜":"桑珠孜区","南木林":"南木林县","江孜":"江孜县","定日":"定日县","萨迦":"萨迦县","拉孜":"拉孜县","昂仁":"昂仁县","谢通门":"谢通门县","白朗":"白朗县","仁布":"仁布县","康马":"康马县","定结":"定结县","仲巴":"仲巴县","亚东":"亚东县","吉隆":"吉隆县","聂拉木":"聂拉木县","萨嘎":"萨嘎县","岗巴":"岗巴县","卡若":"卡若区","江达":"江达县","贡觉":"贡觉县","类乌齐":"类乌齐县","丁青":"丁青县","察雅":"察雅县","八宿":"八宿县","左贡":"左贡县","芒康":"芒康县","洛隆":"洛隆县","边坝":"边坝县","巴宜":"巴宜区","工布江达":"工布江达县","米林":"米林县","墨脱":"墨脱县","波密":"波密县","察隅":"察隅县","乃东":"乃东区","扎囊":"扎囊县","贡嘎":"贡嘎县","桑日":"桑日县","琼结":"琼结县","曲松":"曲松县","措美":"措美县","洛扎":"洛扎县","加查":"加查县","隆子":"隆子县","错那":"错那县","浪卡子":"浪卡子县","色尼":"色尼区","嘉黎":"嘉黎县","比如":"比如县","聂荣":"聂荣县","安多":"安多县","申扎":"申扎县","班戈":"班戈县","巴青":"巴青县","尼玛":"尼玛县","双湖":"双湖县","普兰":"普兰县","札达":"札达县","噶尔":"噶尔县","日土":"日土县","革吉":"革吉县","改则":"改则县","措勤":"措勤县","碑林":"碑林区","莲湖":"莲湖区","灞桥":"灞桥区","未央":"未央区","雁塔":"雁塔区","阎良":"阎良区","临潼":"临潼区","高陵":"高陵区","鄠邑":"鄠邑区","蓝田":"蓝田县","周至":"周至县","王益":"王益区","印台":"印台区","耀州":"耀州区","宜君":"宜君县","渭滨":"渭滨区","金台":"金台区","陈仓":"陈仓区","凤翔":"凤翔区","岐山":"岐山县","扶风":"扶风县","千阳":"千阳县","麟游":"麟游县","太白":"太白县","秦都":"秦都区","杨陵":"杨陵区","渭城":"渭城区","三原":"三原县","泾阳":"泾阳县","礼泉":"礼泉县","永寿":"永寿县","长武":"长武县","旬邑":"旬邑县","淳化":"淳化县","武功":"武功县","兴平":"兴平市","彬州":"彬州市","临渭":"临渭区","华州":"华州区","潼关":"潼关县","大荔":"大荔县","合阳":"合阳县","澄城":"澄城县","蒲城":"蒲城县","白水":"白水县","富平":"富平县","韩城":"韩城市","华阴":"华阴市","宝塔":"宝塔区","安塞":"安塞区","延长":"延长县","延川":"延川县","志丹":"志丹县","吴起":"吴起县","甘泉":"甘泉县","洛川":"洛川县","宜川":"宜川县","黄龙":"黄龙县","黄陵":"黄陵县","子长":"子长市","汉台":"汉台区","南郑":"南郑区","城固":"城固县","西乡":"西乡县","宁强":"宁强县","略阳":"略阳县","镇巴":"镇巴县","留坝":"留坝县","佛坪":"佛坪县","榆阳":"榆阳区","横山":"横山区","府谷":"府谷县","靖边":"靖边县","定边":"定边县","绥德":"绥德县","米脂":"米脂县","吴堡":"吴堡县","清涧":"清涧县","子洲":"子洲县","神木":"神木市","汉滨":"汉滨区","汉阴":"汉阴县","石泉":"石泉县","宁陕":"宁陕县","紫阳":"紫阳县","岚皋":"岚皋县","平利":"平利县","镇坪":"镇坪县","旬阳":"旬阳市","白河":"白河县","商州":"商州区","洛南":"洛南县","丹凤":"丹凤县","商南":"商南县","镇安":"镇安县","柞水":"柞水县","七里河":"七里河区","西固":"西固区","红古":"红古区","永登":"永登县","皋兰":"皋兰县","榆中":"榆中县","嘉峪关":"嘉峪关市","永昌":"永昌县","白银":"白银区","平川":"平川区","靖远":"靖远县","会宁":"会宁县","景泰":"景泰县","秦州":"秦州区","麦积":"麦积区","清水":"清水县","秦安":"秦安县","甘谷":"甘谷县","武山":"武山县","张家川回族":"张家川回族自治县","凉州":"凉州区","民勤":"民勤县","古浪":"古浪县","天祝藏族":"天祝藏族自治县","甘州":"甘州区","肃南裕固族":"肃南裕固族自治县","民乐":"民乐县","临泽":"临泽县","高台":"高台县","山丹":"山丹县","崆峒":"崆峒区","泾川":"泾川县","灵台":"灵台县","崇信":"崇信县","庄浪":"庄浪县","静宁":"静宁县","华亭":"华亭市","肃州":"肃州区","金塔":"金塔县","瓜州":"瓜州县","肃北蒙古族":"肃北蒙古族自治县","阿克塞哈萨克族":"阿克塞哈萨克族自治县","玉门":"玉门市","敦煌":"敦煌市","西峰":"西峰区","庆城":"庆城县","华池":"华池县","合水":"合水县","正宁":"正宁县","镇原":"镇原县","安定":"安定区","通渭":"通渭县","陇西":"陇西县","渭源":"渭源县","临洮":"临洮县","武都":"武都区","宕昌":"宕昌县","西和":"西和县","两当":"两当县","临夏":"临夏县","康乐":"康乐县","永靖":"永靖县","广河":"广河县","和政":"和政县","东乡族":"东乡族自治县","积石山保安族东乡族撒拉族":"积石山保安族东乡族撒拉族自治县","合作":"合作市","临潭":"临潭县","卓尼":"卓尼县","舟曲":"舟曲县","迭部":"迭部县","玛曲":"玛曲县","碌曲":"碌曲县","夏河":"夏河县","城东":"城东区","城西":"城西区","城北":"城北区","湟中":"湟中区","大通回族土族":"大通回族土族自治县","湟源":"湟源县","乐都":"乐都区","平安":"平安区","民和回族土族":"民和回族土族自治县","互助土族":"互助土族自治县","化隆回族":"化隆回族自治县","循化撒拉族":"循化撒拉族自治县","门源回族":"门源回族自治县","祁连":"祁连县","海晏":"海晏县","刚察":"刚察县","同仁":"同仁市","尖扎":"尖扎县","泽库":"泽库县","河南蒙古族":"河南蒙古族自治县","共和":"共和县","同德":"同德县","贵德":"贵德县","兴海":"兴海县","贵南":"贵南县","玛沁":"玛沁县","班玛":"班玛县","甘德":"甘德县","达日":"达日县","久治":"久治县","玛多":"玛多县","玉树":"玉树市","杂多":"杂多县","称多":"称多县","治多":"治多县","囊谦":"囊谦县","曲麻莱":"曲麻莱县","格尔木":"格尔木市","德令哈":"德令哈市","茫崖":"茫崖市","乌兰":"乌兰县","都兰":"都兰县","天峻":"天峻县","兴庆":"兴庆区","西夏":"西夏区","金凤":"金凤区","永宁":"永宁县","贺兰":"贺兰县","灵武":"灵武市","大武口":"大武口区","惠农":"惠农区","平罗":"平罗县","利通":"利通区","红寺堡":"红寺堡区","盐池":"盐池县","同心":"同心县","青铜峡":"青铜峡市","原州":"原州区","西吉":"西吉县","隆德":"隆德县","泾源":"泾源县","彭阳":"彭阳县","沙坡头":"沙坡头区","中宁":"中宁县","海原":"海原县","天山":"天山区","沙依巴克":"沙依巴克区","新市":"新市区","水磨沟":"水磨沟区","头屯河":"头屯河区","达坂城":"达坂城区","米东":"米东区","乌鲁木齐":"乌鲁木齐县","独山子":"独山子区","克拉玛依":"克拉玛依区","白碱滩":"白碱滩区","乌尔禾":"乌尔禾区","高昌":"高昌区","鄯善":"鄯善县","托克逊":"托克逊县","伊州":"伊州区","巴里坤哈萨克":"巴里坤哈萨克自治县","伊吾":"伊吾县","昌吉":"昌吉市","阜康":"阜康市","呼图壁":"呼图壁县","玛纳斯":"玛纳斯县","奇台":"奇台县","吉木萨尔":"吉木萨尔县","木垒哈萨克":"木垒哈萨克自治县","博乐":"博乐市","阿拉山口":"阿拉山口市","精河":"精河县","温泉":"温泉县","库尔勒":"库尔勒市","轮台":"轮台县","尉犁":"尉犁县","若羌":"若羌县","且末":"且末县","焉耆回族":"焉耆回族自治县","和静":"和静县","和硕":"和硕县","博湖":"博湖县","阿克苏":"阿克苏市","库车":"库车市","温宿":"温宿县","沙雅":"沙雅县","新和":"新和县","拜城":"拜城县","乌什":"乌什县","阿瓦提":"阿瓦提县","柯坪":"柯坪县","阿图什":"阿图什市","阿克陶":"阿克陶县","阿合奇":"阿合奇县","乌恰":"乌恰县","喀什":"喀什市","疏附":"疏附县","疏勒":"疏勒县","英吉沙":"英吉沙县","泽普":"泽普县","莎车":"莎车县","叶城":"叶城县","麦盖提":"麦盖提县","岳普湖":"岳普湖县","伽师":"伽师县","巴楚":"巴楚县","塔什库尔干塔吉克":"塔什库尔干塔吉克自治县","和田":"和田县","墨玉":"墨玉县","皮山":"皮山县","洛浦":"洛浦县","策勒":"策勒县","于田":"于田县","民丰":"民丰县","伊宁":"伊宁县","奎屯":"奎屯市","霍尔果斯":"霍尔果斯市","察布查尔锡伯":"察布查尔锡伯自治县","霍城":"霍城县","巩留":"巩留县","新源":"新源县","昭苏":"昭苏县","特克斯":"特克斯县","尼勒克":"尼勒克县","塔城":"塔城市","乌苏":"乌苏市","额敏":"额敏县","托里":"托里县","裕民":"裕民县","和布克赛尔蒙古":"和布克赛尔蒙古自治县","阿勒泰":"阿勒泰市","布尔津":"布尔津县","富蕴":"富蕴县","福海":"福海县","哈巴河":"哈巴河县","青河":"青河县","吉木乃":"吉木乃县","石河子":"石河子市","阿拉尔":"阿拉尔市","图木舒克":"图木舒克市","五家渠":"五家渠市","北屯":"北屯市","铁门关":"铁门关市","双河":"双河市","可克达拉":"可克达拉市","昆玉":"昆玉市","胡杨河":"胡杨河市","印尼":"印度尼西亚"};function W(e){return j[e]||e}let E=class extends A{config;chartUpdateDebounce;constructor(e,a){super(e,a),this.config=this.getChartConfig(),this.chartUpdateDebounce=s()((async(e,a)=>{const t=this.preProps||a||{};this.showLoading();const n=await(0,i.o)(e,t);this.hideLoading(),n&&n.data&&(this.curChartData=n.data,this.updateChartData(n.data,!0,e));const o=(0,i.p)(e,t);o&&this.updateChartConfig(this.curChartData,o,e),this.preProps=e}),300)}async componentDidMount(){super.componentDidMount();const e=(0,i.i)(this.props,this.props.data);this.preProps=e,this.showLoading();const{data:a}=await(0,i.h)(e);this.hideLoading(),a?(this.curChartData=a,this.updateChartData(a,!1,e)):this.renderChart(this.config);const{dispatchEvent:t}=this.props;await t("init",a,this);const{mapName:n,mapURL:o}=this.getMapURL(e.mapName,this.props.data,e.mapURL);o!==this.props.mapURL&&(this.preProps={...e,mapName:n,mapURL:o},n!==this.props.mapName&&(this.config=this.refreshConfigByMapName(this.config,n)),this.fetchChartMapData(this.preProps,(()=>{this.reloadEcharts(this.config)}))),this.echarts&&this.echarts.on("finished",(()=>{this.updateChartCanvasPadding(this.props.style),this.hideLoading()}))}async componentDidUpdate(e){super.componentDidUpdate(e);const a=this.props.formStore?.data||this.props.data;if(this.preProps&&this.props.data!==e.data){const e=(0,i.k)(this.props,a),t={...this.preProps,...e,data:a};e?.mapName&&e.mapName!==this.preProps.mapName?this.loadReportMapData(t,(()=>{this.chartUpdateDebounce(t,this.preProps)})):this.chartUpdateDebounce(t,this.preProps)}else{const{env:e,data:t}=this.props,o=(0,i.i)(this.props,a),{mapName:c,mapURL:d}=o;if(o.mapURL!==this.preProps?.mapURL){const a=await e.fetcher(d,t);a.ok||n.oRP.warning(`获取不到当前地图（${c}）的数据。`),window.echarts?.registerMap(c,a.data)}this.chartUpdateDebounce(o,this.preProps)}}componentWillUnmount(){super.componentWillUnmount(),this.chartUpdateDebounce?.cancel()}doAction(e,a,t,i){const n=e?.actionType;"mapTypeChange"===n?this.setSchema({mapName:i?.mapName}):super.doAction(e,a,t,i)}getChartConfig(e,a){let t=a;a||(t=(0,i.i)(this.props,this.props.data));const{measures:n,dimensions:o,mapName:c}=t,r=(0,i.q)(t,this.ref);let s=e;const f=n||[],h=o||[],l={tooltip:(0,i.r)(r,void 0,this.ref),title:(0,i.t)(r,this.ref),visualMap:(0,i.a9)(r),series:[],...(0,i.w)(d()(r,i.x))};if(!s)return l;b()(s)&&(s=[s]);const p=f[0],u=h[0];return p&&u?(l.series.push({type:"map",mapType:c||"china",roam:r.mapRoam??!1,zoom:r.mapZoom??1,...(0,i.v)(r,{notNeedDefaultVal:!0}),itemStyle:{normal:{label:(0,i.C)(r,void 0,this.ref),borderColor:r.mapBorderColor??"#fff",borderWidth:r.mapBorderWidth??1,borderType:"solid"},emphasis:{label:(0,i.C)(r,void 0,this.ref),areaColor:r.mapAreaColor??"#4979fe"}},data:s.map(((e,a)=>({value:e[p.as],name:W(e[u.as])})))}),l):l}updateChartData(e,a,t){const n=t||this.props,{measures:o,dimensions:c,mapName:d}=n;let r=e;const s=(0,i.q)(n,this.ref),f=o||[],h=c||[];if(r){b()(r)&&(r=[r]),this.config.series=[];const e=f[0],t=h[0];e&&t&&this.config.series.push({type:"map",mapType:d||"china",roam:s.mapRoam??!1,zoom:s.mapZoom??1,...(0,i.v)(s,{notNeedDefaultVal:!0}),itemStyle:{normal:{label:(0,i.C)(s,void 0,this.ref),borderColor:s.mapBorderColor??"#fff",borderWidth:s.mapBorderWidth??1,borderType:"solid"},emphasis:{label:(0,i.C)(s,void 0,this.ref),areaColor:s.mapAreaColor??"#4979fe"}},data:r.map(((a,i)=>({value:a[e.as],name:W(a[t.as])})))}),a?(0===this.config.series.length&&this.echarts?.clear&&this.echarts?.clear(),this.reloadEcharts(this.config)):(this.echarts?.clear&&this.echarts?.clear(),this.renderChart(this.config))}}async updateChartConfig(e,a,t){const i=this.getChartConfig(e,t);if(i){const{mapName:e,mapURL:t,grid:n}=a||{};(void 0!==t||void 0!==e||n)&&this.echarts?.clear&&this.echarts?.clear(),this.config=i,void 0!==t||void 0!==e?this.renderChart(i):this.reloadEcharts(i)}}};E=(0,i._)([(0,n.A49)({type:"chart-map",storeType:o.DtI.name})],E);let I=class extends A{config;chartUpdateDebounce;constructor(e,a){super(e,a),this.config=this.getChartConfig(),this.chartUpdateDebounce=s()((async(e,a)=>{const t=this.preProps||a||{};this.showLoading();const n=await(0,i.o)(e,t);this.hideLoading(),n&&n.data&&(this.curChartData=n.data,this.updateChartData(n.data,!0,e));const o=(0,i.p)(e,t);o&&this.updateChartConfig(this.curChartData,o,e),this.preProps=e}),300)}async componentDidMount(){super.componentDidMount();const e=(0,i.i)(this.props,this.props.data);this.preProps=e,this.showLoading();const{data:a}=await(0,i.h)(e);this.hideLoading(),a?(this.curChartData=a,this.updateChartData(a)):this.renderChart(this.config);const{dispatchEvent:t}=this.props;await t("init",a,this),this.echarts&&this.echarts.on("finished",(()=>{this.updateChartCanvasPadding(this.props.style),this.hideLoading()}))}componentDidUpdate(e){super.componentDidUpdate(e);const a=this.props.formStore?.data||this.props.data;if(this.preProps&&this.props.data!==e.data){const e=(0,i.k)(this.props,a);this.chartUpdateDebounce({...this.preProps,...e,data:a},this.preProps)}else{const e=(0,i.i)(this.props,a);this.chartUpdateDebounce(e,this.preProps)}}componentWillUnmount(){super.componentWillUnmount(),this.chartUpdateDebounce?.cancel()}getChartConfig(e,a){let t=a;a||(t=(0,i.i)(this.props,this.props.data));const n=(0,i.q)(t,this.ref),{measures:o,dimensions:c,xyFlip:r,color:s,showTotolData:f}=n;let h=e;const l=o||[],p=c||[],u=p[0]||{},g=l[0]||{},m=(0,i.r)(n,void 0,this.ref),y=(0,i.I)(n,[],this.ref),x={tooltip:m,color:(0,i.s)(n),title:(0,i.t)(n,this.ref),grid:(0,i.v)(d()(n,i.G)),legend:{...y,data:[(0,i.B)(g)]},series:[],...(0,i.w)(d()(n,i.x))},C=(0,i.y)(n,void 0,this.ref),w=(0,i.z)(n,void 0,this.ref);if(r?(x.xAxis=w,x.yAxis=C):(x.yAxis=w,x.xAxis=C),h&&b()(h)&&(h=[h]),!h?.length)return x;const v=[0],S=[],D=[],T=[];let _=0;h=this.sortRoprtDataByDate(h,p),h.map(((e,a)=>{const t=e[g.as];_+=t,v.push(_),T.push({...e,[g.as]:"-"}),t>0||0===t?(S.push(e),D.push({...e,[g.as]:"-"})):(v[a]+=t,S.push({...e,[g.as]:"-"}),D.push({...e,[g.as]:-t}))})),T.push({...h[0],[g.as]:_,[u.as]:"总量数据"}),v.pop(),v.push(0),x.series.push({data:v,type:"bar",stack:"value",name:"占位数据",silent:!0,itemStyle:{borderColor:"transparent",color:"transparent"}}),x.series.push(this.getChartDataItemConfig(n,g,S,!1)),x.series.push(this.getChartDataItemConfig(n,g,D,!0)),f&&x.series.push(this.getChartDataItemConfig(n,g,T,!_));const z=h.map((e=>p.map((a=>(0,i.n)(e[a.as])||"")).join("-")));return f&&z.push("总量数据"),C.data=z,x}getChartDataItemConfig(e,a,t,n){const{xyFlip:o,columnBarWidth:c,columnBarMaxWidth:r,columnBarMinWidth:s,columnBarGap:f,columnBarMinHeight:b,positiveDataColor:h,negativeDataColor:l,negativeLabelPosition:p}=e,u={data:t.map((e=>e[a.as])),type:"bar",stack:"value",name:(0,i.B)(a),isNegative:n};u.label=(0,i.C)(e,a.formatter?{type:a.formatter,formatterToFixed:a.formatterToFixed,negative:!!n}:n?{negative:!0}:void 0,this.ref),n&&(u.label.position=p),u.barWidth=c,u.barMaxWidth=r,u.barMinWidth=s,u.barGap=f,u.barMinHeight=b;const g=(0,i.D)(e,this.ref),m=l??i.aa.report.negativeDataColor,y=h??i.aa.report.positiveDataColor;return u.itemStyle={...g,color:n?m:y},u.markPoint=(0,i.E)(d()(e,i.M),this.ref),u.markLine=(0,i.F)(d()(e,i.H),o,this.ref),u}updateChartData(e,a,t){const n=t||this.props,o=(0,i.q)(n,this.ref),{measures:c,dimensions:d,xyFlip:r,showTotolData:s}=o;let f=e;const h=c||[],l=d||[],p=l[0],u=h[0];if(0!==h.length&&0!==l.length&&f){b()(f)&&(f=[f]),this.config.series=[];const e=[0],t=[],n=[],c=[];let d=0;f=this.sortRoprtDataByDate(f,l),f.map(((a,i)=>{const o=a[u.as];d+=o,e.push(d),c.push({...a,[u.as]:"-"}),o>0||0===o?(t.push(a),n.push({...a,[u.as]:"-"})):(e[i]+=o,t.push({...a,[u.as]:"-"}),n.push({...a,[u.as]:-o}))})),c.push({...f[0],[u.as]:d,[p.as]:"总量数据"}),e.pop(),e.push(0),this.config.series.push({data:e,type:"bar",stack:"value",name:"占位数据",silent:!0,itemStyle:{borderColor:"transparent",color:"transparent"}}),this.config.series.push(this.getChartDataItemConfig(o,u,t,!1)),this.config.series.push(this.getChartDataItemConfig(o,u,n,!0)),s&&this.config.series.push(this.getChartDataItemConfig(o,u,c,!d));let h=[];l.length>0&&(h=f.map((e=>l.map((a=>(0,i.n)(e[a.as])||"")).join("-")))),s&&h.push("总量数据"),r&&this.config?.yAxis?.data?this.config.yAxis.data=h:this.config?.xAxis?.data&&(this.config.xAxis.data=h),a?(0!==h.length&&0!==this.config.series.length||!this.echarts?.clear||this.echarts?.clear(),this.reloadEcharts(this.config)):(this.echarts?.clear&&this.echarts?.clear(),this.renderChart(this.config))}}updateChartConfig(e,a,t){const i=this.getChartConfig(e,t);i&&(this.config=i,void 0!==a?.__notEChartsDiff?.columnChartType?(this.echarts?.clear&&this.echarts?.clear(),this.renderChart(i)):this.reloadEcharts(i))}};I=(0,i._)([(0,n.A49)({type:"chart-waterfall",storeType:o.DtI.name})],I);let O=class extends A{config;chartUpdateDebounce;constructor(e,a){super(e,a),this.config=this.getChartConfig(),this.chartUpdateDebounce=s()((async(e,a)=>{const t=this.preProps||a||{};this.showLoading();const n=await(0,i.o)(e,t);this.hideLoading(),n&&n.data&&(this.curChartData=n.data,this.updateChartData(n.data,!0,e));const o=(0,i.p)(e,t);o&&this.updateChartConfig(this.curChartData,o,e),this.preProps=e}),300)}async componentDidMount(){super.componentDidMount();const e=(0,i.i)(this.props,this.props.data);this.preProps=e,this.showLoading();const{data:a}=await(0,i.h)(e);this.hideLoading(),a?(this.curChartData=a,this.updateChartData(a,e)):this.renderChart(this.config);const{dispatchEvent:t}=this.props;await t("init",a,this),this.echarts&&this.echarts.on("finished",(()=>{this.updateChartCanvasPadding(this.props.style),this.hideLoading()}))}componentDidUpdate(e){super.componentDidUpdate(e);const a=this.props.formStore?.data||this.props.data;if(this.preProps&&this.props.data!==e.data){const e=(0,i.k)(this.props,a);this.chartUpdateDebounce({...this.preProps,...e,data:a},this.preProps)}else{const e=(0,i.i)(this.props,a);this.chartUpdateDebounce(e,this.preProps)}}componentWillUnmount(){super.componentWillUnmount(),this.chartUpdateDebounce?.cancel()}doAction(e,a,t,i){const n=e?.actionType;"xyFlip"===n?this.setSchema({xyFlip:i?.xyFlip}):super.doAction(e,a,t,i)}getChartConfig(e,a){let t=a;a||(t=(0,i.i)(this.props,this.props.data));const n=(0,i.q)(t,this.ref),{measures:o,dimensions:c,xyFlip:r,symbolSize:s,symbol:f,colorBy:h,groupField:l}=n;let p=e;const u=c||[],g=o||[],m={tooltip:(0,i.r)(n,void 0,this.ref),color:(0,i.s)(n),title:(0,i.t)(n,this.ref),grid:(0,i.v)(d()(n,i.G)),series:[],...(0,i.w)(d()(n,i.x))},y=(0,i.y)(n,!0,this.ref),x=(0,i.z)(n,void 0,this.ref);if(r?(m.xAxis=x,m.yAxis=y):(m.yAxis=x,m.xAxis=y),p&&b()(p)&&(p=[p]),!p?.length)return m;if(p=this.sortRoprtDataByMeasures(p,g),g&&g.length>0&&u&&u.length>0){const e=u[0]||{};if(g&&1===g.length&&l){const e=g[0],{categories:a,groupFieldValues:t,groupFieldData:o}=L(p,l,u,g);for(let c=0;c<t.length;c++){const b=t[c],l=o[b],p=[],u={data:[],type:"scatter",symbolSize:s??20,symbol:f||"circle",name:b||(0,i.B)(e)};for(let e=0;e<a.length;e++){const t=a[e],i=l[t];i&&p.push([t,i?.value])}u.data=p,u.label=(0,i.C)(n,e.formatter?{type:e.formatter,formatterToFixed:e.formatterToFixed}:void 0,this.ref),u.colorBy=h,u.itemStyle=(0,i.D)(d()(n,i.ab),this.ref),u.markPoint=(0,i.E)(d()(n,i.M),this.ref),u.markLine=(0,i.F)(d()(n,i.H),r,this.ref),m.series.push(u)}}else for(let a=0;a<g.length;a++){const t=g[a]||{},o=[],c={data:[],type:"scatter",symbolSize:s??20,symbol:f||"circle",name:(0,i.B)(t)};for(let a=0;a<p.length;a++){const n=p[a];o.push([(0,i.n)(n[e.as]),n[t.as]])}c.data=o,c.colorBy=h,c.label=(0,i.C)(n,t.formatter?{type:t.formatter,formatterToFixed:t.formatterToFixed}:void 0,this.ref),c.itemStyle=(0,i.D)(d()(n,i.ab),this.ref),c.markPoint=(0,i.E)(d()(n,i.M),this.ref),c.markLine=(0,i.F)(d()(n,i.H),r,this.ref),m.series.push(c)}}return m.legend=(0,i.I)(n,m.series,this.ref),m}updateChartData(e,a,t){const n=t||this.props,o=(0,i.q)(n,this.ref),{measures:c,dimensions:r,xyFlip:s,symbolSize:f,symbol:h,colorBy:l,groupField:p}=o,{measures:u,groupField:g}=this.preProps||{};let m=e;const y=r||[],x=c||[],C=u||[];if(m){if(b()(m)&&(m=[m]),this.config.series=[],m&&m.length>0&&(m=this.sortRoprtDataByMeasures(m,x),x&&x.length>0&&y&&y.length>0)){const e=y[0]||{};if(x&&1===x.length&&p){const e=x[0],{categories:a,groupFieldValues:t,groupFieldData:n}=L(m,p,y,x);for(let c=0;c<t.length;c++){const r=t[c],b=n[r],p=[],u={data:[],type:"scatter",symbolSize:f??20,symbol:h||"circle",name:r||(0,i.B)(e)};for(let e=0;e<a.length;e++){const t=a[e],i=b[t];i&&p.push([t,i?.value])}u.data=p,u.label=(0,i.C)(o,e.formatter?{type:e.formatter,formatterToFixed:e.formatterToFixed}:void 0,this.ref),u.colorBy=l,u.itemStyle=(0,i.D)(d()(o,i.ab),this.ref),u.markPoint=(0,i.E)(d()(o,i.M),this.ref),u.markLine=(0,i.F)(d()(o,i.H),s,this.ref),this.config.series.push(u)}}else for(let a=0;a<x.length;a++){const t=x[a]||{},n=[],c={data:[],type:"scatter",symbolSize:f??20,symbol:h||"circle",name:(0,i.B)(t)};for(let a=0;a<m.length;a++){const o=m[a];n.push([(0,i.n)(o[e.as]),o[t.as]])}c.data=n,c.colorBy=l,c.label=(0,i.C)(o,t.formatter?{type:t.formatter,formatterToFixed:t.formatterToFixed}:void 0,this.ref),c.itemStyle=(0,i.D)(d()(o,i.ab),this.ref),c.markPoint=(0,i.E)(d()(o,i.M),this.ref),c.markLine=(0,i.F)(d()(o,i.H),s,this.ref),this.config.series.push(c)}}this.config.legend=(0,i.I)(o,this.config.series,this.ref),a?(0!==this.config.series.length&&C.length===x.length&&g===p||!this.echarts?.clear||this.echarts?.clear(),this.reloadEcharts(this.config)):(this.echarts?.clear&&this.echarts?.clear(),this.renderChart(this.config))}}updateChartConfig(e,a,t){const i=this.getChartConfig(e,t);i&&(this.config=i,void 0!==a?.groupField?(this.echarts?.clear&&this.echarts?.clear(),this.renderChart(i)):this.reloadEcharts(i))}};O=(0,i._)([(0,n.A49)({type:"chart-scatter",storeType:o.DtI.name})],O);let $=class extends A{config;chartUpdateDebounce;constructor(e,a){super(e,a),this.config=this.getChartConfig(),this.chartUpdateDebounce=s()((async(e,a)=>{const t=this.preProps||a||{};this.showLoading();const n=await(0,i.o)(e,t);this.hideLoading(),n&&n.data&&(this.curChartData=n.data,this.updateChartData(n.data,!0,e));const o=(0,i.p)(e,t);o&&this.updateChartConfig(this.curChartData,o,e),this.preProps=e}),300)}async componentDidMount(){super.componentDidMount();const e=(0,i.i)(this.props,this.props.data);this.preProps=e,this.showLoading();const{data:a}=await(0,i.h)(e);this.hideLoading(),a?(this.curChartData=a,this.updateChartData(a,e)):this.renderChart(this.config);const{dispatchEvent:t}=this.props;await t("init",a,this),this.echarts&&this.echarts.on("finished",(()=>{this.updateChartCanvasPadding(this.props.style),this.hideLoading()}))}componentDidUpdate(e){super.componentDidUpdate(e);const a=this.props.formStore?.data||this.props.data;if(this.preProps&&this.props.data!==e.data){const e=(0,i.k)(this.props,a);this.chartUpdateDebounce({...this.preProps,...e,data:a},this.preProps)}else{const e=(0,i.i)(this.props,a);this.chartUpdateDebounce(e,this.preProps)}}componentWillUnmount(){super.componentWillUnmount(),this.chartUpdateDebounce?.cancel()}doAction(e,a,t,i){const n=e?.actionType;"xyFlip"===n?this.setSchema({xyFlip:i?.xyFlip}):super.doAction(e,a,t,i)}getChartConfig(e,a){let t=a;a||(t=(0,i.i)(this.props,this.props.data));const n=(0,i.q)(t,this.ref),{measures:o,dimensions:c,xyFlip:r,symbol:s,colorBy:f,groupField:h,chartItemStyle:l,bubbleField:p}=n;let u=e;const g=c||[],m=o||[];let x=p;y()(p)&&(x=(p[0]||{}).as);const C={tooltip:(0,i.r)(n,void 0,this.ref),color:(0,i.s)(n),title:(0,i.t)(n,this.ref),grid:(0,i.v)(d()(n,i.G)),series:[],...(0,i.w)(d()(n,i.x))},w=(0,i.y)(n,!0,this.ref),v=(0,i.z)(n,void 0,this.ref);if(r?(C.xAxis=v,C.yAxis=w):(C.yAxis=v,C.xAxis=w),u&&b()(u)&&(u=[u]),!u?.length)return C;if(u=this.sortRoprtDataByMeasures(u,m),m&&m.length>0&&g&&g.length>0){const e=g[0]||{};if(m&&1===m.length&&h){const e=m[0],{categories:a,groupFieldValues:t,groupFieldData:o}=L(u,h,g,m);for(let c=0;c<t.length;c++){const b=t[c],h=o[b],p=[],u={data:[],type:"scatter",symbolSize:e=>(e[2]||10)*(l?.bubbleZoom||1),symbol:s||"circle",name:b||(0,i.B)(e)};for(let e=0;e<a.length;e++){const t=a[e],i=h[t];i&&p.push([t,i.value,i[x]||10])}u.data=p,u.label=(0,i.C)(n,e.formatter?{type:e.formatter,formatterToFixed:e.formatterToFixed}:void 0,this.ref),u.colorBy=f,u.itemStyle=(0,i.ac)(l),u.markPoint=(0,i.E)(d()(n,i.M),this.ref),u.markLine=(0,i.F)(d()(n,i.H),r,this.ref),C.series.push(u)}}else for(let a=0;a<m.length;a++){const t=m[a]||{},o=[],c={data:[],type:"scatter",symbolSize:e=>(e[2]||10)*(l?.bubbleZoom||1),symbol:s||"circle",name:(0,i.B)(t)};for(let a=0;a<u.length;a++){const n=u[a];o.push([(0,i.n)(n[e.as]),n[t.as],n[x]||10])}c.data=o,c.colorBy=f,c.label=(0,i.C)(n,t.formatter?{type:t.formatter,formatterToFixed:t.formatterToFixed}:void 0,this.ref),c.itemStyle=(0,i.ac)(l),c.markPoint=(0,i.E)(d()(n,i.M),this.ref),c.markLine=(0,i.F)(d()(n,i.H),r,this.ref),C.series.push(c)}}return C.legend=(0,i.I)(n,C.series,this.ref),C}updateChartData(e,a,t){const n=t||this.props,o=(0,i.q)(n,this.ref),{measures:c,dimensions:r,xyFlip:s,symbol:f,colorBy:h,groupField:l,chartItemStyle:p,bubbleField:u}=o,{measures:g,groupField:m}=this.preProps||{};let x=e;const C=r||[],w=c||[],v=g||[];let S=u;if(y()(u)&&(S=(u[0]||{}).as),x){if(b()(x)&&(x=[x]),this.config.series=[],x&&x.length>0&&(x=this.sortRoprtDataByMeasures(x,w),w&&w.length>0&&C&&C.length>0)){const e=C[0]||{};if(w&&1===w.length&&l){const e=w[0],{categories:a,groupFieldValues:t,groupFieldData:n}=L(x,l,C,w);for(let c=0;c<t.length;c++){const r=t[c],b=n[r],l=[],u={data:[],type:"scatter",symbolSize:e=>(e[2]||10)*(p?.bubbleZoom||1),symbol:f||"circle",name:r||(0,i.B)(e)};for(let e=0;e<a.length;e++){const t=a[e],i=b[t];i&&l.push([t,i.value,i[S]||10])}u.data=l,u.label=(0,i.C)(o,e.formatter?{type:e.formatter,formatterToFixed:e.formatterToFixed}:void 0,this.ref),u.colorBy=h,u.itemStyle=(0,i.ac)(p),u.markPoint=(0,i.E)(d()(o,i.M),this.ref),u.markLine=(0,i.F)(d()(o,i.H),s,this.ref),this.config.series.push(u)}}else for(let a=0;a<w.length;a++){const t=w[a]||{},n=[],c={data:[],type:"scatter",symbolSize:e=>(e[2]||10)*(p.bubbleZoom||1),symbol:f||"circle",name:(0,i.B)(t)};for(let a=0;a<x.length;a++){const o=x[a];n.push([(0,i.n)(o[e.as]),o[t.as],o[S]||10])}c.data=n,c.colorBy=h,c.label=(0,i.C)(o,t.formatter?{type:t.formatter,formatterToFixed:t.formatterToFixed}:void 0,this.ref),c.itemStyle=(0,i.ac)(p),c.markPoint=(0,i.E)(d()(o,i.M),this.ref),c.markLine=(0,i.F)(d()(o,i.H),s,this.ref),this.config.series.push(c)}}this.config.legend=(0,i.I)(o,this.config.series,this.ref),a?(0!==this.config.series.length&&v.length===w.length&&m===l||!this.echarts?.clear||this.echarts?.clear(),this.reloadEcharts(this.config)):(this.echarts?.clear&&this.echarts?.clear(),this.renderChart(this.config))}}updateChartConfig(e,a,t){const i=this.getChartConfig(e,t);i&&(this.config=i,void 0!==a?.groupField||void 0!==a?.bubbleField?(this.echarts?.clear&&this.echarts?.clear(),this.renderChart(i)):this.reloadEcharts(i))}};$=(0,i._)([(0,n.A49)({type:"chart-bubble",storeType:o.DtI.name})],$);let q=class extends A{config;chartUpdateDebounce;geoCoordMap={};geoCoordMapTypeList=[];constructor(e,a){super(e,a),this.config=this.getChartConfig(),this.chartUpdateDebounce=s()((async(e,a)=>{const t=this.preProps||a||{};this.showLoading();const n=await(0,i.o)(e,t);this.hideLoading(),n&&n.data&&(this.curChartData=n.data,this.updateChartData(n.data,!0,e));const o=(0,i.p)(e,t);o&&this.updateChartConfig(this.curChartData,o,e),this.preProps=e}),300)}async componentDidMount(){super.componentDidMount();const e=(0,i.i)(this.props,this.props.data);this.preProps=e,this.showLoading();const{data:a}=await(0,i.h)(e);this.hideLoading(),a?(this.curChartData=a,this.updateChartData(a,!1,e)):this.renderChart(this.config);const{dispatchEvent:t}=this.props;await t("init",a,this);const{mapName:n,mapURL:o}=this.getMapURL(e.mapName,this.props.data,e.mapURL);o!==this.props.mapURL&&(this.preProps={...e,mapName:n,mapURL:o},n!==this.props.mapName&&(this.config=this.refreshConfigByMapName(this.config,n)),this.fetchChartMapData(this.preProps,(()=>{this.reloadEcharts(this.config)}))),this.echarts&&this.echarts.on("finished",(()=>{this.updateChartCanvasPadding(this.props.style),this.hideLoading()}))}async componentDidUpdate(e){super.componentDidUpdate(e);const a=this.props.formStore?.data||this.props.data;if(this.preProps&&this.props.data!==e.data){const e=(0,i.k)(this.props,a),t={...this.preProps,...e,data:a};e?.mapName&&e.mapName!==this.preProps.mapName?this.loadReportMapData(t,(()=>{this.chartUpdateDebounce(t,this.preProps)})):this.chartUpdateDebounce(t,this.preProps)}else{const{env:e,data:t}=this.props,o=(0,i.i)(this.props,a),{mapName:c,mapURL:d}=o;if(o.mapURL!==this.preProps?.mapURL){const a=await e.fetcher(d,t);a.ok||n.oRP.warning(`获取不到当前地图（${c}）的数据。`),window.echarts?.registerMap(c,a.data)}this.chartUpdateDebounce(o,this.preProps)}}componentWillUnmount(){super.componentWillUnmount(),this.chartUpdateDebounce?.cancel()}doAction(e,a,t,i){const n=e?.actionType;"mapTypeChange"===n?this.setSchema({mapName:i?.mapName}):super.doAction(e,a,t,i)}updateGeoCoordMap(e){if(window.echarts&&-1===this.geoCoordMapTypeList.indexOf(e)){const a=window.echarts.getMap(e)?.geoJson?.features||[];a.length>0&&(this.geoCoordMapTypeList.push(e),a.forEach((e=>this.geoCoordMap[e.properties?.name]=e.properties?.cp)))}}getChartConfig(e,a){let t=a;a||(t=(0,i.i)(this.props,this.props.data));const{measures:n,dimensions:o,mapName:c}=t;this.updateGeoCoordMap(c);const r=(0,i.q)(t,this.ref);let s=e;const f=n||[],h=o||[],l=r.bubbleStyle||{},p={title:(0,i.t)(r,this.ref),tooltip:(0,i.r)(r,void 0,this.ref),geo:{map:c,zoom:r.mapZoom??1,...(0,i.v)(r,{notNeedDefaultVal:!0})},visualMap:{show:!1,inRange:{symbolSize:[l.min??10,l.max??25]}},series:[],...(0,i.w)(d()(r,i.x))};if(!s)return p;s&&b()(s)&&(s=[s]);const u=f[0],g=h[0];return u&&g?(p.series.push({type:"map",mapType:c||"china",zoom:r.mapZoom??1,...(0,i.v)(r,{notNeedDefaultVal:!0}),itemStyle:{normal:{label:(0,i.C)(r,void 0,this.ref),borderColor:r.mapBorderColor??"#fff",borderWidth:r.mapBorderWidth??1,borderType:"solid",color:r.mapAreaColor??"#eaefff",areaColor:r.mapAreaColor??"#eaefff"},emphasis:{label:(0,i.C)(r,void 0,this.ref),areaColor:r.mapAreaColor??"#eaefff"}},data:s.map(((e,a)=>({value:e[u.as],name:W(e[g.as])})))}),window.echarts&&this.geoCoordMapTypeList.indexOf(c)>-1&&p.series.push({type:"effectScatter",coordinateSystem:"geo",...(0,i.ad)(r.waveletStyle),zlevel:2,itemStyle:{normal:{opacity:l.opacity??.8,color:l.color??"#ea6367",label:{show:!0,color:"#fff",fontWeight:"bold",position:"inside",formatter:e=>i.X[u.formatter||"default"](e?.data?.value[2],u)}},emphasis:{}},symbol:"circle",data:s.map(((e,a)=>{const t=W(e[g.as]);return{value:(this.geoCoordMap[t]||[]).concat(e[u.as]),name:t}}))}),p):p}updateChartData(e,a,t){const n=t||this.props,{measures:o,dimensions:c,mapName:d}=n;let r=e;const s=(0,i.q)(n,this.ref),f=o||[],h=c||[],l=s.bubbleStyle||{};if(r){b()(r)&&(r=[r]),this.config.series=[];const e=f[0],t=h[0];e&&t&&(this.config.series.push({type:"map",mapType:d||"china",roam:s.mapRoam??!1,zoom:s.mapZoom??1,...(0,i.v)(s,{notNeedDefaultVal:!0}),itemStyle:{normal:{label:(0,i.C)(s,void 0,this.ref),borderColor:s.mapBorderColor??"#fff",borderWidth:s.mapBorderWidth??1,borderType:"solid",color:s.mapAreaColor??"#eaefff",areaColor:s.mapAreaColor??"#eaefff"},emphasis:{label:(0,i.C)(s,void 0,this.ref),areaColor:s.mapAreaColor??"#eaefff"}},data:r.map(((a,i)=>({value:a[e.as],name:W(a[t.as])})))}),window.echarts&&this.geoCoordMapTypeList.indexOf(d)>-1&&this.config.series.push({type:"effectScatter",coordinateSystem:"geo",...(0,i.ad)(s.waveletStyle),zlevel:2,itemStyle:{normal:{opacity:l.opacity??.8,color:l.color??"#ea6367",label:{show:!0,color:"#fff",fontWeight:"bold",position:"inside",formatter:a=>i.X[e.formatter||"default"](a?.data?.value[2],e)}},emphasis:{}},symbol:"circle",data:r.map(((a,i)=>{const n=W(a[t.as]);return{value:(this.geoCoordMap[n]||[]).concat(a[e.as]),name:n}}))})),a?(0===this.config.series.length&&this.echarts?.clear&&this.echarts?.clear(),this.reloadEcharts(this.config)):(this.echarts?.clear&&this.echarts?.clear(),this.renderChart(this.config))}}async updateChartConfig(e,a,t){const i=this.getChartConfig(e,t);if(i){const{mapName:e,mapURL:t,grid:n,waveletStyle:o}=a||{};(void 0!==t||void 0!==e||n||o?.showEffectOn!==this.preProps.waveletStyle?.showEffectOn)&&this.echarts?.clear&&this.echarts?.clear(),this.config=i,void 0!==t||void 0!==e?this.renderChart(i):this.reloadEcharts(i)}}};q=(0,i._)([(0,n.A49)({type:"chart-scatter-map",storeType:o.DtI.name})],q);let H=class extends A{config;chartUpdateDebounce;constructor(e,a){super(e,a),this.config=this.getChartConfig(),this.chartUpdateDebounce=s()((async(e,a)=>{const t=this.preProps||a||{};this.showLoading();const n=await(0,i.o)(e,t);this.hideLoading(),n&&n.data&&(this.curChartData=n.data,this.updateChartData(n.data,!0,e));const o=(0,i.p)(e,t);o&&this.updateChartConfig(this.curChartData,o,e),this.preProps=e}),300)}async componentDidMount(){super.componentDidMount();const e=(0,i.i)(this.props,this.props.data);this.preProps=e,this.showLoading();const{data:a}=await(0,i.h)(e);this.hideLoading(),a?(this.curChartData=a,this.updateChartData(a,e)):this.renderChart(this.config);const{dispatchEvent:t}=this.props;await t("init",a,this),this.echarts&&this.echarts.on("finished",(()=>{this.updateChartCanvasPadding(this.props.style),this.hideLoading()}))}componentDidUpdate(e){super.componentDidUpdate(e);const a=this.props.formStore?.data||this.props.data;if(this.preProps&&this.props.data!==e.data){const e=(0,i.k)(this.props,a);this.chartUpdateDebounce({...this.preProps,...e,data:a},this.preProps)}else{const e=(0,i.i)(this.props,a);this.chartUpdateDebounce(e,this.preProps)}}componentWillUnmount(){super.componentWillUnmount(),this.chartUpdateDebounce?.cancel()}doAction(e,a,t,i){const n=e?.actionType;"xyFlip"===n?this.setSchema({xyFlip:i?.xyFlip}):super.doAction(e,a,t,i)}getChartConfig(e,a){let t=a;a||(t=(0,i.i)(this.props,this.props.data));const n=(0,i.q)(t,this.ref),{measures:o,dimensions:c,colorBy:r}=n;let s=e;const f=c||[],h=o||[],l={tooltip:(0,i.r)(n,void 0,this.ref),color:(0,i.s)(n),title:(0,i.t)(n,this.ref),series:[],...(0,i.w)(d()(n,i.x)),visualMap:(0,i.ae)(n.visualMap),calendar:{...(0,i.v)(n),...(0,i.af)(n.calendar)}};if(s&&b()(s)&&(s=[s]),!s?.length)return l;if(s=this.sortRoprtDataByMeasures(s,h),h&&h.length>0&&f&&f.length>0){const e=f[0]||{};for(let a=0;a<h.length;a++){const t=h[a]||{},o=[],c={data:[],type:"heatmap",coordinateSystem:"calendar",name:(0,i.B)(t)};for(let a=0;a<s.length;a++){const n=s[a];o.push([(0,i.ag)((0,i.n)(n[e.as])),n[t.as]])}c.data=o,c.colorBy=r,c.label=(0,i.C)(n,t.formatter?{type:t.formatter,formatterToFixed:t.formatterToFixed}:void 0,this.ref),l.series.push(c)}}return l}updateChartData(e,a,t){const n=t||this.props,o=(0,i.q)(n,this.ref),{measures:c,dimensions:d,colorBy:r}=o,{measures:s,groupField:f}=this.preProps||{};let h=e;const l=d||[],p=c||[],u=s||[];if(h){if(b()(h)&&(h=[h]),this.config.series=[],h&&h.length>0&&(h=this.sortRoprtDataByMeasures(h,p),p&&p.length>0&&l&&l.length>0)){const e=l[0]||{};for(let a=0;a<p.length;a++){const t=p[a]||{},n=[],c={data:[],type:"heatmap",coordinateSystem:"calendar",name:(0,i.B)(t)};for(let a=0;a<h.length;a++){const o=h[a];n.push([(0,i.ag)((0,i.n)(o[e.as])),o[t.as]])}c.data=n,c.colorBy=r,c.label=(0,i.C)(o,t.formatter?{type:t.formatter,formatterToFixed:t.formatterToFixed}:void 0,this.ref),this.config.series.push(c)}}a?(0!==this.config.series.length&&u.length===p.length||!this.echarts?.clear||this.echarts?.clear(),this.reloadEcharts(this.config)):(this.echarts?.clear&&this.echarts?.clear(),this.renderChart(this.config))}}updateChartConfig(e,a,t){const i=this.getChartConfig(e,t);i&&(this.config=i,this.reloadEcharts(i))}};H=(0,i._)([(0,n.A49)({type:"chart-calendar",storeType:o.DtI.name})],H);let Y=class extends A{config;chartUpdateDebounce;constructor(e,a){super(e,a),this.config=this.getChartConfig(),this.chartUpdateDebounce=s()((async(e,a)=>{const t=this.preProps||a||{};this.showLoading();const n=await(0,i.o)(e,t);this.hideLoading(),n&&n.data&&(this.curChartData=n.data,this.updateChartData(n.data,!0,e));const o=(0,i.p)(e,t);o&&this.updateChartConfig(this.curChartData,o,e),this.preProps=e}),300)}async componentDidMount(){super.componentDidMount();const e=(0,i.i)(this.props,this.props.data);this.preProps=e,this.showLoading();const{data:a}=await(0,i.h)(e);this.hideLoading(),a?(this.curChartData=a,this.updateChartData(a,e)):this.renderChart(this.config);const{dispatchEvent:t}=this.props;await t("init",a,this),this.echarts&&this.echarts.on("finished",(()=>{this.updateChartCanvasPadding(this.props.style),this.hideLoading()}))}componentDidUpdate(e){super.componentDidUpdate(e);const a=this.props.formStore?.data||this.props.data;if(this.preProps&&this.props.data!==e.data){const e=(0,i.k)(this.props,a);this.chartUpdateDebounce({...this.preProps,...e,data:a},this.preProps)}else{const e=(0,i.i)(this.props,a);this.chartUpdateDebounce(e,this.preProps)}}componentWillUnmount(){super.componentWillUnmount(),this.chartUpdateDebounce?.cancel()}doAction(e,a,t,i){const n=e?.actionType;"xxxAction"===n||super.doAction(e,a,t,i)}getChartConfig(e,a){let t=a;a||(t=(0,i.i)(this.props,this.props.data));const n=(0,i.q)(t,this.ref),{measures:o,dimensions:c,colorBy:r,bubbleField:s}=n;let f=e;const h=c||[],l=o||[];let p=s;y()(s)&&(p=(s[0]||{}).as);const u=(0,i.r)(n,void 0,this.ref),g=(0,i.v)(d()(n,i.G)),m={tooltip:u,color:(0,i.s)(n),title:(0,i.t)(n,this.ref),...(0,i.w)(d()(n,i.x)),series:[]};if(f&&b()(f)&&(f=[f]),!f?.length)return m;if(l&&l.length>0&&h&&h.length>0&&p){const e=h[0]||{},a=l[0]||{},t={data:[],links:[],type:"sankey",...g,...(0,i.ah)(n)},o=[],c=[],d=[];for(let t=0;t<f.length;t++){const n=f[t],r=(0,i.n)(n[e.as]),s=(0,i.n)(n[a.as]);d.push({source:r,target:s,value:n[p]}),o.indexOf(r)<0&&(o.push(r),c.push({name:r})),o.indexOf(s)<0&&(o.push(s),c.push({name:s}))}t.data=c,t.links=d,t.label=(0,i.C)(n,a.formatter?{type:a.formatter,formatterToFixed:a.formatterToFixed}:void 0,this.ref),m.series.push(t)}return m}updateChartData(e,a,t){const n=t||this.props,o=(0,i.q)(n,this.ref),{measures:c,dimensions:r,colorBy:s,groupField:f,bubbleField:h}=o,{measures:l,groupField:p}=this.preProps||{};let u=e;const g=r||[],m=c||[],x=l||[];let C=h;if(y()(h)&&(C=(h[0]||{}).as),u){if(b()(u)&&(u=[u]),this.config.series=[],u&&u.length>0&&m&&m.length>0&&g&&g.length>0&&C){const e=g[0]||{},a=m[0]||{},t={data:[],links:[],type:"sankey",...(0,i.v)(d()(o,i.G)),...(0,i.ah)(o)},n=[],c=[],r=[];for(let t=0;t<u.length;t++){const o=u[t],d=(0,i.n)(o[e.as]),s=(0,i.n)(o[a.as]);r.push({source:d,target:s,value:o[C]}),n.indexOf(d)<0&&(n.push(d),c.push({name:d})),n.indexOf(s)<0&&(n.push(s),c.push({name:s}))}t.data=c,t.links=r,t.label=(0,i.C)(o,a.formatter?{type:a.formatter,formatterToFixed:a.formatterToFixed}:void 0,this.ref),this.config.series.push(t)}a?(0!==this.config.series.length&&x.length===m.length||!this.echarts?.clear||this.echarts?.clear(),this.reloadEcharts(this.config)):(this.echarts?.clear&&this.echarts?.clear(),this.renderChart(this.config))}}updateChartConfig(e,a,t){const i=this.getChartConfig(e,t);i&&(this.config=i,void 0!==a?.bubbleField?(this.echarts?.clear&&this.echarts?.clear(),this.renderChart(i)):this.reloadEcharts(i))}};Y=(0,i._)([(0,n.A49)({type:"chart-sankey",storeType:o.DtI.name})],Y),t(90179),t(14449)},70927:function(){},73893:function(e,a,t){var i=t(9325),n=t(61489),o=t(99374),c=t(13222),d=i.isFinite,r=Math.min;e.exports=function(e){var a=Math[e];return function(e,t){if(e=o(e),(t=null==t?0:r(n(t),292))&&d(e)){var i=(c(e)+"e").split("e"),s=a(i[0]+"e"+(+i[1]+t));return+((i=(c(s)+"e").split("e"))[0]+"e"+(+i[1]-t))}return a(e)}}},91998:function(e,a,t){var i=t(73893)("floor");e.exports=i}}]);